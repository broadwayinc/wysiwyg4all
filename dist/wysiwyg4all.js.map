{"version":3,"file":"wysiwyg4all.js","mappings":"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","sources":["webpack://wysiwyg4all/webpack/universalModuleDefinition","webpack://wysiwyg4all/webpack/bootstrap","webpack://wysiwyg4all/webpack/runtime/define property getters","webpack://wysiwyg4all/webpack/runtime/hasOwnProperty shorthand","webpack://wysiwyg4all/webpack/runtime/make namespace object","webpack://wysiwyg4all/./node_modules/colormangle/colormangle.js","webpack://wysiwyg4all/./selectors.js","webpack://wysiwyg4all/./util.js","webpack://wysiwyg4all/./wysiwyg4all.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const colorNames = {\n    aliceblue: \"#f0f8ff\",\n    antiquewhite: \"#faebd7\",\n    aqua: \"#00ffff\",\n    aquamarine: \"#7fffd4\",\n    azure: \"#f0ffff\",\n    beige: \"#f5f5dc\",\n    bisque: \"#ffe4c4\",\n    black: \"#000000\",\n    blanchedalmond: \"#ffebcd\",\n    blue: \"#0000ff\",\n    blueviolet: \"#8a2be2\",\n    brown: \"#a52a2a\",\n    burlywood: \"#deb887\",\n    cadetblue: \"#5f9ea0\",\n    chartreuse: \"#7fff00\",\n    chocolate: \"#d2691e\",\n    coral: \"#ff7f50\",\n    cornflowerblue: \"#6495ed\",\n    cornsilk: \"#fff8dc\",\n    crimson: \"#dc143c\",\n    cyan: \"#00ffff\",\n    darkblue: \"#00008b\",\n    darkcyan: \"#008b8b\",\n    darkgoldenrod: \"#b8860b\",\n    darkgray: \"#a9a9a9\",\n    darkgreen: \"#006400\",\n    darkgrey: \"#a9a9a9\",\n    darkkhaki: \"#bdb76b\",\n    darkmagenta: \"#8b008b\",\n    darkolivegreen: \"#556b2f\",\n    darkorange: \"#ff8c00\",\n    darkorchid: \"#9932cc\",\n    darkred: \"#8b0000\",\n    darksalmon: \"#e9967a\",\n    darkseagreen: \"#8fbc8f\",\n    darkslateblue: \"#483d8b\",\n    darkslategray: \"#2f4f4f\",\n    darkslategrey: \"#2f4f4f\",\n    darkturquoise: \"#00ced1\",\n    darkviolet: \"#9400d3\",\n    deeppink: \"#ff1493\",\n    deepskyblue: \"#00bfff\",\n    dimgray: \"#696969\",\n    dimgrey: \"#696969\",\n    dodgerblue: \"#1e90ff\",\n    firebrick: \"#b22222\",\n    floralwhite: \"#fffaf0\",\n    forestgreen: \"#228b22\",\n    fuchsia: \"#ff00ff\",\n    gainsboro: \"#dcdcdc\",\n    ghostwhite: \"#f8f8ff\",\n    goldenrod: \"#daa520\",\n    gold: \"#ffd700\",\n    gray: \"#808080\",\n    green: \"#008000\",\n    greenyellow: \"#adff2f\",\n    grey: \"#808080\",\n    honeydew: \"#f0fff0\",\n    hotpink: \"#ff69b4\",\n    indianred: \"#cd5c5c\",\n    indigo: \"#4b0082\",\n    ivory: \"#fffff0\",\n    khaki: \"#f0e68c\",\n    lavenderblush: \"#fff0f5\",\n    lavender: \"#e6e6fa\",\n    lawngreen: \"#7cfc00\",\n    lemonchiffon: \"#fffacd\",\n    lightblue: \"#add8e6\",\n    lightcoral: \"#f08080\",\n    lightcyan: \"#e0ffff\",\n    lightgoldenrodyellow: \"#fafad2\",\n    lightgray: \"#d3d3d3\",\n    lightgreen: \"#90ee90\",\n    lightgrey: \"#d3d3d3\",\n    lightpink: \"#ffb6c1\",\n    lightsalmon: \"#ffa07a\",\n    lightseagreen: \"#20b2aa\",\n    lightskyblue: \"#87cefa\",\n    lightslategray: \"#778899\",\n    lightslategrey: \"#778899\",\n    lightsteelblue: \"#b0c4de\",\n    lightyellow: \"#ffffe0\",\n    lime: \"#00ff00\",\n    limegreen: \"#32cd32\",\n    linen: \"#faf0e6\",\n    magenta: \"#ff00ff\",\n    maroon: \"#800000\",\n    mediumaquamarine: \"#66cdaa\",\n    mediumblue: \"#0000cd\",\n    mediumorchid: \"#ba55d3\",\n    mediumpurple: \"#9370db\",\n    mediumseagreen: \"#3cb371\",\n    mediumslateblue: \"#7b68ee\",\n    mediumspringgreen: \"#00fa9a\",\n    mediumturquoise: \"#48d1cc\",\n    mediumvioletred: \"#c71585\",\n    midnightblue: \"#191970\",\n    mintcream: \"#f5fffa\",\n    mistyrose: \"#ffe4e1\",\n    moccasin: \"#ffe4b5\",\n    navajowhite: \"#ffdead\",\n    navy: \"#000080\",\n    oldlace: \"#fdf5e6\",\n    olive: \"#808000\",\n    olivedrab: \"#6b8e23\",\n    orange: \"#ffa500\",\n    orangered: \"#ff4500\",\n    orchid: \"#da70d6\",\n    palegoldenrod: \"#eee8aa\",\n    palegreen: \"#98fb98\",\n    paleturquoise: \"#afeeee\",\n    palevioletred: \"#db7093\",\n    papayawhip: \"#ffefd5\",\n    peachpuff: \"#ffdab9\",\n    peru: \"#cd853f\",\n    pink: \"#ffc0cb\",\n    plum: \"#dda0dd\",\n    powderblue: \"#b0e0e6\",\n    purple: \"#800080\",\n    rebeccapurple: \"#663399\",\n    red: \"#ff0000\",\n    rosybrown: \"#bc8f8f\",\n    royalblue: \"#4169e1\",\n    saddlebrown: \"#8b4513\",\n    salmon: \"#fa8072\",\n    sandybrown: \"#f4a460\",\n    seagreen: \"#2e8b57\",\n    seashell: \"#fff5ee\",\n    sienna: \"#a0522d\",\n    silver: \"#c0c0c0\",\n    skyblue: \"#87ceeb\",\n    slateblue: \"#6a5acd\",\n    slategray: \"#708090\",\n    slategrey: \"#708090\",\n    snow: \"#fffafa\",\n    springgreen: \"#00ff7f\",\n    steelblue: \"#4682b4\",\n    tan: \"#d2b48c\",\n    teal: \"#008080\",\n    thistle: \"#d8bfd8\",\n    tomato: \"#ff6347\",\n    turquoise: \"#40e0d0\",\n    violet: \"#ee82ee\",\n    wheat: \"#f5deb3\",\n    white: \"#ffffff\",\n    whitesmoke: \"#f5f5f5\",\n    yellow: \"#ffff00\",\n    yellowgreen: \"#9acd32\",\n};\n\nclass ColorMangle {\n    /**\n     * @param {string} [color='#4848db'] - Argument string can be either color name string or any type of HTML color codes (hex, rgb, hsl).\n     */\n    constructor(color = '#4848db', fineTuned = true) {\n        this.fineTuned = fineTuned;\n\n        let format = this._colorType(color);\n        this.type = format.type;\n        this.color = format.color;\n    }\n\n    _colorType(color = this.color, throwErr = true) {\n        let chkType, type;\n\n        try {\n            if (!color)\n                throw 'invalid color';\n\n            if (typeof color === 'object' && color.string)\n                color = color.string;\n\n            if (typeof color === 'string')\n                color = color.toLowerCase();\n            else\n                throw 'invalid color';\n\n            if (color === this.color)\n                return { type: this.type, color: this.color };\n\n            if (colorNames[color])\n                return { type: 'hex', color: colorNames[color] };\n\n            chkType = color.match(/^(rgba?|rgb?|hsla?|#)/g);\n\n            if (Array.isArray(chkType)) {\n\n                if (chkType[0] === '#') {\n\n                    if (color.length === 4)\n                        // convert shorthand hex\n                        color = color[0] + color[1] + color[1] + color[2] + color[2] + color[3] + color[3];\n\n                    if (/^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(color))\n                        // is valid hex\n                        type = 'hex';\n\n                    else\n                        throw 'invalid hex';\n\n                } else if (color[color.length - 1] === ')')\n                    // hex, rgb, rgba, hsl, hsla\n                    type = chkType[0];\n\n                return { type, color };\n\n            }\n\n        } catch (err) {\n            if (throwErr)\n                throw err + ':' + color;\n        }\n\n        return {};\n    }\n\n    _extractDigit(color_arg = this.color) {\n        let { type = this.type, color = this.color } = this._colorType(color_arg);\n\n        if (type === 'hex')\n            color = this.rgba(1, color).string;\n\n        const value = [];\n\n        for (const i of color.match(/\\d+(\\.\\d+)?/g))\n            value.push(parseFloat(i));\n\n        if (value.length < 4) value.push(1);\n\n        return value;\n    }\n\n    /**\n     * @return {number} - Retrieves color alpha value (range 0 ~ 1)\n     */\n    getAlpha(color_arg = this.color) {\n        let extract = this._extractDigit(color_arg);\n        return extract ? extract[3] || 1 : 1;\n    }\n\n    /**\n     * Generates color scheme object.\n     * @typedef {Object} colorScheme\n     * @property {string} --alert\n     * @property {string} --alert-text\n     * @property {string} --analogous\n     * @property {string} --analogous-text\n     * @property {string} --background\n     * @property {string} --background-focus\n     * @property {string} --background-focus-text\n     * @property {string} --background-text\n     * @property {string} --background-text_focus\n     * @property {string} --button\n     * @property {string} --button-text\n     * @property {string} --complementary\n     * @property {string} --complementary-text\n     * @property {string} --content\n     * @property {string} --content-focus\n     * @property {string} --content-focus-text\n     * @property {string} --content-text\n     * @property {string} --content-text_focus\n     * @property {string} --focus\n     * @property {string} --focus-text\n     * @property {string} --placeholder\n     * @property {string} --saturate\n     * @property {string} --saturate-text\n     * @property {string} --success\n     * @property {string} --success-text\n     * @property {string} --text-button\n     * @param {string} [color=this.color] - Focus color for color scheme\n     * @param {boolean} [darkMode=false] - Dark mode when true\n     * @return {colorScheme} - { [&lt;CSS Variable names&gt;] : &lt;string | HTML color string&gt; }\n     */\n    colorScheme(color = this.color, darkMode = false) {\n\n        let opacity = {\n            text: { black: 0.88, white: 1 },\n            // soft: { black: 0.66, white: 0.88 },\n            placeholder: { black: 0.44, white: 0.55 },\n            // transparent: { black: 0.22, white: 0.33 },\n            // shade: { black: 0.066, white: 0.11 },\n            // shadow: { black: 0.033, white: 0.066 }\n        };\n\n        let template = {\n            '--background': darkMode ? '#121212' : '#f7f7f7',\n            '--content': darkMode ? '#2b2b2b' : '#ffffff',\n            // '--toolbar': darkMode ? '#2b2b2b' : '#ffffff'\n        };\n\n        let focusOriginal;\n        let focusSat;\n        let content_isHighLuminance = this.isHighLuminance(template['--content']);\n        let focus = (() => {\n            if (color && typeof color === 'object') {\n                if (color['--button']) {\n                    focusOriginal = color['--button'];\n                    return focusOriginal;\n                }\n                for (let key of color)\n                    if (key.includes('focus')) {\n                        focusOriginal = color[key];\n                        return focusOriginal;\n                    }\n            }\n\n            focusOriginal = color;\n            focusSat = this.matchLuminance(color, template['--content'], content_isHighLuminance ? 1.5 : 4.5);\n            return darkMode ? focusSat : color;\n        })();\n\n        let compDir = 1;\n        let analogous = (() => {\n            let deg = 30;\n            let analogous = this.analogous(focusOriginal, deg);\n            let focusHSL = this.hsla(1, focusOriginal).h;\n            let an1HSL = this.hsla(1, analogous[0]).h;\n            let an2HSL = this.hsla(1, analogous[1]).h;\n\n            if (focusHSL + deg > 360)\n                an1HSL = an1HSL + 360;\n            if (focusHSL - deg < 0)\n                an2HSL = 360 - an2HSL;\n\n            if (Math.abs(focusHSL - an1HSL) > Math.abs(focusHSL - an2HSL)) {\n                compDir = -1;\n                return analogous[1];\n            }\n\n            return analogous[0];\n        })();\n\n        let complementary = this.matchLuminance(this.complementary(focus, 60 * compDir), template['--background'], 3.1);\n        let fixedValue = {\n            // '--shadow': 'rgba(0, 0, 0, 0.033)',\n            // '--shade': 'rgba(0, 0, 0, 0.066)',\n            // '--transparent': 'rgba(0, 0, 0, 0.22)',\n            '--placeholder': darkMode ? 'rgba(255, 255, 255, 0.55)' : 'rgba(0, 0, 0, 0.44)'\n        };\n\n        let darkModeAnalogous = darkMode ? this.matchLuminance(analogous, template['--background'], 4.5) : analogous;\n        let analogousNude = this.matchLuminance(analogous, template['--background'], 4.5);\n\n        for (let k in template) {\n            template[k + '-text'] = this.textColor(opacity.text, template[k]);\n            template[k + '-focus'] = k.includes('--background') ? darkModeAnalogous : focus;\n            template[k + '-text_focus'] = k.includes('--background') ? analogousNude : this.matchLuminance(darkMode ? focus : focusSat, template[k], 1.66);\n            template[k + '-focus-text'] = this.textColor(1, k.includes('--background') ? darkModeAnalogous : focus);\n        }\n\n        template['--focus'] = focusOriginal;\n        template['--focus-text'] = this.textColor(1, focusOriginal);\n        template['--saturate'] = focusSat;\n        template['--saturate-text'] = this.textColor(1, focusSat);\n\n        Object.assign(template, {\n            '--complementary': complementary,\n            '--complementary-text': this.textColor(1, complementary),\n            '--analogous': analogous,\n            '--analogous-text': this.textColor(1, analogous),\n            '--alert': 'tomato',\n            // '--alert-text': 'white',\n            '--success': 'limegreen',\n            // '--success-text': 'black',\n            '--button': focus,\n            '--text-button': darkMode ? this.matchLuminance(focusSat, template[\"--content\"], 7) : this.contrastRatio(template[\"--content\"], focusSat) < 4.5 ? \"inherit\" : focusSat,\n            '--button-text': this.textColor(1, focus)\n        });\n\n        // for (let k in template) {\n        //     if (!template[k] || template[k] === \"\")\n        //         continue;\n\n        //     let highLum = this.isHighLuminance(template[k]);\n        //     for (let op of ['soft', 'placeholder', 'transparent', 'shadow', 'shade']) {\n\n        //         template[k + '_' + op] = this.rgba(opacity[op][highLum ? 'white' : 'black'], template[k]).string;\n        //     }\n        // }\n\n        // template['--button-border'] = (() => {\n        //     let focus_isHighLuminance = this.isHighLuminance(focus);\n        //     let border = this.matchLuminance(this.adjustLuminance(-1, template['--button']), template['--button'], 1.15, -1, focus_isHighLuminance ? 'luminance' : 'brightness');\n        //     return focus_isHighLuminance ? this.rgba(0.5, border).string : border;\n        // })();\n\n        if (color && typeof color === 'object') {\n            for (let key of color)\n                if (key[0] !== '-')\n                    throw 'invalid color scheme';\n            Object.assign(template, color);\n        }\n\n        let unordered = Object.assign(template, fixedValue);\n        return Object.keys(unordered).sort().reduce(\n            (obj, key) => {\n                obj[key] = unordered[key];\n                return obj;\n            },\n            {}\n        );\n    }\n\n    /**\n     * Match luminance of target_color with base color\n     * @param {string} target_color - Target color\n     * @param {string} [color_arg=this.color] - Base color\n     * @param {number} [target_ratio] - Set contrast ratio difference\n     * @param {number} [direction] - Adjust direction. Adjust to darker luminance when -1. Brighter when 1, otherwise auto.\n     * @param {string} [method] - Luminance adjustment mode: 'brightness | luminance | saturation'\n     * @return {string} - HTML color string\n     */\n    matchLuminance(target_color, color_arg = this.color, target_ratio, direction, method) {\n        let { color } = this._colorType(color_arg);\n        let target = this._colorType(target_color).color;\n\n        if (target_ratio) {\n            let adj = target;\n            let m = this.contrastRatio(adj, color);\n            if (m < target_ratio) {\n                let dir = direction || this.isHighLuminance(color) ? -1 : 1;\n                let count = 100;\n                while (m < target_ratio && count--) {\n                    let adj_set;\n\n                    switch (method) {\n                        case 'brightness':\n                            adj_set = this.adjustBrightness(1 * dir, adj);\n                            break;\n                        case 'luminance':\n                            adj_set = this.adjustLuminance(1 * dir, adj);\n                            break;\n                        default:\n                            adj_set = this.adjustBrightness(1 * dir, { legacy: true, color: adj });\n                    }\n\n                    if (adj === adj_set)\n                        break;\n                    adj = adj_set;\n\n                    m = this.contrastRatio(adj, color);\n                }\n            }\n            return this.hex(adj);\n        } else {\n            let main_lum = this._luminance(color);\n            let lum = this._luminance(target);\n\n            if (Math.abs(lum - main_lum) < 0.01)\n                return target;\n\n            let adj = this.hex(target);\n\n            let dir = (lum, main_lum) => {\n                return lum < main_lum ? 1 : -1;\n            };\n\n            let currDir = dir(lum, main_lum);\n            while (Math.abs(lum - main_lum) > 0.01 && currDir === dir(lum, main_lum)) {\n                let adj_set;\n                switch (method) {\n                    case 'saturation':\n                        adj_set = this.adjustBrightness(currDir, { color: adj, legacy: true });\n                        break;\n                    case 'luminance':\n                        adj_set = this.adjustLuminance(currDir, adj);\n                        break;\n                    default:\n                        adj_set = this.adjustBrightness(currDir, adj);\n                }\n                let lum_pre = this._luminance(adj_set);\n                if (lum_pre === lum || currDir !== dir(lum_pre, main_lum))\n                    break;\n                lum = lum_pre;\n                adj = adj_set;\n            }\n            return this.hex(adj);\n        }\n    }\n\n    /**\n     * Generate analogous color\n     * @param {string} [color_arg=this.color] - Target color\n     * @param {number} [deg=30] - Amount of hue separation\n     * @return {Array} - 2 analogous color is returned. [&lt;hsla color&gt;, ... ]\n     */\n    analogous(color_arg = this.color, deg = 30) {\n        let { color } = this._colorType(color_arg);\n\n        let spin = (h, v) => {\n            let val = h + v;\n            return val < 0 ? 360 + val : val > 360 ? val - 360 : val;\n        };\n\n        let hsl = this.hsla(this.getAlpha(color), color);\n        let plus = 'hsla(' + spin(hsl.h, deg) + ', ' + hsl.s + '%, ' + hsl.l + '%, ' + hsl.a + ')';\n        let minus = 'hsla(' + spin(hsl.h, -deg) + ', ' + hsl.s + '%, ' + hsl.l + '%, ' + hsl.a + ')';\n\n        return [this.matchLuminance(plus, color), this.matchLuminance(minus, color)];\n    }\n\n    /**\n     * Generate complementary color\n     * @param {string} [color_arg=this.color] - Target color\n     * @param {number} [add=0] - Add or subtract hue from complementary color\n     * @return {string} - HEX color string\n     */\n    complementary(color_arg = this.color, add = 0) {\n        let { color } = this._colorType(color_arg);\n\n        let hsl = this.hsla(this.getAlpha(color), color);\n\n        if (hsl.h < 180)\n            hsl.h += 180;\n        else\n            hsl.h -= 180;\n\n        hsl.h += add;\n        hsl.h = hsl.h > 360 ? hsl.h - 360 : hsl.h < 0 ? 360 - hsl.h : hsl.h;\n\n        return this.hex(this._toString(hsl));\n    }\n\n    /**\n     * @param {string} [color_arg=this.color] - Target color\n     * @param {boolean} [fineTuned=false] - Custom Color space is applied when true\n     * @return {boolean} - True if color has high luminance\n     */\n    isHighLuminance(color_arg = this.color, fineTuned = this.fineTuned) {\n        const { r, g, b } = this.rgba(1, this._colorType(color_arg).color);\n\n        let yiq =\n            fineTuned ?\n                ((r * (299 - 64)) + (g * (587 * 1.25)) + (b * 114)) / 1000 : // Fine tuned\n                ((r * 299) + (g * 587) + (b * 114)) / 1000; // Standard color space formula\n\n        // Web standard of color space threshold is 128\n        return (yiq >= (fineTuned ? 188 : 128));\n    }\n\n    _luminance(color_arg = this.color) {\n        let rgb = this.rgba(1, color_arg);\n        let a = [rgb.r, rgb.g, rgb.b].map(function (v) {\n            v /= 255;\n            return v <= 0.03928\n                ? v / 12.92\n                : Math.pow((v + 0.055) / 1.055, 2.4);\n        });\n\n        return a[0] * 0.2126 + a[1] * 0.7152 + a[2] * 0.0722;\n    }\n\n    _toString(col) {\n        let numberOrNot = (n, def = 100) => {\n            return typeof n === 'number' ? n : def;\n        };\n        if (typeof col === 'string')\n            return col;\n\n        if (col.hasOwnProperty('h'))\n            return 'hsla(' + (col.h || 0) + ', ' + numberOrNot(col.s) + '%, ' + numberOrNot(col.l) + '%, ' + numberOrNot(col.a, 1) + ')';\n\n        if (col.hasOwnProperty('r'))\n            return 'rgba(' + numberOrNot(col.r) + ', ' + numberOrNot(col.g) + ', ' + numberOrNot(col.b) + ', ' + numberOrNot(col.a, 1) + ')';\n        throw col;\n    }\n\n    /**\n     * Returns contrast ratio between the given color.\n     * Useful to determine if the given color is suitable for text with the constructed color as a background.\n     * @param {string} color_arg1 - Color string you want to compare luminance ratio.\n     * @param {string} [color_arg2=this.color] - Color string you want to compare with color_arg1\n     * @return {number} - Contrast ratio\n     */\n    contrastRatio(color_arg1, color_arg2 = this.color) {\n        let lum1 = this._luminance(color_arg2) + 0.05;\n        let lum2 = this._luminance(color_arg1) + 0.05;\n\n        return lum1 > lum2 ? lum1 / lum2 : lum2 / lum1;\n    }\n\n    /**\n     * Returns suitable text color (Black / White).\n     * @param {(number | Object)} opacity - Can set returning color values opacity.\n     * @param {number} opacity.black - Set returning color values opacity when the result color is black.\n     * @param {number} opacity.white - Set returning color values opacity when the result color is white.\n     * @param {(string|Object)} [option=this.color] - Background color of text\n     * @param {(string|Object)} [option.color=this.color] - Background color of text\n     * @param {(string|Object)} [option.fineTuned=true] - Follows standard color space calculation when false\n     * @return {string | null} - HTML color string\n     */\n    textColor(opacity = 1, option = this.color) {\n\n        if (typeof option === 'string')\n            option = { color: option };\n\n        let { color = this.color, fineTuned = true } = option;\n\n        color = this._colorType(color).color;\n\n        // returns null if color opacity is below 0.5\n        if (this.getAlpha(color) < 0.5)\n            return \"\";\n\n        let blackOpacity, whiteOpacity;\n\n        if (typeof opacity === 'number' && opacity < 1) {\n            blackOpacity = opacity;\n            whiteOpacity = opacity;\n        } else if (opacity && typeof opacity === 'object') {\n            for (let k of ['black', 'white']) {\n                let opa = opacity[k];\n                if (typeof opa === 'number' && opa < 1) {\n                    if (k === 'black')\n                        blackOpacity = opa;\n                    else if (k === 'white')\n                        whiteOpacity = opa;\n                }\n            }\n        }\n\n        const opa = (v) => {\n            if (typeof v === 'number') {\n                if (v < 1 && v > 0) return v;\n                else if (v > 1) return 1;\n                else return 0;\n            } else return 1;\n        };\n\n        if (this.isHighLuminance(color, fineTuned))\n            return blackOpacity ? `rgba(0, 0, 0, ${opa(blackOpacity)})` : 'black';\n\n        return whiteOpacity ? `rgba(255, 255, 255, ${opa(whiteOpacity)})` : 'white';\n    }\n\n    /**\n     * Returns hsla color\n     * @param {number} [opacity] - Set opacity for returning color value.\n     * @param {string} [color_arg=this.color] - Color to convert to hsla string\n     * @return {Object} - { h: &lt;number&gt;, s: &lt;number&gt;, l: &lt;number&gt;, r: &lt;number&gt;, g: &lt;number&gt;, b: &lt;number&gt;, a: &lt;number&gt;, string: &lt;string | rgba color string&gt; }\n     */\n    hsla(opacity, color_arg = this.color) {\n        const { type = this.type, color = this.color } = this._colorType(color_arg);\n\n        const hsl = (r, g, b) => {\n            r /= 255;\n            g /= 255;\n            b /= 255;\n\n            let c_min = Math.min(r, g, b),\n                c_max = Math.max(r, g, b),\n                delta = c_max - c_min,\n                h = 0,\n                s = 0,\n                l = 0;\n\n            if (delta === 0)\n                h = 0;\n            else if (c_max === r)\n                h = ((g - b) / delta) % 6;\n            else if (c_max === g)\n                h = (b - r) / delta + 2;\n            else\n                h = (r - g) / delta + 4;\n\n            h = Math.round(h * 60);\n\n            if (h < 0) h += 360;\n\n            l = (c_max + c_min) / 2;\n            s = delta === 0 ? 0 : delta / (1 - Math.abs(2 * l - 1));\n            s = +(s * 100).toFixed(1);\n            l = +(l * 100).toFixed(1);\n            return { h, s, l };\n        };\n\n        if (type === 'hex') {\n            opacity = typeof opacity === 'number' ? opacity : 1;\n            const rgba = this.rgba(opacity, color);\n            const { r, g, b, a } = rgba;\n            const { h, s, l } = hsl(r, g, b);\n\n            return {\n                r, g, b, a,\n                h: h,\n                s: s,\n                l: l,\n                string: this._toString({ h, s, l, a: opacity })\n            };\n\n        } else {\n\n            const digit = this._extractDigit(color);\n            opacity = typeof opacity === 'number' ? opacity : digit[3] || 1;\n\n            if (type.includes('hsl')) {\n                const { r, g, b, a } = this.rgba(opacity, color);\n\n                return {\n                    r, g, b, a,\n                    h: digit[0],\n                    s: digit[1],\n                    l: digit[2],\n                    string: this._toString({\n                        h: digit[0],\n                        s: digit[1],\n                        l: digit[2],\n                        a\n                    })\n                };\n\n            } else if (type.includes('rgb')) {\n                const value = {\n                    r: digit[0],\n                    g: digit[1],\n                    b: digit[2],\n                    a: opacity\n                };\n                const { h, s, l } = hsl(value.r, value.g, value.b);\n\n                return Object.assign(value, {\n                    r: value.r,\n                    g: value.g,\n                    b: value.b,\n                    h: h,\n                    s: s,\n                    l: l,\n                    a: value.a,\n                    string: this._toString({ h, s, l, a: value.a })\n                });\n\n            }\n        }\n    }\n\n    /**\n     * Returns hex color string\n     * @param {string} [color_arg=this.color] - Color to convert to hex string\n     * @return {string} - HEX color string\n     */\n    hex(color_arg = this.color) {\n        const { type = this.type, color = this.color } = this._colorType(color_arg);\n\n        if (type.includes('rgb') || type.includes('hsl')) {\n            const rgba = this.rgba(1, color);\n            return '#' + ((1 << 24) + (rgba.r << 16) + (rgba.g << 8) + rgba.b).toString(16).slice(1);\n        }\n\n        return color;\n    }\n\n    /**\n     * Returns rgba color\n     * @param {number} [opacity] - Set opacity of returning color\n     * @param {string} [color_arg=this.color] - Color to convert to rgba string\n     * @return {Object} - { r: &lt;number&gt;, g: &lt;number&gt;, b: &lt;number&gt;, a: &lt;number&gt;, string: &lt;string | HTML color string&gt; }\n     */\n    rgba(opacity, color_arg = this.color) {\n        const { type = this.type, color = this.color } = this._colorType(color_arg);\n\n        if (type === 'hex') {\n            const hex = color;\n            let rgbObject = { r: null, g: null, b: null };\n            let hexValues = hex.match(/[a-fA-F0-9]{2}/g);\n\n            if (hex.length === 4) {\n                hexValues = hex.match(/[a-fA-F0-9]{1}/g);\n                hexValues = hexValues.map(hex => \"\" + hex + hex);\n            }\n            let count = 0;\n            for (const key in rgbObject) {\n                rgbObject[key] = parseInt(hexValues[count], 16);\n                count++;\n            }\n\n            const opacity_value = typeof opacity === 'number' ? opacity : 1;\n            let { r, g, b } = rgbObject;\n\n            return {\n                ...rgbObject,\n                a: opacity_value,\n                string: this._toString({\n                    r: +r, g: +g, b: +b, a: opacity_value\n                })\n            };\n\n        } else {\n            const digit = this._extractDigit(color);\n            const a = typeof opacity === 'number' ? opacity : digit[3] || 1;\n\n            if (type.includes('rgb')) {\n\n                let value = {\n                    r: digit[0],\n                    g: digit[1],\n                    b: digit[2],\n                    a\n                };\n\n                return Object.assign({\n                    string: this._toString(value)\n                }, value);\n\n            } else if (type.includes('hsl')) {\n\n                let h = digit[0];\n                let s = digit[1];\n                let l = digit[2];\n\n                s /= 100;\n                l /= 100;\n\n                let c = (1 - Math.abs(2 * l - 1)) * s,\n                    x = c * (1 - Math.abs((h / 60) % 2 - 1)),\n                    m = l - c / 2,\n                    r = 0,\n                    g = 0,\n                    b = 0;\n                if (0 <= h && h < 60) {\n                    r = c;\n                    g = x;\n                    b = 0;\n                } else if (60 <= h && h < 120) {\n                    r = x;\n                    g = c;\n                    b = 0;\n                } else if (120 <= h && h < 180) {\n                    r = 0;\n                    g = c;\n                    b = x;\n                } else if (180 <= h && h < 240) {\n                    r = 0;\n                    g = x;\n                    b = c;\n                } else if (240 <= h && h < 300) {\n                    r = x;\n                    g = 0;\n                    b = c;\n                } else if (300 <= h && h < 360) {\n                    r = c;\n                    g = 0;\n                    b = x;\n                }\n                r = Math.round((r + m) * 255);\n                g = Math.round((g + m) * 255);\n                b = Math.round((b + m) * 255);\n\n                return {\n                    r, g, b, a,\n                    string: this._toString({ r, g, b, a })\n                };\n\n            }\n        }\n    }\n\n    /**\n     * @param {number} value - Adjust value by percent. range: -100 ~ 100\n     * @param {(string|Object)} [option=this.color] - Color to adjust || additional option.\n     * @param {(string|Object)} [option.color_arg=this.color] - Color to adjust.\n     * @param {(string|Object)} [option.legacy=false] - Legacy adjust mode. Adjust brightness by saturation and luminance.\n     * @return {string} - Brightness adjusted HTML color string\n     */\n    adjustBrightness(value = 0, option = this.color) {\n        let color_arg, legacy = false;\n        if (typeof option === 'string')\n            color_arg = option || this.color;\n        else {\n            color_arg = option.color || this.color;\n            legacy = option.legacy || false;\n        }\n\n        if (legacy) {\n            let { color } = this._colorType(color_arg);\n            let col = this.hsla(this.getAlpha(color), color);\n\n            let limit = (v, limit = 100) => {\n                return v > limit ? limit : v < 0 ? 0 : v;\n            };\n\n            col.s += ((value > 0 ? (100 - col.s) : col.s) / 100) * value;\n            col.s = limit(col.s);\n            col.l += ((value > 0 ? (100 - col.l) : col.l) / 100) * value;\n            col.l = limit(col.l);\n\n            return this._toString(col);\n        }\n\n        let { type = this.type, color = this.color } = this._colorType(color_arg);\n\n        if (value === 0)\n            return color;\n\n        const opacity = type === 'hex' ? 1 : this._extractDigit(color)[3] || 1;\n        const rgb = this.rgba(opacity, color);\n\n        let rgbRange = {\n            r: 0 - rgb['r'],\n            g: 0 - rgb['g'],\n            b: 0 - rgb['b']\n        };\n\n        if (value > 0) {\n            Object.keys(rgbRange).map(function (key) {\n                rgbRange[key] = 255 - rgb[key];\n            });\n        }\n\n        ['r', 'g', 'b'].map(function (key) {\n            rgb[key] += parseInt(rgbRange[key] / 100 * Math.abs(value));\n        });\n\n        const result = 'rgb(' + rgb.r + ', ' + rgb.g + ', ' + rgb.b + ')';\n\n        if (type === 'hex')\n            return this.hex(result);\n\n        else if (type.includes('rgb'))\n            return this.rgba(rgb.a, result).string;\n\n        else if (type.includes('hsl'))\n            return this.hsla(rgb.a, result).string;\n    }\n\n    /**\n     * @param {number} value - Adjust value by percent. range: -100 ~ 100\n     * @param {string} [color_arg=this.color] - Color to adjust.\n     * @return {string} - Luminance adjusted hsla color string\n     */\n    adjustLuminance(value = 0, color_arg = this.color) {\n        let { color } = this._colorType(color_arg);\n        let col = this.hsla(this.getAlpha(color), color);\n\n        let limit = (v, limit = 100) => {\n            return v > limit ? limit : v < 0 ? 0 : v;\n        };\n\n        col.l += ((value > 0 ? (100 - col.l) : col.l) / 100) * value;\n        col.l = limit(col.l);\n\n        return this._toString(col);\n    }\n\n    /**\n     * @param {number} value - Adjust value by percent. range: -100 ~ 100\n     * @param {string} [color_arg=this.color] - Color to adjust.\n     * @return {string} - Saturation adjusted hsla color string\n     */\n    adjustSaturation(value = 0, color_arg = this.color) {\n        let { color } = this._colorType(color_arg);\n        let col = this.hsla(this.getAlpha(color), color);\n\n        let limit = (v, limit = 100) => {\n            return v > limit ? limit : v < 0 ? 0 : v;\n        };\n\n        col.s += ((value > 0 ? (100 - col.s) : col.s) / 100) * value;\n        col.s = limit(col.s);\n\n        return this._toString(col);\n    }\n}\n\nexport { ColorMangle };","function adjustSelection(\n    target,\n    ceilingElement_query\n) {\n    // Adjusts the selection range in the document\n    // target: { node: [Node], position: [number] }\n    // ceilingElement_query: [string] (CSS selector)\n    // Returns: { startLine: Node, endLine: Node }\n    // If target is null, it will not set the selection range\n    // If ceilingElement_query is null, it will not set the startLine and endLine\n\n    let toArray = (v, allowObject = false) => {\n        if (Array.isArray(v)) return v;\n        else if (\n            (typeof v === \"string\" && v) ||\n            typeof v === \"number\" ||\n            typeof v === \"boolean\" ||\n            (allowObject && typeof v === \"object\")\n        )\n            return [v];\n        else return [];\n    };\n\n    let setRange = !!target;\n\n    let { node = null, position = true } = target || {};\n\n    let sel = window.getSelection();\n    if (!sel) return null;\n\n    let range = null;\n    try {\n        range = sel.getRangeAt(0);\n    } catch (err) {\n        if (setRange) range = document.createRange();\n    }\n\n    if (setRange) {\n        node = toArray(node, true);\n        position = toArray(position, true);\n\n        for (let p of position)\n            if (typeof p !== \"number\" && typeof p !== \"boolean\" && p !== null)\n                throw \"INVALID_POSITION\";\n\n        for (let n of node) {\n            if (!(n instanceof Node) && n !== null) {\n                if (n === false) return;\n                throw \"INVALID_NODE\";\n            }\n        }\n\n        const setTarget = (node, position) => {\n            if (node instanceof Node) {\n                if (node.nodeType === 1) {\n                    if (typeof position === \"boolean\")\n                        while (position === false ? node.lastChild : node.firstChild)\n                            node = position === false ? node.lastChild : node.firstChild;\n                    else if (typeof position === \"number\") {\n                        let textLength = 0;\n                        nodeCrawler(\n                            (n) => {\n                                if (n.nodeType === 3 && n.textContent.length) {\n                                    let length = n.textContent.length;\n                                    if (\n                                        n.parentNode.getAttribute(\"contenteditable\") === \"false\"\n                                    ) {\n                                        if (position - (textLength + length) >= 0)\n                                            textLength += length;\n                                        else {\n                                            position = length;\n                                            return \"BREAK\";\n                                        }\n                                        return n;\n                                    } else {\n                                        node = n;\n\n                                        if (position - (textLength + length) >= 0) {\n                                            textLength += length;\n                                        } else {\n                                            position -= textLength;\n                                            return \"BREAK\";\n                                        }\n                                    }\n                                }\n                                return n;\n                            },\n                            {\n                                node,\n                            }\n                        );\n                        if (node.nodeType === 1) {\n                            let text = document.createTextNode(\"\\u200B\");\n                            node.insertBefore(text, node.childNodes[0]);\n                            node = text;\n                            position = 0;\n                        }\n                    }\n\n                    if (node.nodeName === \"BR\" && node.parentNode.childNodes.length > 1)\n                        node = node.previousSibling || node;\n                }\n                if (typeof position === \"boolean\")\n                    position = position ? 0 : node.textContent.length;\n                else\n                    position =\n                        position > node.textContent.length\n                            ? node.textContent.length\n                            : position;\n\n                return { node, position };\n            }\n        };\n\n        let doCollapse = false,\n            setEnd,\n            setStart = (() => {\n                node[0] = node[0] === null ? range.startContainer : node[0];\n                position[0] = position[0] === null ? range.startOffset : position[0];\n                return setTarget(node[0], position[0]);\n            })();\n        range.setStart(setStart.node, setStart.position);\n\n        if (position.length > 1)\n            setEnd = setTarget(\n                (node[1] === null ? range.endContainer : node[1]) || node[0],\n                position[1] === null ? range.endOffset : position[1]\n            );\n        else {\n            setEnd = setStart;\n            doCollapse = true;\n        }\n\n        range.setEnd(setEnd.node, setEnd.position);\n\n        if (doCollapse) range.collapse(true);\n\n        sel.removeAllRanges();\n        sel.addRange(range);\n    }\n\n    if (ceilingElement_query && range) {\n        let startLine, endLine;\n        for (let q of ceilingElement_query) {\n            let e =\n                range.endContainer.nodeType === 3\n                    ? range.endContainer.parentNode\n                    : range.endContainer;\n            let s =\n                range.startContainer.nodeType === 3\n                    ? range.startContainer.parentNode\n                    : range.startContainer;\n\n            if (!startLine && s.closest(q))\n                startLine = climbUpToEldestParent(s, s.closest(q));\n            if (!endLine && e.closest(q))\n                endLine = climbUpToEldestParent(e, e.closest(q));\n\n            if (startLine && endLine) break;\n        }\n\n        range.startLine = startLine;\n        range.endLine = endLine;\n    }\n\n    return range;\n}\n\nfunction nodeCrawler(run, option) {\n    const { parentNode, node, startFromEldestChild, startNode } = option;\n    // const options = {\n    //   node: document.getElementById('content'),\n    //   parentNode: document.body,\n    //   startFromEldestChild: true\n    //   startNode: document.getElementById('start') // optional\n    // };\n\n    if (startFromEldestChild && !parentNode)\n        throw new Error(\"Need parentNode to crawl up single child\");\n\n    if (!node || !(node instanceof Node || node?.commonAncestorContainer))\n        throw new Error(\"No node to crawl\");\n\n    let outputNodes = [],\n        nodeIsRange = !!node.commonAncestorContainer,\n        commonContainer = null,\n        parentAnchor;\n\n    if (parentNode && parentNode instanceof Node && parentNode?.nodeType === 1)\n        parentAnchor = parentNode;\n\n    if (nodeIsRange) {\n        commonContainer = node.commonAncestorContainer;\n        commonContainer =\n            commonContainer.nodeType === 3\n                ? commonContainer.parentNode || commonContainer\n                : commonContainer;\n    } else commonContainer = node;\n\n    if (startFromEldestChild)\n        commonContainer = climbUpToEldestParent(\n            commonContainer,\n            parentNode,\n            true\n        );\n\n    if (parentAnchor) {\n        while (\n            commonContainer.nodeType === 3 ||\n            (commonContainer !== parentAnchor &&\n                commonContainer.parentNode &&\n                commonContainer.parentNode !== parentAnchor)\n        )\n            commonContainer = commonContainer.parentNode;\n    }\n\n    /** crawl order below (outputs node on the way)\n     *  If 'BREAK' is returned, the node is not saved in outputNode\n     *\n     *  start   ->  [                   end\n     *                  |               ^ (finish)\n     *                  v               | (outputNode)\n     *              outputNode  ->  outputNode\n     *\n     *  NOTE: Will not crawl when node is textNode\n     */\n\n    if (commonContainer.nodeType === 3) {\n        outputNodes.push(run(commonContainer));\n\n        return { nodes: outputNodes, commonContainer };\n    }\n\n    let id, uniqueId;\n    if (commonContainer.nodeType === 1) {\n        uniqueId =\n            commonContainer.id ||\n            (() => {\n                id = generateId(\"crawl\");\n                commonContainer.id = id;\n                return id;\n            })();\n    }\n\n    let crawl =\n        (startNode instanceof Node ? startNode : null) ||\n        (nodeIsRange ? node.startContainer : commonContainer.childNodes[0]);\n    let endNode = nodeIsRange\n        ? node.endContainer\n        : commonContainer.childNodes[\n        commonContainer.childNodes.length\n            ? commonContainer.childNodes.length - 1\n            : 0\n        ];\n\n    let withInRange = (cwl) => {\n        if (!cwl || !(cwl instanceof Node)) return false;\n        if (cwl.nodeType === 1)\n            return cwl.id !== uniqueId && cwl.parentNode?.closest(\"#\" + uniqueId);\n        else return true;\n    };\n\n    while (withInRange(crawl)) {\n        if (crawl.nodeType === 1 && crawl.childNodes.length) {\n            // dive down to deepest child's first crawl\n            crawl = crawl.childNodes[0];\n        } else if (crawl) {\n            // entering the deepest elements first child.\n\n            if (typeof run === \"function\") crawl = run(crawl);\n            if (crawl === \"BREAK\" || !withInRange(crawl)) break;\n\n            outputNodes.push(crawl);\n\n            // break out if the crawl hits the end\n            if (crawl === endNode) break;\n\n            /**\n             * Climb up the node if the node doesn't have any next siblings\n             * Stop when it hits the commonContainer\n             */\n            let breakOut = false;\n            while (\n                !crawl.nextSibling &&\n                crawl.parentNode &&\n                withInRange(crawl.parentNode)\n            ) {\n                crawl = crawl.parentNode;\n                if (crawl) {\n                    if (typeof run === \"function\") crawl = run(crawl);\n\n                    if (crawl === \"BREAK\" || !withInRange(crawl)) {\n                        breakOut = true;\n                        break;\n                    }\n\n                    if (crawl) outputNodes.push(crawl);\n                }\n            }\n\n            if (breakOut) break;\n\n            // move on to next crawl\n            crawl = crawl.nextSibling;\n        }\n    }\n\n    if (id) commonContainer.removeAttribute(\"id\");\n\n    return { node: outputNodes, commonContainer };\n}\n\nfunction generateId(option) {\n    let limit = 12;\n    let prefix = \"\";\n\n    if (typeof option === \"number\") limit = option;\n    else if (typeof option === \"string\") prefix = `${option}_`;\n\n    const possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\n\n    let text = \"\";\n    for (let i = 0; i < limit - 6; i++)\n        text += possible.charAt(\n            Math.floor(Math.random() * (possible.length - 1))\n        );\n\n    const numb = new Date().getTime().toString().substring(7, 13); // SECOND, MILLISECOND\n\n    return prefix + numb + text;\n}\n\nfunction climbUpToEldestParent(node, wrapper, singleChildParent = false, callback) {\n    callback =\n        callback ||\n        ((n) => {\n            return n;\n        });\n\n    if (!(wrapper instanceof Node) || wrapper?.nodeType === 3)\n        throw new Error(\"invalid wrapper node\");\n\n    let id;\n    let uniqueId =\n        wrapper.id ||\n        (() => {\n            id = generateId(\"eldest\");\n            wrapper.id = id;\n            return id;\n        })();\n    // on single parent mode climb up if parent has only 1 child or 2 child with zero space text\n    function isSingleChildParent(n) {\n        if (!n || n.nodeType === 3) return false;\n\n        let childrenCount = n?.children?.length;\n        return (\n            childrenCount === 0 ||\n            (() => {\n                let sweep = n.childNodes.length;\n                let divCount = 0;\n                let iHaveText = false;\n\n                while (sweep--) {\n                    let s = n.childNodes[sweep];\n\n                    if (\n                        s.nodeType === 3 &&\n                        s.textContent.length > 0 &&\n                        s.textContent !== \"\\u200B\"\n                    )\n                        iHaveText = true;\n                    else if (s.nodeType === 1 && s.nodeName !== \"BR\") divCount++;\n\n                    // if (divCount > 1 || divCount && iHaveText)\n                    if ((divCount > 1 && !iHaveText) || (divCount && iHaveText))\n                        return false;\n                }\n\n                return true;\n            })()\n        );\n    }\n    while (\n        node?.id !== uniqueId &&\n        node.parentNode &&\n        node.parentNode.closest(\"#\" + uniqueId) &&\n        node.parentNode.id !== uniqueId &&\n        (singleChildParent ? isSingleChildParent(node?.parentNode) : true)\n    ) {\n        let cb = callback(node.parentNode);\n\n        if (!cb || cb === \"BREAK\") break;\n\n        node = cb;\n    }\n\n    if (id) wrapper.removeAttribute(\"id\");\n\n    return node;\n}\n\nexport { adjustSelection, nodeCrawler, generateId, climbUpToEldestParent };","const hashtag_regex =\n    /#[\\u0041-\\u005A\\u0061-\\u007A\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0\\u08A2-\\u08AC\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097F\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA697\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA80-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC\\w-]+(?:\\+[\\w-]+)*/g;\nconst hashtag_stopper_regex =\n    /[^\\u0041-\\u005A\\u0061-\\u007A\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0\\u08A2-\\u08AC\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097F\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA697\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA80-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC\\w-]/g;\nconst urllink_regex =\n    /(https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|www\\.[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9]+\\.[^\\s]{2,}|www\\.[a-zA-Z0-9]+\\.[^\\s]{2,})/gi;\n\nconst regexr = {\n    hashtag: hashtag_regex,\n    hashtag_stopper: hashtag_stopper_regex,\n    urllink: urllink_regex,\n};\n\nfunction generateId(option) {\n    let limit = 12;\n    let prefix = \"\";\n\n    if (typeof option === \"number\") limit = option;\n    else if (typeof option === \"string\") prefix = `${option}_`;\n\n    const possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\n\n    let text = \"\";\n    for (let i = 0; i < limit - 6; i++)\n        text += possible.charAt(\n            Math.floor(Math.random() * (possible.length - 1))\n        );\n\n    const numb = new Date().getTime().toString().substring(7, 13); // SECOND, MILLISECOND\n\n    return prefix + numb + text;\n}\n\nexport { regexr, generateId };","import { ColorMangle } from \"colormangle\";\nimport { adjustSelection, nodeCrawler, climbUpToEldestParent } from \"./selectors.js\";\nimport { regexr, generateId } from \"./util.js\";\n// Add debouncing for frequent operations like selection changes\nconst debounce = (fn, delay) => {\n  let timeout;\n  return function () {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => fn.apply(this, arguments), delay);\n  };\n};\n\nclass Wysiwyg4All {\n  constructor(option) {\n    let {\n      elementId = \"\",\n      editable = true,\n      placeholder = \"\",\n      spellcheck = false,\n      highlightColor = \"teal\",\n      html = \"\",\n      callback,\n      fontSize = {\n        desktop: \"18px\",\n        tablet: \"16px\",\n        phone: \"14px\",\n\n        h1: 4.2,\n        h2: 3.56,\n        h3: 2.92,\n        h4: 2.28,\n        h5: 1.64,\n        h6: 1.15,\n        small: 0.8,\n      },\n      lastLineBlank = false,\n      hashtag = false,\n      urllink = false,\n      logMutation = false,\n      logExecution = false,\n    } = option;\n\n    this.hashtag = hashtag;\n    this.urllink = urllink;\n    this.logMutation = logMutation;\n    this.logExecution = logExecution;\n    this.fontSizeCssVariable = {};\n\n    if (typeof fontSize === \"number\")\n      this.fontSizeCssVariable = {\n        \"--wysiwyg-font-desktop\": `${fontSize}`,\n        \"--wysiwyg-font-tablet\": `${fontSize}`,\n        \"--wysiwyg-font-phone\": `${fontSize}`,\n      };\n    else if (typeof fontSize === \"object\" && Object.keys(fontSize).length) {\n      let hold;\n      let keyArr = [\"desktop\", \"tablet\", \"phone\"];\n\n      for (let k of keyArr) {\n        if (fontSize[k]) {\n          hold = fontSize[k];\n          if (typeof hold === \"number\") hold = `${hold}px`;\n        }\n        this.fontSizeCssVariable[`--wysiwyg-font-${k}`] = `${hold}`;\n      }\n    }\n\n    if (!elementId || typeof elementId !== \"string\")\n      throw new Error(\"The wysiwyg element should have an ID\");\n    elementId = elementId[0] === \"#\" ? elementId.substring(1) : elementId;\n\n    this.html = html;\n    this.elementId = elementId[0] === \"#\" ? elementId.substring(1) : elementId;\n    this.placeholder = placeholder;\n    this.spellcheck = spellcheck;\n    this.lastLineBlank = lastLineBlank;\n\n    if (typeof highlightColor === \"string\")\n      highlightColor = new ColorMangle(highlightColor).color;\n\n    this.colorScheme = highlightColor;\n    this.callback = callback || null;\n\n    this.image_array = [];\n    this.hashtag_array = [];\n    this.urllink_array = [];\n    this.custom_array = [];\n\n    this.blockElement_queryArray = [\n      \"HR\",\n      \"BLOCKQUOTE\",\n      \"UL\",\n      \"OL\",\n      \"._media_\",\n      \"._custom_\",\n    ];\n    this.specialTextElement_queryArray = [\"._hashtag_\", \"._urllink_\"];\n    this.restrictedElement_queryArray = [\"._media_\", \"._custom_\"];\n    this.textAreaElement_queryArray = [\"BLOCKQUOTE\", \"LI\"];\n    this.textBlockElement_queryArray = [\"P\", \"LI\", \"TD\", \"TH\"]; //, \"TD\", \"TH\", '._color', '._small', '._h1`', '._h2', '._h3', '._h4', '._h5', '._h6', '._b', '._i', '._u', '._del'\n    this.ceilingElement_queryArray = [\n      \"UL\",\n      \"OL\",\n      \"BLOCKQUOTE\",\n      `#${elementId}`,\n      \"TD\",\n      \"TH\",\n    ];\n    this.unSelectable_queryArray = [\n      \"._media_\",\n      \"._custom_\",\n      \"._hashtag_\",\n      \"._urllink_\",\n      \"HR\",\n    ];\n    this.styleAllowedElement_queryArray = [\n      \"._color\",\n      `#${elementId}`,\n      \"._hashtag_\",\n      \"._urllink_\",\n      \"TD\",\n      \"TH\",\n    ]; // ALLOWED ELEMENTS FOR STYLE ATTRIBUTE <... style=\"...\">\n    this.alignClass = [\"_alignCenter_\", \"_alignRight_\"];\n\n    this.hashtag_flag = false;\n    this.urllink_flag = false;\n    this.range_backup = null;\n\n    this.commandTracker = {};\n    this.range = null;\n    this.isRangeDirectionForward = true;\n    this.insertTabPending_tabString = \"\";\n    this.removeSandwichedLine_array = [];\n    this.lastKey = null;\n\n    //  setup div\n    this.element = document.getElementById(this.elementId);\n    if (!this.element) throw `element #${this.elementId} is null`;\n\n    this.element.innerHTML = \"\";\n\n    this.cssVariable = new ColorMangle().colorScheme(this.colorScheme);\n    Object.assign(this.cssVariable, this.fontSizeCssVariable);\n\n    for (const v in this.cssVariable)\n      this.element.style.setProperty(v, this.cssVariable[v]);\n\n    this.elementComputedStyle = window.getComputedStyle(this.element);\n    this.defaultFontColor = new ColorMangle(\n      this.cssVariable[\"--content-text\"]\n    ).hex();\n    this.highlightColor = new ColorMangle(\n      this.cssVariable[\"--content-focus\"]\n    ).hex();\n\n    if (!this.element.classList.contains(\"_wysiwyg4all\"))\n      this.element.classList.add(\"_wysiwyg4all\");\n\n    this.setPlaceholder(this.placeholder);\n    this.setSpellcheck(this.spellcheck);\n\n    //  re-adjust min-height depending on padding\n    let paddingB = this.elementComputedStyle.paddingBottom;\n    let paddingT = this.elementComputedStyle.paddingTop;\n    let borderT = this.elementComputedStyle.borderTopWidth;\n    let borderB = this.elementComputedStyle.borderBottomWidth;\n\n    this.element.style.minHeight = `calc(${paddingB} + ${paddingT} + ${borderT} + ${borderB} + 1.6em)`;\n\n    //  command style tag\n    const command = {\n      //  [<targetClassName>, <cssProperty>, [<string: counter tag | class name>]]\n      h1: [\"_h1\", \"fontSize\", [\"_small\", \"_h2\", \"_h3\", \"_h4\", \"_h5\", \"_h6\"]],\n      h2: [\"_h2\", \"fontSize\", [\"_small\", \"_h1\", \"_h3\", \"_h4\", \"_h5\", \"_h6\"]],\n      h3: [\"_h3\", \"fontSize\", [\"_small\", \"_h1\", \"_h2\", \"_h4\", \"_h5\", \"_h6\"]],\n      h4: [\"_h4\", \"fontSize\", [\"_small\", \"_h1\", \"_h2\", \"_h3\", \"_h5\", \"_h6\"]],\n      h5: [\"_h5\", \"fontSize\", [\"_small\", \"_h1\", \"_h2\", \"_h3\", \"_h4\", \"_h6\"]],\n      h6: [\"_h6\", \"fontSize\", [\"_small\", \"_h1\", \"_h2\", \"_h3\", \"_h4\", \"_h5\"]],\n      italic: [\"_i\", \"fontStyle\"],\n      small: [\n        \"_small\",\n        \"fontSize\",\n        [\"_h1\", \"_h2\", \"_h3\", \"_h4\", \"_h5\", \"_h6\", \"_b\"],\n      ],\n      bold: [\"_b\", \"fontWeight\", [\"_small\"]],\n      underline: [\"_u\", \"textDecoration\", [\"_del\"]],\n      strike: [\"_del\", \"textDecoration\", [\"_u\"]],\n      color: [\"_color\", \"color\"],\n    };\n\n    const fontSizeRatio = {\n      //  should always be the same em value as css\n      h1: fontSize.h1 || 4.2,\n      h2: fontSize.h2 || 3.56,\n      h3: fontSize.h3 || 2.92,\n      h4: fontSize.h4 || 2.28,\n      h5: fontSize.h5 || 1.64,\n      h6: fontSize.h6 || 1.15,\n      small: fontSize.small || 0.8,\n    };\n\n    // // font size variables\n    // --wysiwyg-h1: calc(var(--wysiwyg-font) * 4.2);\n    // --wysiwyg-h2: calc(var(--wysiwyg-font) * 3.56);\n    // --wysiwyg-h3: calc(var(--wysiwyg-font) * 2.92);\n    // --wysiwyg-h4: calc(var(--wysiwyg-font) * 2.28);\n    // --wysiwyg-h5: calc(var(--wysiwyg-font) * 1.64);\n    // --wysiwyg-h6: calc(var(--wysiwyg-font) * 1.15);\n    // --wysiwyg-small: calc(var(--wysiwyg-font) * 0.8);\n    for (const [tag, ratio] of Object.entries(fontSizeRatio)) {\n      if (typeof ratio === \"number\") {\n        this.element.style.setProperty(\n          `--wysiwyg-${tag}`,\n          `calc(var(--wysiwyg-font) * ${ratio})`\n        );\n      } else if (typeof ratio === \"string\") {\n        if (ratio.includes(\"px\")) {\n          this.element.style.setProperty(`--wysiwyg-${tag}`, ratio);\n        } else if (ratio.includes(\"em\") || ratio.includes(\"rem\")) {\n          let emSize = parseFloat(ratio);\n          if (emSize > 0) {\n            this.element.style.setProperty(\n              `--wysiwyg-${tag}`,\n              `calc(var(--wysiwyg-font) * ${emSize})`\n            );\n          }\n        }\n      }\n    }\n\n    this.styleTagOfCommand = {};\n    this.counterTagOf = {};\n    this.cssPropertyOf = {};\n    this.cssPropertyChecker = {\n      textDecoration: (v) => {\n        //  v = <string: value from computedStyle>\n        if (v.includes(\"underline\")) return \"underline\";\n        else if (v.includes(\"line-through\")) return \"strike\";\n\n        return false;\n      },\n      fontSize: (v) => {\n        //  v = <string: value from computedStyle>\n        let documentFontSize = parseFloat(this.elementComputedStyle.fontSize);\n        let nodeFontSize = parseFloat(v);\n        for (let tag in fontSizeRatio) {\n          let f_size = fontSizeRatio[tag];\n\n          if (typeof f_size === \"number\") {\n            //  precision\n            let compare_size = documentFontSize * f_size;\n            let f_size_high = compare_size + 0.01;\n            let f_size_low = compare_size - 0.01;\n            if (f_size_high > nodeFontSize && f_size_low < nodeFontSize)\n              return tag;\n          } else if (typeof f_size === \"string\") {\n            if (f_size.includes(\"px\")) {\n              if (v === f_size) return tag;\n            } else if (f_size.includes(\"em\") || f_size.includes(\"rem\")) {\n              let emSize = parseFloat(f_size);\n              if (emSize > 0) {\n                let compare_size = documentFontSize * emSize;\n                let f_size_high = compare_size + 0.01;\n                let f_size_low = compare_size - 0.01;\n                if (f_size_high > nodeFontSize && f_size_low < nodeFontSize)\n                  return tag;\n              }\n            }\n          }\n        }\n        return false;\n      },\n      fontStyle: (v) => {\n        //  v = <string: value from computedStyle>\n        if (v.includes(\"italic\")) return \"italic\";\n        return false;\n      },\n    };\n\n    for (let c in command) {\n      this.commandTracker[c] = false;\n      this.styleTagOfCommand[c] = command[c][0];\n      this.cssPropertyOf[command[c][0]] = command[c][1];\n      if (!this.cssPropertyChecker.hasOwnProperty(command[c][1]))\n        this.cssPropertyChecker[command[c][1]] = c;\n      if (command[c][2]) this.counterTagOf[command[c][0]] = command[c][2];\n    }\n\n    /**\n         this.styleTagOfCommand = {\n            [commandKey]: <targetClassName>\n         };\n\n         this.cssPropertyChecker = {\n            [cssPropertyKey]: <commandKey | function(<cssValue>)>\n         };\n\n         this.cssPropertyOf = {\n            [targetClassName]: <cssPropertyKey>\n         };\n\n         this.counterTagOf = {\n            [targetClassName]: [<counterClassName>]\n         };\n\n         this.commandTracker = {\n            [commandKey]: <boolean>\n         };\n\n         console.log({\n            styleTagOfCommand: this.styleTagOfCommand,\n            cssPropertyChecker: this.cssPropertyChecker,\n            cssPropertyOf: this.cssPropertyOf,\n            counterTagOf: this.counterTagOf,\n            commandTracker: this.commandTracker\n         });\n         */\n\n    this.loadHTML(this.html, editable).catch((err) => {\n      throw err;\n    });\n  }\n\n  _wrapNode(node, wrapper, appendWhole = false) {\n    if (this.logExecution)\n      console.log(\"_wrapNode()\", { node, wrapper, appendWhole });\n    if (!(node instanceof Node)) return;\n\n    if (!node.parentNode) throw new Error(\"can't unwrap document fragment\");\n\n    // save current range\n    let sel = window.getSelection();\n    let range = sel.getRangeAt(0);\n    let start = null;\n    let startOffset = range.startOffset;\n    let end = null;\n    let endOffset = range.endOffset;\n\n    const withinRange = (n) => {\n      if (range.startContainer === n) {\n        start = n;\n      }\n      if (range.endContainer === n) {\n        end = n;\n      }\n    };\n\n    if (node.nodeType === 1) {\n      nodeCrawler(\n        (n) => {\n          withinRange(n);\n          return n;\n        },\n        { node }\n      );\n    } else withinRange(node);\n\n    if (wrapper) {\n      // place the wrapper\n      node.parentNode.insertBefore(wrapper, node);\n    }\n\n    // append node\n    if (node.nodeType === 3) {\n      if (wrapper) wrapper.append(node);\n      else throw new Error(\"no wrapper for text content\");\n    } else if (appendWhole) wrapper.append(node);\n    else\n      while (node.childNodes[0]) {\n        let child = node.childNodes[0];\n        if (wrapper) wrapper.append(child);\n        else node.parentNode.insertBefore(child, node);\n      }\n\n    let stripped;\n    if (node.nodeType === 1 && !appendWhole) {\n      let n = wrapper || node;\n      let p = n.parentNode;\n      stripped = node.previousSibling;\n      p.removeChild(node);\n    }\n\n    // restore range\n    if ((stripped || node).textContent && (start || end)) {\n      if (start && start === end && startOffset === endOffset)\n        range = adjustSelection({\n          node: stripped || node,\n          position: startOffset,\n        }, this.ceilingElement_queryArray);\n      else\n        range = adjustSelection({\n          node: [start, end],\n          position: [startOffset, endOffset],\n        }, this.ceilingElement_queryArray);\n    }\n\n    this.range = range;\n    return { node: stripped || node, range };\n  }\n\n  _getStartEndLine(\n    range = this.range,\n    element = this.element,\n    getInbetween = false\n  ) {\n    if (this.logExecution)\n      console.log(\"_getStartEndLine()\", { range, element });\n    if (!range) return [null, null, null];\n\n    let startLine = climbUpToEldestParent(range.startContainer, element);\n    let endLine = climbUpToEldestParent(range.endContainer, element);\n\n    let inBetween = [];\n    if (getInbetween) {\n      // collect all the lines in between startLine and endLine. line is a block element\n      let currentLine = startLine.nextSibling;\n      while (currentLine && currentLine !== endLine) {\n        if (\n          currentLine.nodeType === 1 &&\n          this.blockElement_queryArray.some((q) =>\n            currentLine.matches(this._classNameToQuery(q))\n          )\n        ) {\n          inBetween.push(currentLine);\n        }\n        currentLine = currentLine.nextSibling;\n      }\n    }\n\n    return [startLine, endLine, inBetween];\n  }\n\n  _isThereContentEditableOverMyHead(node, element = this.element) {\n    if (node && node !== this.element) {\n      let flyup = node;\n      while (flyup && this.element !== flyup) {\n        if (flyup.getAttribute(\"contenteditable\") === \"true\") return true;\n\n        flyup = flyup.parentNode;\n      }\n    }\n    return false;\n  }\n\n  // Add browser-specific normalization\n  _normalizeBrowserQuirks() {\n    // Handle Firefox's extra <br> tags\n    if (navigator.userAgent.toLowerCase().indexOf('firefox') > -1) {\n      nodeCrawler((node) => {\n        if (node.nodeName === 'BR' &&\n          (!node.nextSibling || node.nextSibling.nodeName === 'BR')) {\n          node.remove();\n        }\n        return node;\n      }, { node: this.element });\n    }\n\n    // Handle Safari's selection quirks\n    if (navigator.userAgent.toLowerCase().indexOf('safari') > -1) {\n      // Safari-specific fixes\n    }\n  }\n\n  _isSelectionTrespassRestrictedRange(\n    range = this.range,\n    element = this.element\n  ) {\n    if (!range) {\n      if (this.logExecution)\n        console.log(\"_isSelectionTrespassRestrictedRange():true\", {\n          range,\n          element,\n        });\n      return true;\n    }\n\n    let { commonAncestorContainer, startContainer, endContainer, startLine, endLine, inBetween } = range;\n    let restrict = this.restrictedElement_queryArray;\n\n    // let [startLine, endLine, inBetween] = this._getStartEndLine(\n    //   range,\n    //   element,\n    //   true\n    // );\n    if (startLine === endLine) {\n      commonAncestorContainer =\n        commonAncestorContainer.nodeType === 3\n          ? commonAncestorContainer.parentNode\n          : commonAncestorContainer;\n      for (let r of restrict) {\n        let cl = commonAncestorContainer.closest(this._classNameToQuery(r));\n        if (cl) {\n          let isThere = this._isThereContentEditableOverMyHead(\n            commonAncestorContainer,\n            element\n          );\n          if (!isThere) {\n            return true;\n          }\n        }\n      }\n    } else if (inBetween?.length) {\n      for (let i = 0; i < inBetween.length; i++) {\n        for (let r of restrict) {\n          if (inBetween[i].closest(this._classNameToQuery(r))) {\n            let isThere = this._isThereContentEditableOverMyHead(inBetween[i]);\n            if (!isThere) {\n              return true;\n            }\n          }\n        }\n      }\n    }\n\n    return false;\n  }\n\n  _classNameToQuery(q) {\n    if (this.logExecution) console.log(\"_classNameToQuery()\", { q });\n    if (q.includes(\"_stop\") && q[0] !== \".\") return \".\" + q;\n    return q[0] === \"_\" ? \".\" + q : q;\n  }\n\n  _createEmptyParagraph(append) {\n    if (this.logExecution) console.log(\"_createEmptyParagraph()\", { append });\n    let p = document.createElement(\"p\");\n\n    if (append && typeof append === \"string\")\n      append = document.createTextNode(append);\n\n    p.append(append || document.createTextNode(\"\"));\n\n    if (!append) p.append(document.createElement(\"br\"));\n\n    return p;\n  }\n\n  _trackStyle(n, cls) {\n    if (this.logExecution) console.log(\"_trackStyle()\", { n, cls });\n    let commandTracker = {};\n    let style = window.getComputedStyle(n);\n\n    for (let c of this.alignClass) {\n      if (n.closest(\".\" + c))\n        commandTracker[c.substring(1, c.length - 1)] = true;\n    }\n\n    let checker = (sp) => {\n      let key = this.cssPropertyChecker[sp];\n      if (typeof key === \"function\") {\n        key = key(style[sp]);\n        if (key) {\n          if (cls) return key;\n          commandTracker[key] = true;\n        }\n      } else if (sp === \"color\" && style[sp]) {\n        let col =\n          style[sp][0] === \"#\" ? style[sp] : new ColorMangle(style[sp]).hex();\n\n        if (col !== this.defaultFontColor) {\n          if (cls) return col;\n          commandTracker[key] = col;\n        }\n      } else if (\n        style[sp] !== this.elementComputedStyle[sp] &&\n        this._isTextElement(n)\n      ) {\n        if (cls) return true;\n        commandTracker[key] = true;\n      }\n      return false;\n    };\n\n    if (cls) return checker(this.cssPropertyOf[cls.toLowerCase()]);\n\n    for (let sp in this.cssPropertyChecker) {\n      checker(sp);\n    }\n\n    return commandTracker;\n  }\n\n  _lastLineBlank(force) {\n    if (this.logExecution) console.log(\"_lastLineBlank()\", { force });\n    if (this.lastLineBlank || force) {\n      let lastLine = this.element.lastChild;\n      if (\n        lastLine.nodeName !== \"P\" ||\n        (lastLine.nodeName === \"P\" &&\n          lastLine.textContent &&\n          lastLine.textContent !== \"\\u200B\")\n      ) {\n        this.element.append(this._createEmptyParagraph());\n      }\n    }\n  }\n\n  _selectionchange = () => {\n    let sel = window.getSelection();\n\n    let anchorElement =\n      sel.anchorNode?.nodeType === 3\n        ? sel.anchorNode.parentNode\n        : sel.anchorNode;\n\n    let focusElement =\n      sel.focusNode?.nodeType === 3\n        ? sel.focusNode.parentNode\n        : sel.focusNode;\n\n    if (anchorElement.closest(`#${this.elementId}`) && focusElement.closest(`#${this.elementId}`)) {\n      let lastChild = this.element.lastChild;\n      if (!lastChild) {\n        // Wysiwyg is empty\n        lastChild = this._createEmptyParagraph();\n        this.element.appendChild(lastChild);\n\n        // Adjust selection\n        this.range = adjustSelection({\n          node: lastChild,\n          position: true,\n        }, this.ceilingElement_queryArray);\n      }\n      else {\n        this.range = adjustSelection(null);\n      }\n    }\n    else {\n      this.range = null;\n      this.commandTracker = {};\n      return;\n    }\n\n    //  track commandTracker\n    let commandTracker = {};\n    for (let style in this.styleTagOfCommand) {\n      commandTracker[style] = false;\n    }\n\n    let [startLine, endLine, inBetween] = this._getStartEndLine(\n      this.range,\n      this.element,\n      true\n    );\n    this.range.startLine = startLine;\n    this.range.endLine = endLine;\n    this.range.inBetween = inBetween;\n\n    let restricted = this.restrictedElement_queryArray.concat(\n      this.specialTextElement_queryArray\n    );\n\n    let crawlResult = nodeCrawler(\n      (node) => {\n        if (\n          (node.nodeType === 1 && node.closest(\"blockquote\")) ||\n          (node.nodeType === 3 && node.parentNode.closest(\"blockquote\"))\n        )\n          commandTracker.quote = true;\n\n\n        for (let c of restricted) {\n          if (node.nodeType === 3\n            ? node.parentNode.closest(c)\n            : node.nodeType === 1\n              ? node.closest(c)\n              : !(node instanceof Node)) {\n            return node;\n          }\n        }\n\n        if (\n          node.nodeType === 3 ||\n          node.nodeName === \"BR\" ||\n          (node.nodeType === 1 &&\n            node.childNodes.length === 1 &&\n            (node.childNodes[0].nodeName === \"BR\" ||\n              node.childNodes[0].nodeType === 3))\n        ) {\n          let n =\n            node.nodeType === 3 || node.nodeName === \"BR\"\n              ? node.parentNode\n              : node;\n\n          let comm = this._trackStyle(n);\n          for (let c in comm) commandTracker[c] = comm[c];\n        }\n        return node;\n      },\n      { node: this.range, parentNode: this.element }\n    );\n\n    if (!crawlResult.node.length) {\n      let comm = this._trackStyle(this.range.startContainer);\n      for (let c in comm) commandTracker[c] = comm[c];\n    }\n\n    this.commandTracker = commandTracker;\n    let caratPosition;\n    let caratEl = this.isRangeDirectionForward\n      ? this.range.endContainer\n      : this.range.startContainer;\n\n    if (caratEl.nodeType === 3)\n      caratPosition = this.range.getBoundingClientRect();\n    else if (caratEl.nodeType === 1)\n      caratPosition = caratEl.getBoundingClientRect();\n\n    this._callback({\n      commandTracker,\n      range: this.range,\n      caratPosition,\n    }).catch((err) => console.error(err));\n    this._lastLineBlank();\n  }\n\n  _setEventListener(listen) {\n    if (this.logExecution) console.log(\"_setEventListener()\", { listen });\n    /**\n     * keydown -> observer(dom change) -> selection change -> click | keyup\n     */\n\n    document.removeEventListener(\"selectionchange\", this._selectionchange);\n    this.imgInput = null;\n    if (this.element) {\n      this.element.removeEventListener(\"keydown\", this._keydown);\n      this.element.removeEventListener(\"mousedown\", this._normalize);\n      window.removeEventListener(\"mousedown\", this._normalize);\n      this.element.removeEventListener(\"paste\", this._paste);\n      this.element.removeEventListener(\"keyup\", this._keyup);\n    }\n\n    if (!listen) return;\n\n    //  image selector\n    let imgInput = document.createElement(\"input\");\n    for (const [key, value] of Object.entries({\n      id: generateId(\"imageInput\"),\n      type: \"file\",\n      accept: \"image/gif,image/png,image/jpeg,image/webp\",\n      hidden: true,\n      multiple: true,\n    })) {\n      imgInput.setAttribute(key, value);\n    }\n\n    this.imgInput = imgInput;\n    this.imgInput.addEventListener(\"change\", (e) => {\n      this._imageSelected(e).catch((err) => {\n        console.error(err);\n      });\n    });\n\n    this._keydown = function (e) {\n      // if (this._isSelectionTrespassRestrictedRange()) {\n      //   e.preventDefault();\n      //   return;\n      // };\n\n      // this._setRange(() => {\n      if (!this.range) return;\n      let { startContainer, startOffset, collapsed, startLine, endLine, inBetween } =\n        this.range;\n\n      let key = e.key.toUpperCase();\n      let shift = e.shiftKey;\n\n      this.lastKey = key;\n\n      if (key === \"ENTER\" && e.shiftKey) {\n        // prevent shift+enter\n        if (!this.range.endLine.closest(\"LI\")) e.preventDefault();\n        return;\n      }\n\n      // delete key\n      if ([\"BACKSPACE\", \"DELETE\"].includes(key)) {\n        if (\n          (!this.element.textContent &&\n            this.element.childNodes.length <= 1 &&\n            this._isTextElement(this.element.childNodes[0]) &&\n            this.element.childNodes[0] === startLine)\n          ||\n          this.element.childNodes.length === 0\n        ) {\n          if (this.logExecution) console.log(\"nothing to delete\");\n          // there is nothing to delete\n          e.preventDefault();\n          return;\n        }\n\n        let stc = this.range.startContainer;\n        if (this.range.collapsed) {\n          if (this.logExecution) console.log(\"range is collapsed\");\n          let block = (stc.nodeType === 3 ? stc.parentNode : stc).closest(\n            \"blockquote\"\n          );\n          if (\n            block &&\n            block.childNodes[0] === climbUpToEldestParent(stc, block) &&\n            this.range.startOffset === 0\n          ) {\n            // if the block is empty and the cursor is on the first offset position within the blockquote\n            // cursor is on the first offset position within the blockquote\n\n            if (this.logExecution)\n              console.log(\n                \"block is empty and the cursor is on the first offset position within the blockquote\"\n              );\n            e.preventDefault();\n\n            this.command(\"quote\");\n            return;\n          }\n\n          if (this.range.startOffset === 0 || this.range.startOffset === 1 && (stc.textContent[0] === \"\\u200B\" || stc.textContent.length === 0)) {\n            let prevsib=this.range.startLine.previousSibling;\n            for (let cl of this.unSelectable_queryArray) {\n              // check if startLine element has a class name cl\n              // if cl starts with . then it's a class name\n              if (cl[0] === \".\") {\n                cl = cl.substring(1);\n                if (prevsib && prevsib.classList.contains(cl))\n                  prevsib.remove();\n              }\n              else {\n                if (prevsib && prevsib.tagName === cl)\n                  prevsib.remove();\n              }\n            }\n          }\n        }\n        if (startLine !== endLine) {\n          for (let cl of this.unSelectable_queryArray) {\n            // check if startLine element has a class name cl\n            // if cl starts with . then it's a class name\n            if (cl[0] === \".\") {\n              cl = cl.substring(1);\n              if (startLine.classList.contains(cl))\n                startLine.remove();\n              if (endLine.classList.contains(cl))\n                endLine.remove();\n            }\n            else {\n              if (startLine.tagName === cl)\n                startLine.remove();\n              if (endLine.tagName === cl)\n                endLine.remove();\n            }\n          }\n        }\n        return;\n      }\n\n      // if(this._isSelectionTrespassRestrictedRange()) {\n      //   e.preventDefault();\n      //   return;\n      // }\n\n      //  hashtag flag\n      if (key === \"#\" && !this.hashtag_flag) {\n        this.hashtag_flag = true;\n        return;\n      }\n\n      //  url flag\n      if ([\":\", \"/\", \".\"].includes(key) && !this.urllink_flag) {\n        this.urllink_flag = true;\n        return;\n      }\n\n      // insert hashtag | urllink\n      if (\n        (this.hashtag_flag || this.urllink_flag) &&\n        ([\" \", \"ENTER\", \"TAB\"].includes(key) || key.includes(\"ARROW\"))\n      ) {\n        this._replaceText();\n        // return;\n      }\n\n      if (key.includes(\"ARROW\")) {\n        this._setArrow(e);\n        return;\n      }\n\n      if (key === \"TAB\") {\n        e.preventDefault();\n        let sweep_array = [];\n\n        if (!collapsed) {\n          let sweep = startLine;\n          while (sweep && sweep !== endLine) {\n            sweep_array.push(sweep);\n            sweep = sweep.nextSibling;\n          }\n          sweep_array.push(endLine);\n        }\n\n        if (shift) {\n          // delete indent\n          let hasIndent = false;\n          let diveAndRemoveTab = (n) => {\n            while (n.childNodes[0]) {\n              n = n.childNodes[0];\n\n              while (n.nodeType === 3 && !n.textContent) n = n.nextSibling;\n\n              if (n.nodeType === 3 && n.textContent[0] === \"\\t\") {\n                hasIndent = true;\n                n.textContent = n.textContent.substring(1);\n                break;\n              }\n            }\n          };\n          if (sweep_array.length) {\n            for (let n of sweep_array) {\n              if (n.textContent[0] === \"\\t\") diveAndRemoveTab(n);\n            }\n            if (hasIndent)\n              adjustSelection({\n                node: [startLine, endLine],\n                position: [true, false],\n              }, this.ceilingElement_queryArray);\n          } else if (startLine.textContent[0] === \"\\t\") {\n            let lineOffset = (line, container, containerOffset) => {\n              if (line === container) return containerOffset;\n\n              nodeCrawler(\n                (n) => {\n                  if (container === n) return \"BREAK\";\n\n                  if (n.nodeType === 3 && n.textContent.length)\n                    containerOffset += n.textContent.length;\n\n                  return n;\n                },\n                { node: line }\n              );\n              return containerOffset;\n            };\n\n            let offset =\n              lineOffset(startLine, startContainer, startOffset) - 1;\n            offset = offset < 0 ? 0 : offset;\n\n            diveAndRemoveTab(startLine);\n            if (hasIndent)\n              adjustSelection({ node: startLine, position: offset }, this.ceilingElement_queryArray);\n          }\n        } else {\n          // indent\n          if (sweep_array.length) {\n            let hasIndent = false;\n            for (let n of sweep_array) {\n              hasIndent = true;\n              let tab = document.createTextNode(\"\\t\");\n              n.insertBefore(tab, n.childNodes[0]);\n            }\n            if (hasIndent)\n              adjustSelection({\n                node: [startLine, endLine],\n                position: [true, false],\n              }, this.ceilingElement_queryArray);\n          } else {\n            let tab = document.createTextNode(\"\\t\");\n            this.range.insertNode(tab);\n            adjustSelection({ node: tab, position: false }, this.ceilingElement_queryArray);\n          }\n        }\n        return;\n      }\n\n      if (key === \"ENTER\") {\n        //  remove zero space\n        if (\n          collapsed &&\n          (startContainer.textContent.includes(\"\\u200B\") ||\n            !startContainer.textContent)\n        ) {\n          nodeCrawler(\n            (n) => {\n              if (\n                n.nodeType === 3 &&\n                (n.textContent === \"\\u200B\" || !n.textContent)\n              ) {\n                n.remove();\n              }\n\n              return n;\n            },\n            {\n              node:\n                startContainer.nodeType === 3\n                  ? startContainer.parentNode\n                  : startContainer,\n            }\n          );\n        }\n\n        if (endLine.textContent[0] === \"\\t\") {\n          for (let s of endLine.textContent) {\n            if (s === \"\\t\") this.insertTabPending_tabString += \"\\t\";\n            else break;\n          }\n        }\n      }\n      // })\n    }.bind(this);\n\n    this._normalize = function (e) {\n      e.stopPropagation();\n      // this._setRange(() => {\n      if (this._isSelectionTrespassRestrictedRange()) return;\n      this._normalizeDocument(true);\n      this.range_backup = this.range.cloneRange();\n      this._replaceText(true);\n      // });\n    }.bind(this);\n    this._paste = function (e) {\n      e.preventDefault();\n      if (this._isSelectionTrespassRestrictedRange()) return;\n      // this._setRange(() => {\n      if (this.range) {\n        if (this._isSelectionTrespassRestrictedRange()) return;\n        let doc = document.createDocumentFragment();\n        doc.textContent = e.clipboardData\n          .getData(\"text/plain\")\n          .replace(/\\n\\n/g, \"\\n\");\n\n        if (doc.textContent.includes(\"#\")) {\n          this.hashtag_flag = true;\n        }\n\n        //  url flag\n        for (let u of [\":\", \"/\", \".\"]) {\n          doc.textContent.includes(u);\n          this.urllink_flag = true;\n        }\n\n        if (!this.range.collapsed) this.range.extractContents();\n        this.range.insertNode(doc);\n      }\n      // });\n    }.bind(this);\n    this._keyup = function () {\n      if (this.removeSandwichedLine_array.length)\n        while (this.removeSandwichedLine_array.length)\n          this.removeSandwichedLine_array.pop().remove();\n    }.bind(this);\n\n    document.addEventListener(\"selectionchange\", this._selectionchange);\n    this.element.addEventListener(\"keydown\", this._keydown);\n    this.element.addEventListener(\"mousedown\", this._normalize);\n    // this.element.addEventListener('blur', this._normalize);\n    // fuck safari, firefox\n    window.addEventListener(\"mousedown\", this._normalize);\n    this.element.addEventListener(\"paste\", this._paste);\n    this.element.addEventListener(\"keyup\", this._keyup);\n  }\n\n  // Current code doesn't properly clean up event listeners\n  destroy() {\n    this.observer.disconnect();\n    document.removeEventListener(\"selectionchange\", this._selectionchange);\n    this.element.removeEventListener(\"keydown\", this._keydown);\n    this.element.removeEventListener(\"mousedown\", this._normalize);\n    window.removeEventListener(\"mousedown\", this._normalize);\n    this.element.removeEventListener(\"paste\", this._paste);\n    this.element.removeEventListener(\"keyup\", this._keyup);\n  }\n\n  _observeMutation(track) {\n    if (this.observer) this.observer.disconnect();\n\n    this.observer = null;\n\n    if (!track) return;\n\n    this.observer = new MutationObserver((mutation_array) => {\n      if (this.logMutation) {\n        let monitor = mutation_array.map((m) => {\n          return {\n            target: m.target.cloneNode(true),\n            type: m.type,\n            name: m.attributeName,\n            added: (() => {\n              let clones = [];\n              for (let a of m.addedNodes) {\n                if (a.nodeType === 3) clones.push(a.textContent);\n                else clones.push(a.cloneNode(true));\n              }\n              return clones;\n            })(),\n            removed: (() => {\n              let clones = [];\n              for (let r of m.removedNodes) {\n                if (r.nodeType === 3) clones.push(r.textContent);\n                else clones.push(r.cloneNode(true));\n              }\n              return clones;\n            })(),\n          };\n        });\n\n        let mutate = [];\n        for (let m of monitor) {\n          if (m.type === \"childList\" || m.attributeName === \"class\")\n            mutate.push(m);\n        }\n\n        if (mutate.length)\n          this._callback({ mutation: mutate }).catch((err) => err);\n      }\n\n      for (const mutation of mutation_array) {\n        /** changes in attributes */\n        if (mutation.type === \"attributes\") {\n          const { target, attributeName } = mutation;\n          if (attributeName === \"class\") {\n            if (\n              target.parentNode &&\n              !target.classList.length &&\n              !(\n                this._isTextBlockElement(target) ||\n                this._isBlockElement(target) ||\n                target.nodeName === \"P\"\n              )\n            ) {\n              // this._unwrapElement(target);\n              this._wrapNode(target);\n            }\n            if (!target.classList.length) target.removeAttribute(\"class\");\n          }\n          //  prevent style attributes\n          if (attributeName === \"style\" && !this._isStyleAllowedElement(target))\n            target.removeAttribute(\"style\");\n          continue;\n        }\n\n        /** changes in node */\n        if (mutation.type === \"childList\") {\n          let mutationTarget = mutation.target;\n\n          /** removed nodes */\n          if (mutation.removedNodes.length) {\n            for (let m of mutation.removedNodes) {\n              /**\n               *  CAUTION!\n               *  changing the order of if statements below can lead to critical flaw\n               *  _custom_ class should always be checked after _urllink_ and _hashtag_\n               */\n\n              let callbackRemoved = (what, m) => {\n                if (!m.id) return;\n\n                let arrIdx = this[`${what}_array`].length;\n                let removed;\n\n                while (arrIdx--) {\n                  let got = this[`${what}_array`][arrIdx];\n                  if (got.elementId === m.id) {\n                    removed = this[`${what}_array`].splice(arrIdx, 1);\n                    break;\n                  }\n                }\n\n                if (removed) {\n                  this._callback({ removed: { [what]: removed } });\n                }\n              };\n\n              if (m?.classList?.contains(\"_media_\")) {\n                let child = m.childNodes;\n                let childIdx = child.length;\n                while (childIdx--) {\n                  let c = child[childIdx];\n                  switch (c.nodeName) {\n                    case \"IMG\":\n                      callbackRemoved(\"image\", c);\n                      break;\n                  }\n                }\n                continue;\n              }\n\n              let toBreak = false;\n              for (let t of [\"hashtag\", \"urllink\", \"custom\"]) {\n                if (m?.id?.includes(t)) {\n                  callbackRemoved(t, m);\n                  toBreak = true;\n                  break;\n                }\n              }\n\n              toBreak = false;\n\n              if (\n                this._isCeilingElement(mutationTarget) &&\n                (() => {\n                  let idx = mutationTarget.childNodes.length;\n                  if (idx)\n                    while (idx--) {\n                      let node = mutationTarget.childNodes[idx];\n                      if (node.nodeType === 1 || node.textContent) {\n                        return false;\n                      }\n                    }\n                  return true;\n                })()\n              ) {\n                mutationTarget.remove();\n                continue;\n              }\n\n              if (\n                this._isTextBlockElement(mutationTarget) &&\n                mutationTarget.childNodes.length === 1 &&\n                this._isUnSelectableElement(mutationTarget.childNodes[0])\n              )\n                mutationTarget.append(document.createTextNode(\"\"));\n            }\n          }\n\n          /** added nodes */\n          if (mutation.addedNodes.length)\n            for (let i of mutation.addedNodes) {\n              let getBr = (n) => {\n                let idx = n?.childNodes?.length;\n                let br = [];\n                while (idx--) {\n                  let c = n.childNodes[idx];\n                  if (c.nodeName === \"BR\") br.push(c);\n                }\n                return br;\n              };\n\n              if (i.nodeType === 3) {\n                // wrap all eldest text node\n                if (this._isCeilingElement(mutationTarget))\n                  this._wrapNode(i, document.createElement(\"p\"));\n                // remove <br> when there is text\n                else if (i.textContent && i.textContent !== \"\\u200B\") {\n                  // prevent br added to line\n                  let br = getBr(mutationTarget);\n                  if (br.length) for (let b of br) b.remove();\n                }\n\n                continue;\n              }\n\n              if (i.nodeType === 1) {\n                let node = (() => {\n                  let isWysiwygChild =\n                    i.closest(`#${this.elementId}`) && i.id !== this.elementId;\n                  let isWysiwygEldestChild = (() => {\n                    if (!isWysiwygChild) return false;\n\n                    return this._isCeilingElement(mutationTarget);\n                  })();\n\n                  let ceiling = (() => {\n                    for (let c of this.ceilingElement_queryArray) {\n                      let clo = i.closest(c);\n                      if (clo) return clo;\n                    }\n                    return null;\n                  })();\n\n                  let line = isWysiwygEldestChild\n                    ? i\n                    : isWysiwygChild &&\n                    (() => {\n                      let m = i;\n                      while (m && !this._isCeilingElement(m.parentNode)) {\n                        m = m.parentNode;\n                      }\n                      return m;\n                    })();\n\n                  return {\n                    isWysiwygChild,\n                    isWysiwygEldestChild,\n                    isMediaElement: i.closest(\"._media_\"),\n                    isBlockQuoteElement: i.closest(\"blockquote\"),\n                    isCustomElement: i.closest(\"._custom_\"),\n                    isHashtagElement: i.closest(\"._hashtag_\"),\n                    isUrlLinkElement: i.closest(\"._urllink_\"),\n                    ceiling,\n                    line,\n                  };\n                })();\n\n                if (!node.isWysiwygChild) continue; // bypass\n\n                if (\n                  node.isCustomElement ||\n                  node.isMediaElement ||\n                  node.isHashtagElement ||\n                  node.isUrlLinkElement\n                ) {\n                  // make sure un-editable element is secure\n                  let el =\n                    node.isCustomElement ||\n                    node.isMediaElement ||\n                    node.isHashtagElement ||\n                    node.isUrlLinkElement;\n\n                  // check if el has a value of contenteditable\n                  if (el.getAttribute(\"contenteditable\") !== \"true\")\n                    el.setAttribute(\"contenteditable\", \"false\");\n\n                  continue;\n                }\n\n                if (\n                  !(\n                    node.isWysiwygEldestChild &&\n                    (this._isBlockElement(i) || this._isTextBlockElement(i))\n                  ) &&\n                  i.nodeName !== \"BR\" &&\n                  !i.classList.length\n                ) {\n                  // unwrap anything that does not have class and is not block level text\n                  this._wrapNode(i);\n                  continue;\n                }\n\n                if (\n                  (() => {\n                    if (this._isStyleAllowedElement(i)) return false;\n\n                    for (let sa of this.restrictedElement_queryArray) {\n                      if (i.closest(sa)) return false;\n                    }\n\n                    return true;\n                  })()\n                )\n                  //  remove style attribute if not allowed\n                  i.removeAttribute(\"style\");\n\n                if (\n                  node.isWysiwygEldestChild &&\n                  !(this._isBlockElement(i) || this._isTextBlockElement(i))\n                ) {\n                  //  wrap eldest non text block element to p\n                  if (i.nodeName === \"BR\") i.remove();\n                  else this._wrapNode(i, document.createElement(\"p\"), true);\n                  continue;\n                }\n\n                if (\n                  mutationTarget.textContent &&\n                  mutationTarget.textContent !== \"\\u200B\"\n                ) {\n                  // prevent br added to line\n                  let br = getBr(mutationTarget);\n                  let doContinue = false;\n                  if (br.length)\n                    for (let b of br) {\n                      if (b === i) doContinue = true;\n                      b.remove();\n                    }\n                  if (doContinue) continue;\n                }\n\n                if (node.isWysiwygEldestChild && !this._isCeilingElement(i)) {\n                  // add tab on new line created by pressing enter\n                  if (this.insertTabPending_tabString) {\n                    let tab = document.createTextNode(\n                      this.insertTabPending_tabString\n                    );\n                    node.line.insertBefore(tab, node.line.childNodes[0]);\n                    this.insertTabPending_tabString = \"\";\n                    adjustSelection({ node: tab, position: false }, this.ceilingElement_queryArray);\n                  }\n\n                  // if empty text block is added add br\n                  if (\n                    !node.line.textContent ||\n                    node.line.textContent === \"\\u200B\"\n                  ) {\n                    let addBr = true;\n                    nodeCrawler(\n                      (n) => {\n                        if (n.nodeName === \"BR\") {\n                          addBr = false;\n                          return \"BREAK\";\n                        }\n                        return n;\n                      },\n                      { node: node.line }\n                    );\n\n                    if (addBr) node.line.append(document.createElement(\"br\"));\n                  }\n\n                  continue;\n                }\n\n                let classSet = (c) => {\n                  let counter = this.counterTagOf[c] || [];\n\n                  if (counter.length)\n                    counter = counter.concat(\n                      counter.map((m) => {\n                        return m + \"_stop\";\n                      })\n                    );\n\n                  return [\n                    c,\n                    c.includes(\"_stop\") ? c.replace(\"_stop\", \"\") : c + \"_stop\",\n                  ].concat(counter);\n                };\n\n                let toUnwrap = [];\n\n                if (i.classList.length) {\n                  climbUpToEldestParent(i, node.ceiling, true, (n) => {\n                    let cIdx = i.classList.length;\n                    while (cIdx--) {\n                      if (\n                        (() => {\n                          let set = classSet(i.classList[cIdx]);\n                          for (let s of set) {\n                            if (n.classList.contains(s)) return true;\n                          }\n                          return false;\n                        })()\n                      )\n                        toUnwrap.push(n);\n                    }\n\n                    return n;\n                  });\n                }\n\n                let idx = toUnwrap.length;\n\n                while (idx--) {\n                  // unwrap unnecessary counter parents\n                  this._wrapNode(toUnwrap[idx]);\n                }\n\n                let class_idx = i.classList.length;\n                while (class_idx--) {\n                  let className = i.classList[class_idx];\n                  let curSt = this._trackStyle(\n                    i,\n                    className.replace(\"_stop\", \"\")\n                  );\n                  let parSt = this._trackStyle(\n                    i.parentNode,\n                    className.replace(\"_stop\", \"\")\n                  );\n\n                  if (curSt === parSt)\n                    // remove style class if parent shares the same style\n                    i.classList.remove(className);\n                }\n\n                if (!i.classList.length) {\n                  // remove style attribute if there is no class\n                  i.removeAttribute(\"class\");\n                }\n\n                if (\n                  this._isTextBlockElement(mutationTarget) &&\n                  mutationTarget.childNodes.length === 1 &&\n                  this._isUnSelectableElement(mutationTarget.childNodes[0])\n                )\n                  mutationTarget.append(document.createTextNode(\"\"));\n              }\n            }\n        }\n      }\n    });\n    this.observer.observe(this.element, {\n      attributes: true,\n      childList: true,\n      subtree: true,\n    });\n  }\n\n  _setArrow(e) {\n    if (this.logExecution) console.log(\"_setArrow\", { e });\n    if (!this.range || !e?.key) return;\n\n    let endContainer,\n      endOffset,\n      startContainer,\n      startOffset,\n      collapsed,\n      startLine,\n      endLine,\n      isAllRangeOnSameLine,\n      currentLine,\n      caratElement,\n      arrowDirection;\n\n    let key = e.key.toUpperCase();\n    let shift = e?.shiftKey || false;\n    let metaKey = e?.ctrlKey || e?.metaKey || false;\n    let rangeSetup = () => {\n      endContainer = this.range?.endContainer;\n      endOffset = this.range?.endOffset;\n      startContainer = this.range?.startContainer;\n      startOffset = this.range?.startOffset;\n      collapsed = this.range?.collapsed;\n      startLine = this.range?.startLine;\n      endLine = this.range?.endLine;\n      isAllRangeOnSameLine = startLine === endLine;\n      currentLine = this.isRangeDirectionForward ? endLine : startLine;\n      caratElement = this.isRangeDirectionForward\n        ? endContainer\n        : startContainer;\n      caratElement =\n        caratElement?.nodeType === 3 ? caratElement?.parentNode : caratElement;\n    };\n\n    let removeZeroSpace = () => {\n      let targetContainer = this.isRangeDirectionForward\n        ? endContainer\n        : startContainer;\n      let nudged = false;\n\n      if (\n        collapsed &&\n        (targetContainer.textContent.includes(\"\\u200B\") ||\n          !targetContainer.textContent)\n      ) {\n        nodeCrawler(\n          (n) => {\n            if (\n              n.nodeType === 3 &&\n              (n.textContent === \"\\u200B\" || !n.textContent)\n            ) {\n              let r = n.nextSibling || n.parentNode;\n              let siblingDirection = this.isRangeDirectionForward\n                ? \"nextSibling\"\n                : \"previousSibling\";\n\n              if (\n                n === targetContainer ||\n                (() => {\n                  // fuck safari\n                  if (targetContainer.nodeType === 1) {\n                    let idx = targetContainer.childNodes.length;\n                    while (idx--) {\n                      if (targetContainer.childNodes[idx] === n) return true;\n                    }\n                    return false;\n                  }\n                })()\n              ) {\n                let run = r;\n                if (run.nodeType === 1 && n.parentNode === run) {\n                  if (run[siblingDirection]) nudged = run[siblingDirection];\n                } else nudged = r;\n\n                n.remove();\n\n                this.range = adjustSelection({\n                  node: !collapsed\n                    ? this.isRangeDirectionForward\n                      ? [null, nudged || r]\n                      : [nudged || r, null]\n                    : nudged,\n                  position: !collapsed\n                    ? this.isRangeDirectionForward\n                      ? [null, nudged]\n                      : [!nudged, null]\n                    : this.isRangeDirectionForward,\n                }, this.ceilingElement_queryArray);\n\n                rangeSetup();\n                e.preventDefault();\n                return \"BREAK\";\n              }\n            }\n            return n;\n          },\n          { node: targetContainer }\n        );\n      }\n      return !!nudged;\n    };\n\n    let nudgeRangeToInlineElement = () => {\n      let rem = removeZeroSpace();\n\n      if (\n        !rem &&\n        window.getComputedStyle(caratElement).display === \"inline-block\"\n      ) {\n        let _caratElement =\n          caratElement.nodeType === 3 ? caratElement.parentNode : caratElement;\n        while (\n          window.getComputedStyle(_caratElement).display === \"inline-block\"\n        ) {\n          _caratElement = _caratElement.parentNode;\n        }\n\n        let siblingDirection =\n          arrowDirection === \"UP\" ? \"previousSibling\" : \"nextSibling\";\n        let nextEl = _caratElement[siblingDirection];\n\n        if (!nextEl) {\n          let t = document.createTextNode(\"\");\n          _caratElement.parentNode.insertBefore(\n            t,\n            siblingDirection === \"previousSibling\" ? _caratElement : nextEl\n          );\n        }\n\n        _caratElement = _caratElement[siblingDirection];\n\n        if (_caratElement) {\n          let setDirection = (() => {\n            return arrowDirection === \"DOWN\";\n          })();\n\n          this.range = adjustSelection({\n            node: shift\n              ? this.isRangeDirectionForward\n                ? [null, _caratElement]\n                : [_caratElement, null]\n              : _caratElement,\n            position: shift\n              ? this.isRangeDirectionForward\n                ? [null, setDirection]\n                : [setDirection, null]\n              : setDirection,\n          }, this.ceilingElement_queryArray);\n\n          rangeSetup();\n\n          return true;\n        }\n      }\n      return false;\n    };\n\n    rangeSetup();\n\n    switch (key) {\n      case \"ARROWLEFT\":\n        arrowDirection = \"LEFT\";\n      case \"ARROWRIGHT\":\n        arrowDirection = arrowDirection || \"RIGHT\";\n\n        if (metaKey || (collapsed && shift)) {\n          // this.isRangeDirectionForward = arrowDirection === \"RIGHT\";\n          rangeSetup();\n        }\n\n        let caratOnSingleLine = this.range?.startLine === this.range?.endLine;\n\n        let nudged;\n        if (caratOnSingleLine) {\n          if (metaKey && arrowDirection === \"RIGHT\")\n            nudged = nudgeRangeToInlineElement();\n        }\n\n        if (!nudged) removeZeroSpace();\n\n        break;\n\n      case \"ARROWUP\":\n        arrowDirection = \"UP\";\n      case \"ARROWDOWN\":\n        arrowDirection = arrowDirection || \"DOWN\";\n\n        if (!collapsed && !shift) {\n          e.preventDefault();\n          let adj =\n            arrowDirection === \"UP\"\n              ? [startContainer, startOffset]\n              : [endContainer, endOffset];\n          this.range = adjustSelection({\n            node: adj[0],\n            position: adj[1],\n          }, this.ceilingElement_queryArray);\n          break;\n        }\n\n        if (collapsed || isAllRangeOnSameLine) {\n          // this.isRangeDirectionForward = arrowDirection === \"DOWN\";\n          rangeSetup();\n        }\n\n        if (this.range?.startLine !== this.range?.endLine) break;\n\n        let iNudged = nudgeRangeToInlineElement();\n\n        if (iNudged) break;\n        else removeZeroSpace();\n\n        let isMultiLine = this.range?.startLine !== this.range?.endLine;\n        if (isMultiLine) break;\n\n        let eldestParentOfCurrentLine = climbUpToEldestParent(\n          currentLine,\n          this.element\n        );\n\n        let isCurrentLineInsideSubCeiling =\n          eldestParentOfCurrentLine.id !== this.elementId &&\n          this._isCeilingElement(eldestParentOfCurrentLine);\n\n        // break out if current line is inside the sub ceiling and it's not on the last line\n        if (\n          isCurrentLineInsideSubCeiling &&\n          ((arrowDirection === \"UP\" &&\n            eldestParentOfCurrentLine.firstChild !== currentLine) ||\n            (arrowDirection === \"DOWN\" &&\n              eldestParentOfCurrentLine.lastChild !== currentLine))\n        )\n          break;\n\n        let siblingSet = [\n          isCurrentLineInsideSubCeiling\n            ? eldestParentOfCurrentLine.previousSibling\n            : currentLine.previousSibling,\n          isCurrentLineInsideSubCeiling\n            ? eldestParentOfCurrentLine.nextSibling\n            : currentLine.nextSibling,\n        ];\n\n        if (arrowDirection === \"UP\") siblingSet.reverse();\n\n        let [backwardNode, forwardNode] = siblingSet;\n\n        // if current line is on last line of sub ceiling set forward node to sub ceiling\n        let _forwardNode = isCurrentLineInsideSubCeiling\n          ? eldestParentOfCurrentLine\n          : forwardNode;\n        if (_forwardNode) {\n          if (this._isBlockElement(_forwardNode) && !shift) {\n            e.preventDefault();\n\n            let leap =\n              arrowDirection === \"UP\"\n                ? _forwardNode.previousSibling\n                : _forwardNode.nextSibling;\n\n            if (!leap || this._isBlockElement(leap)) {\n              let p = this._createEmptyParagraph();\n              _forwardNode.parentNode.insertBefore(\n                p,\n                arrowDirection === \"UP\" ? _forwardNode : leap\n              );\n              _forwardNode = p;\n            } else _forwardNode = leap;\n\n            this.range = adjustSelection({\n              node: _forwardNode,\n              position: arrowDirection === \"DOWN\",\n            }, this.ceilingElement_queryArray);\n\n            if (\n              !shift &&\n              !currentLine.textContent &&\n              (this._isBlockElement(backwardNode) ||\n                (!backwardNode && currentLine === this.element.firstChild))\n            )\n              this.removeSandwichedLine_array.push(currentLine);\n          } else if (!isMultiLine && arrowDirection === \"DOWN\") {\n            e.preventDefault();\n            let collectOffset = 0;\n            let currentOffset = this.isRangeDirectionForward\n              ? endOffset\n              : startOffset;\n            nodeCrawler(\n              (n) => {\n                if (n === endContainer) return \"BREAK\";\n                else if (n.nodeType === 3 && n.textContent)\n                  collectOffset += n.textContent.length;\n                return n;\n              },\n              {\n                node: currentLine,\n              }\n            );\n            collectOffset += currentOffset;\n            this.range = adjustSelection({\n              node: collapsed\n                ? forwardNode\n                : this.isRangeDirectionForward\n                  ? [null, forwardNode]\n                  : [forwardNode, null],\n              position: collapsed\n                ? collectOffset\n                : this.isRangeDirectionForward\n                  ? [null, collectOffset]\n                  : [collectOffset, null],\n            }, this.ceilingElement_queryArray);\n          }\n        } // else e.preventDefault();\n    }\n  }\n\n  _append(i, insertAfter, wrap = false, focusElement) {\n    if (this.logExecution)\n      console.log(\"_append\", { i, insertAfter, wrap, focusElement });\n    let common = climbUpToEldestParent(\n      this.range.commonAncestorContainer,\n      this.element\n    );\n    let startLine = this.range.startLine;\n    let endLine = this.range.endLine;\n    let insertRestricted = [\"HR\", \"UL\", \"LI\", \"._media_\", \"._custom_\"];\n\n    let append = (node) => {\n      if (node === this.element)\n        node = this.element.childNodes[this.element.childNodes.length - 1];\n\n      let next = node.nextSibling;\n      if (insertAfter) node.parentNode.insertBefore(insertAfter, next);\n\n      node.parentNode.insertBefore(i, insertAfter || next);\n      if (\n        this._isTextElement(node) &&\n        !node.textContent &&\n        this.element.lastChild !== node\n      )\n        node.remove();\n    };\n\n    if (wrap) {\n      let nodeToUnwrap = {};\n      let restricted = false;\n\n      let checker = (tag, el) => {\n        if (\n          el &&\n          (!nodeToUnwrap[tag] ||\n            (() => {\n              for (let u in nodeToUnwrap) {\n                if (nodeToUnwrap[u] === el) return false;\n              }\n              return true;\n            })())\n        )\n          nodeToUnwrap[tag] = el;\n      };\n\n      if (this.range.collapsed) {\n        checker(i.nodeName, startLine.closest(i.nodeName));\n\n        let idx = i.classList.length;\n        while (idx--) {\n          let className = i.classList[idx];\n          checker(className, startLine.closest(\".\" + className));\n        }\n      } else\n        nodeCrawler(\n          (n) => {\n            let chk = n.nodeType === 3 ? n.parentNode : n;\n            if (chk.nodeType !== 1) {\n              restricted = true;\n              return \"BREAK\";\n            }\n\n            if (n.nodeType === 1) {\n              for (let notAllowed of insertRestricted)\n                if (n.nodeName === notAllowed || n.closest(notAllowed)) {\n                  restricted = true;\n                  return \"BREAK\";\n                }\n            }\n\n            checker(i.nodeName, chk.closest(i.nodeName));\n\n            let idx = i.classList.length;\n            while (idx--) {\n              let className = i.classList[idx];\n              checker(className, chk.closest(\".\" + className));\n            }\n\n            if (n === this.range.endContainer) return \"BREAK\";\n\n            return n;\n          },\n          { node: common, startNode: this.range.startContainer }\n        );\n\n      if (restricted) return;\n\n      if (Object.keys(nodeToUnwrap).length) {\n        for (let u in nodeToUnwrap) this._wrapNode(nodeToUnwrap[u]);\n      } else {\n        append(endLine);\n\n        let extract = this.range.extractContents();\n\n        if (extract.childNodes[0]) {\n          while (extract.childNodes[0]) {\n            let t = extract.childNodes[0];\n            if (!t.textContent) t.remove();\n            else i.append(t);\n          }\n        } else i.append(this._createEmptyParagraph());\n\n        this.range = adjustSelection({\n          node: focusElement || i,\n          position: false,\n        }, this.ceilingElement_queryArray);\n\n        let fc = i.previousSibling;\n\n        if (fc) {\n          fc = fc.nodeType === 3 ? fc.parentNode : fc;\n\n          if (\n            this._isTextElement(fc) &&\n            (!fc.textContent || fc.textContent === \"\\u200B\")\n          )\n            fc.remove();\n        }\n      }\n\n      return;\n    }\n\n    for (let r of insertRestricted) {\n      if (endLine.closest(r)) endLine = endLine.closest(r);\n    }\n\n    append(endLine);\n\n    if (insertAfter)\n      this.range = adjustSelection({ node: focusElement || insertAfter }, this.ceilingElement_queryArray);\n  }\n\n  async _callback(data) {\n    if (typeof this.callback === \"function\") {\n      let cb = this.callback(data) || data;\n      if (cb instanceof Promise) {\n        cb = await cb;\n      }\n      return cb || data;\n    }\n    return data;\n  }\n\n  async _imageSelected(e) {\n    if (this.logExecution) console.log(\"_imageSelected\", { e });\n    let files = e.target.files;\n\n    const prepareForCallback = { image: [] };\n    let readFile = new FileReader();\n\n    const load = (file) => {\n      return new Promise((res) => {\n        readFile.onload = (f) => {\n          const { lastModified, name, size, type } = file;\n          const source = f.target.result;\n\n          let img = new Image();\n          img.onload = () => {\n            res({\n              dimension: {\n                width: img.width,\n                height: img.height,\n              },\n              lastModified,\n              filename: name,\n              fileSize: size,\n              fileType: type,\n              source,\n              elementId: generateId(\"img\"),\n            });\n          };\n          img.src = source;\n        };\n        readFile.readAsDataURL(file);\n      });\n    };\n\n    this.callback({ loading: true });\n    for (let idx = 0; files.length > idx; idx++) {\n      prepareForCallback.image[idx] = await load(files[idx]);\n    }\n    this.callback({ loading: false });\n\n    //  reset image input\n    this.imgInput.value = \"\";\n\n    let feedback = await this._callback(prepareForCallback);\n\n    if (!this.range) {\n      this.restoreLastSelection();\n    }\n    if (\n      !this.range ||\n      (() => {\n        let c = this.range.commonAncestorContainer;\n        c = c.nodeType === 3 ? c.parentNode : c;\n        return !c.closest(\"#\" + this.elementId);\n      })()\n    )\n      this.element.focus();\n\n    // this._setRange(() => {\n    for (let img of feedback.image) {\n      let media = this._loadImage(img, document.createElement(\"div\"));\n      this._append(media, this._createEmptyParagraph());\n    }\n    // });\n  }\n\n  _loadImage(imageObject, wrapper) {\n    if (this.logExecution) console.log(\"_loadImage\", { imageObject, wrapper });\n    /**\n         elementId: \"img_uniqueId\"\n         element: HTML\n         fileSize: 0\n         fileType: \"image/jpeg\"\n         source: \"file.jpg | http://url.com/file.jpg | s3 filename | base 64 string\"\n         lastModified: 0000000000000\n         filename: \"selectedLocalFilename.jpg\"\n         */\n\n    if (wrapper instanceof Node) {\n      if (!wrapper.classList.contains(\"_media_\"))\n        wrapper.classList.add(\"_media_\");\n\n      if (wrapper.getAttribute(\"contenteditable\") !== \"false\")\n        wrapper.setAttribute(\"contenteditable\", \"false\");\n    } else throw \"image needs _media_ wrapper\";\n\n    let process = (i) => {\n      let image = i?.element instanceof Node ? i.element : null;\n\n      if (image) {\n        if (image.id) i.elementId = image.id;\n        else image.id = i.elementId;\n      }\n\n      if (!image) {\n        image = document.createElement(\"img\");\n        i.element = image;\n\n        let classname =\n          \"_img_\" +\n          i.source\n            .substring(i.source.length - 128)\n            .replace(/[/:.\"'\\\\@#$%\\?= \\{\\}\\|&*`!<>+]/g, \"\");\n        if (image.classList.contains(classname)) image.classList.add(classname);\n\n        if (Array.isArray(i.class)) {\n          for (let cl of i.class) image.classList.add(cl);\n        }\n\n        if (image.tagName === \"IMG\") image.setAttribute(\"src\", i.source);\n\n        if (typeof i.onclick === \"function\") {\n          image.addEventListener(\"click\", i.onclick);\n          image.classList.add(\"_hover_\");\n        }\n\n        if (\n          i.style &&\n          typeof i.style === \"object\" &&\n          Object.keys(i.style).length\n        ) {\n          for (let st in i.style) {\n            wrapper.style.setProperty(st, i.style[st]);\n          }\n        }\n      }\n\n      wrapper.setAttribute(\"contenteditable\", \"false\");\n      wrapper.append(image);\n\n      let pushArray = true;\n\n      for (let chk of this.image_array)\n        if (chk.elementId === i.elementId) {\n          pushArray = false;\n          break;\n        }\n\n      if (pushArray) this.image_array.push(i);\n    };\n\n    process(imageObject);\n\n    return wrapper;\n  }\n\n  _getAnchorOffsetFromLine(line) {\n    const sel = window.getSelection();\n    if (!sel || !sel.anchorNode) return 0;\n\n    let anchorNode = sel.anchorNode;\n    let anchorOffset = sel.anchorOffset;\n\n    // If anchorNode is not inside line, return 0\n    if (!line.contains(anchorNode) && line !== anchorNode) return 0;\n\n    let offset = 0;\n    let found = false;\n\n    function traverse(node) {\n      if (found) return;\n      if (node === anchorNode) {\n        offset += anchorOffset;\n        found = true;\n        return;\n      }\n      if (node.nodeType === 3) {\n        offset += node.textContent.length;\n      } else {\n        for (let child of node.childNodes) {\n          traverse(child);\n          if (found) break;\n        }\n      }\n    }\n\n    traverse(line);\n    return offset;\n  }\n  _getFocusOffsetFromLine(line) {\n    const sel = window.getSelection();\n    if (!sel || !sel.focusNode) return 0;\n\n    let focusNode = sel.focusNode;\n    let focusOffset = sel.focusOffset;\n\n    // If focusNode is not inside line, return 0\n    if (!line.contains(focusNode) && line !== focusNode) return 0;\n\n    let offset = 0;\n    let found = false;\n\n    function traverse(node) {\n      if (found) return;\n      if (node === focusNode) {\n        offset += focusOffset;\n        found = true;\n        return;\n      }\n      if (node.nodeType === 3) {\n        offset += node.textContent.length;\n      } else {\n        for (let child of node.childNodes) {\n          traverse(child);\n          if (found) break;\n        }\n      }\n    }\n\n    traverse(line);\n    return offset;\n  }\n\n  _normalizeDocument(normalize) {\n    if (this.logExecution) console.log(\"_normalizeDocument\", { normalize });\n    if (!normalize) return;\n\n    nodeCrawler(\n      (n) => {\n        if (n.nodeType === 3 && n.textContent.includes(\"\\u200B\")) {\n          //!n.textContent ||\n          n.textContent = n.textContent.replace(\"\\u200B\", \"\");\n\n          if (!n.textContent) {\n            let cel;\n            for (let c of this.ceilingElement_queryArray)\n              if (n.parentNode.closest(c)) {\n                cel = n.parentNode.closest(c);\n                break;\n              }\n\n            let el = climbUpToEldestParent(n, cel, true);\n\n            let par = el.parentNode;\n            if (\n              !this._isCeilingElement(par) &&\n              !el.textContent &&\n              this.element.lastChild !== el\n            ) {\n              par.removeChild(el);\n              n = par;\n            }\n            return n;\n          }\n        } else if (n.nodeType === 1) n.normalize();\n\n        return n;\n      },\n      { node: this.element }\n    );\n  }\n\n  _replaceText(wholeDocument = false) {\n    if (this.logExecution) console.log(\"_replaceText\", { wholeDocument });\n    const process = (typeName, setData) => {\n      if (!this[typeName]) return;\n\n      let regex = regexr[typeName] || null;\n\n      if (regex === null) throw new Error(\"no regex to process\");\n\n      if (typeof setData !== \"function\")\n        throw new Error(\"setData should be returning function\");\n\n      let node = wholeDocument\n        ? this.element\n        : this.range?.commonAncestorContainer;\n\n      if (!node) return;\n\n      if (node.nodeType === 3) node = node.parentNode;\n\n      let res = (() => {\n        let className = `_${typeName}_`;\n        let element = [];\n        let collected = [];\n\n        let textNodes = [];\n        nodeCrawler(\n          (n) => {\n            if (n.nodeType === 3 && n.textContent) {\n              if (\n                n.nextSibling?.nodeType === 3 &&\n                n.nextSibling.textContent &&\n                n.nextSibling.textContent !== \"\\u200B\"\n              ) {\n                let par = n.parentNode;\n                par.normalize();\n                n = par;\n              } else if (\n                n.textContent !== \"\\u200B\" &&\n                !n.parentNode.closest(\".\" + className)\n              )\n                textNodes.push(n);\n            }\n\n            return n;\n          },\n          { node }\n        );\n\n        textNodes.forEach((node) => {\n          replaceTextNode(node, regex, function (matched) {\n            if (matched.length > 1) {\n              return {\n                name: \"span\",\n                attrs: { class: `${className} ${className}${matched}` },\n                content: matched,\n              };\n            }\n          });\n        });\n\n        function replaceTextNode(node, regex, handler) {\n          let par = node.parentNode,\n            nxt = node.nextSibling,\n            doc = node.ownerDocument,\n            hits;\n\n          if (regex.global) {\n            while (node && (hits = regex.exec(node.nodeValue))) {\n              regex.lastIndex = 0;\n              node = handleResult(node, hits, handler.apply(this, hits));\n            }\n          } else if ((hits = regex.exec(node.nodeValue)))\n            handleResult(node, hits, handler.apply(this, hits));\n\n          function handleResult(node, hits, results) {\n            let orig = node.nodeValue;\n            node.nodeValue = orig.slice(0, hits.index);\n            [].concat(create(par, results)).forEach(function (n) {\n              let res = par.insertBefore(n, nxt);\n              element.push(res);\n            });\n            let rest = orig.slice(hits.index + hits[0].length);\n            if (rest) {\n              let text = doc.createTextNode(rest);\n              return par.insertBefore(text, nxt);\n            }\n          }\n\n          function create(el, o) {\n            if (o.map)\n              return o.map(function (v) {\n                return create(el, v);\n              });\n            else if (typeof o === \"object\") {\n              let e = doc.createElementNS(\n                o.namespaceURI || el.namespaceURI,\n                o.name\n              );\n              if (o.attrs) for (let a in o.attrs) e.setAttribute(a, o.attrs[a]);\n              if (o.content)\n                [].concat(create(e, o.content)).forEach(e.appendChild, e);\n              if (typeof o.content === \"string\") collected.push(o.content);\n              e.contentEditable = \"false\";\n              return e;\n            } else return doc.createTextNode(o + \"\");\n          }\n        }\n\n        let anchorText;\n        if (element.length) {\n          for (let el of element) {\n            anchorText = node.ownerDocument.createTextNode(\"\");\n            el.parentNode.insertBefore(anchorText, el.nextSibling);\n          }\n        }\n        return { collected, element, anchorText };\n      })();\n\n      let textEl = res.element;\n\n      if (!wholeDocument) {\n        this.range = adjustSelection({\n          node: res.anchorText,\n          position: false,\n        }, this.ceilingElement_queryArray);\n      }\n\n      let toCallback = [];\n      let collectId = [];\n\n      if (textEl[0])\n        for (let el of textEl) {\n          let elementId = generateId(typeName);\n          el.setAttribute(\"id\", elementId);\n          let tc = setData(el) || {};\n          tc.elementId = el.id;\n          tc.element = el;\n\n          el.removeAttribute(\"style\");\n          collectId.push(el.id);\n          toCallback.push(tc);\n        }\n\n      if (toCallback.length) {\n        this._callback({ [typeName]: toCallback })\n          .then((e) => {\n            for (let idx = 0; collectId.length > idx; idx++) {\n              //  elementId is read only\n              e[typeName][idx].elementId = collectId[idx];\n            }\n\n            if (Array.isArray(e[typeName]) && e[typeName].length)\n              for (let h of e[typeName]) {\n                let dom = document.getElementById(h.elementId);\n\n                dom.setAttribute(\"id\", h.elementId);\n                dom.setAttribute(\"contenteditable\", \"false\");\n\n                if (typeof h.onclick === \"function\") {\n                  dom.addEventListener(\"click\", h.onclick);\n                  dom.classList.add(\"_hover_\");\n                }\n\n                if (\n                  h.style &&\n                  typeof h.style === \"object\" &&\n                  Object.keys(h.style).length\n                ) {\n                  for (let s in h.style) dom.style.setProperty(s, h.style[s]);\n                }\n\n                this[`${typeName}_array`].push(h);\n              }\n          })\n          .catch((err) => {\n            console.error(err);\n          });\n      }\n    };\n\n    if (this.urllink_flag) {\n      process(\"urllink\", (url) => {\n        let u = url.textContent;\n        url.addEventListener(\"click\", function () {\n          if (!u.match(/^https?:\\/\\//i)) {\n            u = \"http://\" + u;\n          }\n          window.open(u, \"_blank\");\n        });\n\n        return { url: u };\n      });\n    }\n\n    if (this.hashtag_flag) {\n      process(\"hashtag\", (tag) => {\n        let t = tag.textContent;\n        return { tag: t[0] === \"#\" ? t.substring(1) : t };\n      });\n    }\n\n    this.hashtag_flag = false;\n    this.urllink_flag = false;\n  }\n\n  _checkElement(node, chkArr, closest, exp) {\n    /**\n     * parentNode when node is a text node\n     * chkArr is an array of class names or tag names\n     * closest is a boolean to check if the element is closest to the node\n     */\n    if (this.logExecution)\n      console.log(\"_checkElement\", { node, chkArr, closest, exp });\n    if (node && node.nodeType === 1)\n      for (let c of chkArr) {\n        if (closest) {\n          let clo = node.closest(c);\n          if (clo) {\n            if (exp && exp[c]) {\n              if (c === \"._custom_\") {\n                let flyup = node;\n                let gotTheMatch = false;\n                if (node !== this.element) {\n                  while ((flyup && this.element !== flyup) || !gotTheMatch) {\n                    gotTheMatch =\n                      flyup.getAttribute(exp[c].attr) === exp[c].value;\n                    if (gotTheMatch) return false;\n\n                    flyup = flyup.parentNode;\n                  }\n                }\n              } else\n                return clo.getAttribute(exp[c].attr) === exp[c].value\n                  ? false\n                  : clo;\n            }\n\n            return clo;\n          }\n        } else if (\n          c[0] === \"#\"\n            ? node.id === c.substring(1)\n            : c[0] === \".\"\n              ? node.classList.contains(c.substring(1))\n              : node.nodeName === c\n        )\n          return true;\n      }\n    return false;\n  }\n\n  _isUnSelectableElement(node) {\n    if (this.logExecution) console.log(\"_isUnSelectableElement\", { node });\n    node = node?.nodeType === 3 ? node.parentNode : node;\n    let exceptions = {\n      \"._custom_\": { attr: \"contenteditable\", value: \"true\" },\n    };\n    return this._checkElement(\n      node,\n      this.unSelectable_queryArray,\n      true,\n      exceptions\n    );\n  }\n\n  _isStyleAllowedElement(node) {\n    if (this.logExecution) console.log(\"_isStyleAllowedElement\", { node });\n    return this._checkElement(node, this.styleAllowedElement_queryArray);\n  }\n\n  _isCeilingElement(node) {\n    if (this.logExecution) console.log(\"_isCeilingElement\", { node });\n    return this._checkElement(node, this.ceilingElement_queryArray);\n  }\n\n  _isBlockElement(node) {\n    if (this.logExecution) console.log(\"_isBlockElement\", { node });\n    return this._checkElement(node, this.blockElement_queryArray);\n  }\n\n  _isTextAreaElement(node) {\n    if (this.logExecution) console.log(\"_isTextAreaElement\", { node });\n    return this._checkElement(node, this.textAreaElement_queryArray);\n  }\n\n  _isTextBlockElement(node) {\n    if (this.logExecution) console.log(\"_isTextBlockElement\", { node });\n    node = node?.nodeType === 3 ? node.parentNode : node;\n    return this._checkElement(node, this.textBlockElement_queryArray);\n  }\n\n  _isSpecialTextElement(node) {\n    if (this.logExecution) console.log(\"_isSpecialTextElement\", { node });\n    node = node?.nodeType === 3 ? node.parentNode : node;\n    return this._checkElement(node, this.specialTextElement_queryArray);\n  }\n\n  _isTextElement(node) {\n    if (this.logExecution) console.log(\"_isTextElement\", { node });\n    node = node?.nodeType === 3 ? node.parentNode : node;\n    return (\n      (this._isTextBlockElement(node) || node.nodeName === \"SPAN\") &&\n      !this._isSpecialTextElement(node)\n    );\n  }\n\n  /**\n   * List of command for editing wysiwyg text.\n   * @param {'quote'} action - Add blockquote below selected line.\n   * @also\n   * @param {'unorderedList'} action - Add unordered list below selected line.\n   * @also\n   * @param {'orderedList'} action - Add ordered list below selected line.\n   * @also\n   * @param {'divider'} action - Add HR below selected line.\n   * @also\n   * @param {'image'} action - Add image below selected line.\n   * @also\n   * @param {'alignLeft'} action - Align selected line to left.\n   * @also\n   * @param {'alignCenter'} action - Align selected line to center.\n   * @also\n   * @param {'alignRight'} action - Align selected line to right.\n   * @also\n   * @param {'color' | 'hex | rgb string | hsl string'} action - Apply color to selected text. If 'color' is given, the default focus color is applied to the text.\n   * @also\n   * @param {'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'small' | 'bold' | 'italic' | 'underline' | 'strike'} action - Apply style to selection.\n   * @also\n   * @param {object} action - Custom element object\n   * @param {object | string} action.element - Custom element can be node objects | html string | string\n   * @param {string} action.elementId - Set custom elements parent id. Otherwise auto generated\n   * @param {object} action.style - Set custom elements parent css style\n   * @param {boolean} action.insert - Set custom element insert mode. If true, inserts element at carat position, otherwise appends on next line\n   */\n  command(action) {\n    if (!action) return;\n\n    if (!this.range) this.restoreLastSelection();\n\n    switch (action) {\n      case \"quote\": {\n        if (\n          !this.range ||\n          (() => {\n            let c = this.range.commonAncestorContainer;\n            c = c.nodeType === 3 ? c.parentNode : c;\n            return !c.closest(\"#\" + this.elementId);\n          })()\n        )\n          this.element.focus();\n\n        let p = this._createEmptyParagraph();\n        let bq = document.createElement(\"blockquote\");\n        this._append(bq, p, true);\n        return;\n      }\n      case \"unorderedList\": {\n        if (\n          !this.range ||\n          (() => {\n            let c = this.range.commonAncestorContainer;\n            c = c.nodeType === 3 ? c.parentNode : c;\n            return !c.closest(\"#\" + this.elementId);\n          })()\n        )\n          this.element.focus();\n\n        let p = this._createEmptyParagraph();\n        let li = document.createElement(\"li\"),\n          ul = document.createElement(\"ul\");\n        ul.append(li);\n        this._append(ul, p, false, li);\n        return;\n      }\n      case \"orderedList\": {\n        if (\n          !this.range ||\n          (() => {\n            let c = this.range.commonAncestorContainer;\n            c = c.nodeType === 3 ? c.parentNode : c;\n            return !c.closest(\"#\" + this.elementId);\n          })()\n        )\n          this.element.focus();\n\n        let p = this._createEmptyParagraph();\n        let li = document.createElement(\"li\"),\n          ul = document.createElement(\"ol\");\n        ul.append(li);\n        this._append(ul, p, false, li);\n        return;\n      }\n      case \"divider\": {\n        if (\n          !this.range ||\n          (() => {\n            let c = this.range.commonAncestorContainer;\n            c = c.nodeType === 3 ? c.parentNode : c;\n            return !c.closest(\"#\" + this.elementId);\n          })()\n        )\n          this.element.focus();\n\n        let p = this._createEmptyParagraph(),\n          hr = document.createElement(\"hr\");\n        hr.setAttribute(\"contenteditable\", \"false\");\n        this._append(hr, p, false);\n        return;\n      }\n      case \"image\":\n        this.imgInput.click();\n        return;\n      case \"alignLeft\":\n      case \"alignCenter\":\n      case \"alignRight\":\n        if (!this.range) return;\n        let startLine = this.range.startLine;\n        let endLine = this.range.endLine;\n\n        let collectLines = [];\n        collectLines.push(startLine);\n\n        while (collectLines[collectLines.length - 1] !== endLine) {\n          let nextLine = collectLines[collectLines.length - 1].nextSibling;\n\n          while (nextLine && !this._isTextBlockElement(nextLine)) {\n            if (\n              this._isCeilingElement(nextLine) &&\n              nextLine.firstChild &&\n              this._isTextBlockElement(nextLine.firstChild)\n            ) {\n              nextLine = nextLine.firstChild;\n              break;\n            }\n            nextLine = nextLine.nextSibling;\n          }\n\n          if (\n            !nextLine &&\n            this._isCeilingElement(\n              collectLines[collectLines.length - 1].parentNode\n            )\n          )\n            nextLine =\n              collectLines[collectLines.length - 1].parentNode.nextSibling;\n\n          if (nextLine) collectLines.push(nextLine);\n          else break;\n        }\n\n        let commandTracker = Object.assign({}, this.commandTracker);\n\n        for (let l of collectLines) {\n          for (let c of this.alignClass) {\n            if (l.classList.contains(c)) l.classList.remove(c);\n            commandTracker[c.substring(1, c.length - 1)] = false;\n          }\n\n          if (action !== \"alignLeft\" && !this.commandTracker[action]) {\n            for (let c of this.alignClass) {\n              if (c.includes(action)) l.classList.add(c);\n            }\n            commandTracker[action] = true;\n          }\n        }\n\n        this.commandTracker = commandTracker;\n\n        this._callback({\n          commandTracker,\n          range: this.range,\n        }).catch((err) => err);\n        return;\n\n      default:\n        break;\n    }\n\n    let isColor;\n    try {\n      isColor = new ColorMangle(action).hex();\n      action = \"color\";\n    } catch { }\n\n    //  style command\n    if (this.styleTagOfCommand[action]) {\n      // this._setRange(() => {\n      let wrapper,\n        query = this.styleTagOfCommand[action],\n        stopperMode = false;\n\n      let counter = this.counterTagOf[query]\n        ? this.counterTagOf[query].map((c) => this._classNameToQuery(c))\n        : [];\n      if (counter.length)\n        counter = counter.concat(counter.map((c) => c + \"_stop\"));\n\n      //  setup query\n      query = this._classNameToQuery(query);\n\n      if (this.commandTracker[action]) {\n        let pass;\n\n        if (action === \"color\") {\n          pass =\n            isColor === this.commandTracker[action] ||\n            (isColor === undefined &&\n              this.commandTracker[action] ===\n              this.cssVariable[\"--content-text_focus\"]);\n        } else pass = true;\n\n        if (pass) {\n          query = this._classNameToQuery(query + \"_stop\");\n          stopperMode = true;\n        }\n      }\n\n      //  setup wrapper element\n      if (query[0] === \".\") {\n        wrapper = document.createElement(\"SPAN\");\n        wrapper.classList.add(query.substring(1));\n      } else wrapper = document.createElement(query);\n\n      if (isColor && !stopperMode) wrapper.style.color = isColor;\n\n      let restrictedClass = this._isSelectionTrespassRestrictedRange();\n      if (this.range.collapsed) {\n        if (restrictedClass) return;\n\n        let text = document.createTextNode(\"\");\n        // let text = document.createTextNode(\"\\u200B\");\n        wrapper.append(text);\n\n        if (this.range.startContainer.nodeName === \"BR\")\n          this.range.startContainer.parentNode.insertBefore(\n            wrapper,\n            this.range.startContainer\n          );\n        else this.range.insertNode(wrapper);\n\n        this.range = adjustSelection({ node: text, position: false }, this.ceilingElement_queryArray);\n      } else {\n        if (restrictedClass) {\n          this.range = adjustSelection({\n            node: this.range.endContainer,\n            position: this.range.endOffset,\n          }, this.ceilingElement_queryArray);\n          return;\n        }\n        //  selection has range\n        let extract = this.range.extractContents();\n        let span = document.createElement(\"span\");\n\n        while (extract.childNodes[0]) span.append(extract.childNodes[0]);\n\n        nodeCrawler(\n          (n) => {\n            let res = restrictedClass\n              ? this._classNameToQuery(restrictedClass)\n              : null;\n            let par = n.nodeType === 3 ? n.parentNode : n;\n            let restricted =\n              res && par.hasOwnProperty(\"closest\") ? par.closest(res) : false;\n\n            if (n.nodeType === 3 && !restricted)\n              n.textContent = n.textContent.replaceAll(\"\\t\", \"\");\n\n            return n;\n          },\n          { node: span, startFromEldestChild: true, parentNode: this.element }\n        );\n\n        while (span.childNodes[0]) extract.append(span.childNodes[0]);\n\n        //  unwrap duplicates and stopper | counter\n        let unwrapTarget = [query];\n\n        //  add countering | opposite tag to unwrap\n        if (stopperMode) {\n          let rev = query.replace(\"_stop\", \"\").substring(1);\n          rev = rev[0] === \"_\" ? \".\" + rev : rev;\n          unwrapTarget.push(rev);\n        } else {\n          let rev = query + \"_stop\";\n          rev = rev[0] === \".\" ? rev : \".\" + rev;\n          unwrapTarget.push(rev);\n        }\n\n        unwrapTarget = unwrapTarget.concat(counter);\n        let del = extract.querySelectorAll(unwrapTarget.join());\n        let idx = del.length;\n        if (idx) while (idx--) this._wrapNode(del[idx]);\n\n        //  split wrapper\n        let wrapperSplit = [wrapper.cloneNode(true)];\n\n        while (extract.childNodes[0]) {\n          let child = extract.childNodes[0];\n\n          if (child.nodeType === 1 && this._isBlockElement(child)) {\n            let nest = this._isTextAreaElement(child);\n\n            if (nest) {\n              for (let idx = 0; child.childNodes.length > idx; idx++) {\n                let text = child.childNodes[idx];\n\n                if (this._isTextElement(text)) {\n                  let nestedWrapper = wrapper.cloneNode(true);\n                  while (text.childNodes[0]) {\n                    if (text.childNodes[0].textContent)\n                      nestedWrapper.append(text.childNodes[0]);\n                    else text.childNodes[0].remove();\n                  }\n                  text.append(nestedWrapper);\n                }\n              }\n\n              if (!child.textContent) {\n                child.remove();\n                continue;\n              }\n            }\n\n            let doc = document.createDocumentFragment();\n            doc.append(child);\n            wrapperSplit.push(doc);\n          } else {\n            if (child.nodeType === 1 && this._isTextBlockElement(child)) {\n              let nestedWrapper = wrapper.cloneNode(true);\n\n              while (child.childNodes[0])\n                nestedWrapper.append(child.childNodes[0]);\n\n              if (\n                nestedWrapper.childNodes.length === 1 &&\n                nestedWrapper.childNodes[0].nodeName !== \"BR\" &&\n                !nestedWrapper.textContent.length\n              ) {\n                child.remove();\n                continue;\n              }\n\n              child.append(nestedWrapper);\n              let doc = document.createDocumentFragment();\n              doc.append(child);\n              wrapperSplit.push(doc);\n            } else wrapperSplit[wrapperSplit.length - 1].append(child);\n          }\n        }\n\n        let output = document.createDocumentFragment();\n        for (let ws of wrapperSplit) output.append(ws);\n\n        let fc = output.firstChild;\n        let lc = output.lastChild;\n\n        if (this._isTextElement(fc) && !fc.textContent) {\n          let fn = fc.nextSibling;\n          fc.remove();\n          fc = fn;\n        }\n        if (this._isTextElement(lc) && !fc.textContent) {\n          let lp = lc.nextSibling;\n          lc.remove();\n          lc = lp;\n        }\n\n        this.range.insertNode(output);\n        this.range = adjustSelection({\n          node: [fc, lc],\n          position: [true, false],\n        }, this.ceilingElement_queryArray);\n\n        //  remove garbage node\n        fc = fc.nodeType === 3 ? fc.parentNode : fc;\n        lc = lc.nodeType === 3 ? lc.parentNode : lc;\n\n        let next = lc.nextSibling;\n        if (\n          this._isTextElement(next) &&\n          (!next.textContent || next.textContent === \"\\u200B\")\n        )\n          next.remove();\n\n        let prev = fc.previousSibling;\n        if (\n          (this._isTextElement(prev) && !prev.textContent) ||\n          prev.textContent === \"\\u200B\"\n        )\n          prev.remove();\n      }\n      // }, true);\n\n      return;\n    }\n\n    //  custom component\n    if (typeof action === \"object\") {\n      /**\n        action = {\n          elementId: <string: generated parent element id>,\n          element: <HTMLElement>,\n          style: {<css style object for parent element>},\n          insert: true | false,\n          contenteditable: false,\n        }\n      */\n\n      // this._setRange(() => {\n      //  setup wrapper\n      let custom = document.createElement(\"div\");\n      custom.classList.add(\"_custom_\");\n      custom.setAttribute(\n        \"contenteditable\",\n        (!!action?.contenteditable).toString()\n      );\n\n      if (action.style)\n        for (let s in action.style) custom.style[s] = action.style[s];\n\n      action.elementId = action.elementId || generateId(\"custom\");\n      custom.id = action.elementId;\n\n      if (typeof action.element === \"string\")\n        custom.innerHTML = action.element;\n      else if (action.element instanceof HTMLElement)\n        custom.append(action.element);\n\n      if (!custom.children.length) action.insert = true; // insert if only text node\n\n      if (!this.range) this.element.focus();\n\n      this.custom_array.push(action);\n\n      this._callback({ custom: action }).then((_) => {\n        if (action.insert) {\n          let txt = document.createTextNode(\"\");\n          this.range.insertNode(txt); // when inserted in range, it will push the next el back\n          this.range.insertNode(custom);\n          this.range = adjustSelection({\n            node: txt,\n            position: false,\n          }, this.ceilingElement_queryArray);\n        } else this._append(custom, this._createEmptyParagraph(), false);\n      });\n      // });\n    }\n  }\n\n  /**\n   * Restores the last selection range\n   */\n  restoreLastSelection() {\n    if (this.logExecution)\n      console.log(\"restoreLastSelection\", { range_backup: this.range_backup });\n    if (this.range_backup) {\n      this.range = adjustSelection({\n        node: [\n          this.range_backup.startContainer,\n          this.range_backup.endContainer,\n        ],\n        position: [this.range_backup.startOffset, this.range_backup.endOffset],\n      }, this.ceilingElement_queryArray);\n      let sel = window.getSelection();\n      let range = document.createRange();\n      range.setStart(this.range.startContainer, this.range.startOffset);\n      range.setEnd(this.range.endContainer, this.range.endOffset);\n      sel.removeAllRanges();\n      sel.addRange(range);\n    }\n  }\n\n  /**\n   * Load html string to wysiwyg\n   * @param {string} html - HTML string to load.\n   * @param {boolean} [editable=false] - Set editable mode.\n   */\n  async loadHTML(html = this.html, editable = false) {\n    if (typeof html !== \"string\") {\n      throw new Error(\"html should be a string\");\n    }\n\n    this.setEditable(false);\n    this.html = html || \"\";\n    const div = document.createElement(\"div\");\n    div.innerHTML = html;\n\n    // image\n    const img = div.querySelectorAll(\"img\");\n    const imgCallback = [];\n    if (img.length)\n      for (let i of img) {\n        const imageParent = i.closest(\"._media_\");\n\n        if (imageParent) {\n          const source = i.getAttribute(\"src\");\n          let imgId = i.id || generateId(\"img\");\n          i.setAttribute(\"id\", imgId);\n\n          imgCallback.push({\n            source,\n            elementId: imgId,\n            element: i,\n          });\n        }\n\n        this.image_array = JSON.parse(JSON.stringify(imgCallback));\n      }\n\n    // hashtag\n    const hashtag = div.querySelectorAll(\"._hashtag_\");\n    const hashtagCallback = [];\n    if (hashtag.length)\n      for (let i of hashtag) {\n        let clIdx = i.classList.length;\n        let tag,\n          elementId = i.id || generateId(\"hashtag\");\n        while (clIdx--) {\n          let cls = i.classList[clIdx];\n          if (cls.replace(\"_hashtag_\", \"\")[0] === \"#\") {\n            tag = cls.replace(\"_hashtag_\", \"\");\n          }\n        }\n        tag = tag?.[0] === \"#\" ? tag.substring(1) : tag;\n        if (tag) hashtagCallback.push({ tag, elementId, element: i });\n      }\n\n    // urllink\n    const urllink = div.querySelectorAll(\"._urllink_\");\n    const urllinkCallback = [];\n    if (urllink.length)\n      for (let i of urllink) {\n        let elementId = i.id || generateId(\"urllink\");\n        let url;\n\n        let clIdx = i.classList.length;\n        while (clIdx--) {\n          let cls = i.classList[clIdx];\n          if (cls.includes(\"_urllink_\").length) {\n            url = cls.replace(\"_urllink_\", \"\");\n          }\n        }\n        if (url) urllinkCallback.push({ url, elementId, element: i });\n      }\n\n    const custom = div.querySelectorAll(\"._custom_\");\n    const customCallback = [];\n    if (custom.length)\n      for (let i of custom) {\n        let elementId = i.id || generateId(\"custom\");\n        customCallback.push({ elementId, element: i });\n      }\n\n    let fb = await this._callback({\n      image: imgCallback,\n      hashtag: hashtagCallback,\n      urllink: urllinkCallback,\n      custom: customCallback,\n    });\n\n    // callback\n    for (let f in fb) {\n      if (f === \"image\") {\n        let img = fb[f];\n        for (let i of img) {\n          let imgEl = div.querySelector(\"#\" + i.elementId);\n          const imageParent = imgEl.closest(\"._media_\");\n          this._loadImage(i, imageParent);\n        }\n      } else this[f + \"_array\"] = fb[f];\n    }\n\n    this.element.innerHTML = \"\";\n\n    while (div.childNodes[0]) this.element.append(div.childNodes[0]);\n\n    if (editable) this.setEditable(true);\n  }\n\n  /**\n   * Load html string to wysiwyg\n   * @param {function} [pre=(p)=>{return p}] - Pre processing callback before export.\n   * @return {object} - Exported wysiwyg data object\n   */\n  async export(pre) {\n    this._normalizeDocument(true);\n    const dom = this.element.cloneNode(true);\n\n    const { hashtag_array, image_array, urllink_array, custom_array } = this;\n    let title = \"\";\n    let text = \"\";\n\n    let setup = {\n      dom,\n      urllink: this.urllink ? urllink_array : undefined,\n      hashtag: this.hashtag ? hashtag_array : undefined,\n      image: image_array,\n      custom: custom_array,\n    };\n\n    if (typeof pre === \"function\") {\n      let promiseOrNot = pre(setup);\n\n      if (promiseOrNot instanceof Promise)\n        setup = (await promiseOrNot) || setup;\n      else setup = promiseOrNot || setup;\n\n      if (this.hashtag) this.hashtag_array = setup.hashtag;\n      if (this.urllink) this.urllink_array = setup.urllink;\n\n      this.image_array = setup.image;\n      this.custom_array = setup.custom;\n      title = setup.title || \"\";\n    }\n\n    const strip = setup.dom.querySelectorAll(\":scope > *\");\n\n    //  Loop through eldest child element in document\n    for (let sid = 0; sid < strip.length; sid++) {\n      let child = strip[sid];\n      if (child.textContent.length) {\n        //  set title and text information\n        let inputText = child.textContent;\n        if (!title) {\n          let titleSearchRegex = /([^\\s^.]{2,}[^\\s]+[.][^\\s^.]{2,})/g;\n          let urlArray = inputText.match(titleSearchRegex);\n\n          // We are replacing the urls with a special text here.\n          // Then we split the sentences by the dots.\n          // Then we replace the url with the special text and identify the title and body text\n\n          let split;\n          if (urlArray) {\n            for (let i = 0; i < urlArray.length; i++) {\n              inputText = inputText.replace(\n                urlArray[i].replace(/\\.+$/, \"\"),\n                \"[§url§]\" + i + \"[/§url§]\"\n              );\n            }\n\n            split = inputText.split(\".\");\n\n            for (let i = 0; i < split.length; i++) {\n              for (let j = 0; j < urlArray.length; j++) {\n                split[i] = split[i].replace(\n                  \"[§url§]\" + j + \"[/§url§]\",\n                  urlArray[j].replace(/\\.+$/, \"\")\n                );\n              }\n            }\n          } else split = inputText.split(\".\");\n\n          title = split[0];\n          if (title.length > 200) {\n            text += title.substring(200) + \".\";\n            title = title.substring(0, 200);\n          }\n\n          split.shift();\n          inputText = split.join(\".\").replace(/\\s\\s+/g, \" \");\n          text += inputText + \" \";\n        } else text += `${inputText}\\n`;\n      }\n\n      if (child.classList.contains(\"_media_\")) {\n        let idx = child.childNodes.length;\n        while (idx--) {\n          let c = child.childNodes[idx];\n          if (c.nodeName === \"IMG\") {\n            for (const f of this.image_array) {\n              if (f.elementId === c.id && f.source !== c.getAttribute(\"src\")) {\n                c.setAttribute(\"src\", f.source);\n                let cIdx = c.classList.length;\n                while (cIdx--) {\n                  if (\n                    c.classList[cIdx].includes(\"_img_\") &&\n                    c.classList[cIdx].length > 5\n                  ) {\n                    c.classList.remove(c.classList[cIdx]);\n                    let splitUrl = f.source.split(\"/\");\n                    let splitTail = splitUrl[splitUrl.length - 1];\n                    let splitTail_length = splitTail.length - 64;\n                    const sourceClip = splitUrl[splitUrl.length - 1].substring(\n                      splitTail_length > 0 ? splitTail : 0\n                    );\n                    c.classList.add(\"_img_\" + sourceClip);\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return {\n      html: setup.dom.innerHTML,\n      title: title.trim(),\n      text: text.trim(),\n      urllink: this.urllink ? this.urllink_array : undefined,\n      hashtag: this.hashtag ? this.hashtag_array : undefined,\n      image: this.image_array,\n      custom: this.custom_array,\n    };\n  }\n\n  /**\n   * Set placeholder string\n   * @param {string} p - Set placeholder string.\n   */\n  setPlaceholder(p) {\n    if (this.logExecution) console.log(\"setPlaceholder\", { p });\n    if (this.element) {\n      if (p && typeof p === \"string\")\n        this.element.setAttribute(\"placeholder\", p);\n      else this.element.removeAttribute(\"placeholder\");\n    }\n  }\n\n  /**\n   * Set spellcheck mode\n   * @param {boolean} bool - Set spellcheck mode.\n   */\n  setSpellcheck(bool) {\n    if (this.logExecution) console.log(\"setSpellcheck\", { bool });\n    if (this.element)\n      this.element.setAttribute(\"spellcheck\", bool ? \"on\" : \"off\");\n  }\n\n  /**\n   * Set edit mode\n   * @param {boolean} bool - Set wysiwyg to editable when true.\n   */\n  setEditable(bool) {\n    if (this.logExecution) console.log(\"setEditable\", { bool });\n    bool = this.element ? bool : false;\n\n    if (this.element)\n      this.element.setAttribute(\"contenteditable\", bool ? \"true\" : \"false\");\n\n    this._setEventListener(bool);\n    this._observeMutation(bool);\n  }\n}\n\nexport { Wysiwyg4All };\n"],"names":["root","factory","exports","module","define","amd","a","i","self","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","colorNames","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","goldenrod","gold","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavenderblush","lavender","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","ColorMangle","constructor","color","fineTuned","this","format","_colorType","type","throwErr","chkType","string","toLowerCase","match","Array","isArray","length","exec","err","_extractDigit","color_arg","rgba","push","parseFloat","getAlpha","extract","colorScheme","darkMode","focusOriginal","focusSat","opacity","template","content_isHighLuminance","isHighLuminance","focus","includes","matchLuminance","compDir","analogous","focusHSL","hsla","h","an1HSL","an2HSL","Math","abs","complementary","fixedValue","darkModeAnalogous","analogousNude","k","textColor","assign","contrastRatio","unordered","keys","sort","reduce","target_color","target_ratio","direction","method","target","adj","m","dir","count","adj_set","adjustBrightness","adjustLuminance","legacy","hex","main_lum","_luminance","lum","currDir","lum_pre","deg","spin","v","val","hsl","plus","s","l","minus","add","_toString","r","g","b","rgb","map","pow","col","numberOrNot","n","def","color_arg1","color_arg2","lum1","lum2","option","blackOpacity","whiteOpacity","opa","c_min","min","c_max","max","delta","round","toFixed","digit","toString","slice","rgbObject","hexValues","parseInt","opacity_value","c","x","limit","rgbRange","result","adjustSaturation","adjustSelection","ceilingElement_query","toArray","allowObject","setRange","node","position","sel","window","getSelection","range","getRangeAt","document","createRange","p","Node","setTarget","nodeType","lastChild","firstChild","textLength","nodeCrawler","textContent","parentNode","getAttribute","text","createTextNode","insertBefore","childNodes","nodeName","previousSibling","setEnd","doCollapse","setStart","startContainer","startOffset","endContainer","endOffset","collapse","removeAllRanges","addRange","startLine","endLine","q","e","closest","climbUpToEldestParent","run","startFromEldestChild","startNode","Error","commonAncestorContainer","parentAnchor","id","uniqueId","outputNodes","nodeIsRange","commonContainer","nodes","generateId","crawl","endNode","withInRange","cwl","breakOut","nextSibling","removeAttribute","prefix","charAt","floor","random","Date","getTime","substring","wrapper","singleChildParent","callback","isSingleChildParent","childrenCount","children","sweep","divCount","iHaveText","cb","regexr","hashtag","hashtag_stopper","urllink","Wysiwyg4All","elementId","editable","placeholder","spellcheck","highlightColor","html","fontSize","desktop","tablet","phone","h1","h2","h3","h4","h5","h6","small","lastLineBlank","logMutation","logExecution","fontSizeCssVariable","hold","keyArr","image_array","hashtag_array","urllink_array","custom_array","blockElement_queryArray","specialTextElement_queryArray","restrictedElement_queryArray","textAreaElement_queryArray","textBlockElement_queryArray","ceilingElement_queryArray","unSelectable_queryArray","styleAllowedElement_queryArray","alignClass","hashtag_flag","urllink_flag","range_backup","commandTracker","isRangeDirectionForward","insertTabPending_tabString","removeSandwichedLine_array","lastKey","element","getElementById","innerHTML","cssVariable","style","setProperty","elementComputedStyle","getComputedStyle","defaultFontColor","classList","contains","setPlaceholder","setSpellcheck","paddingB","paddingBottom","paddingT","paddingTop","borderT","borderTopWidth","borderB","borderBottomWidth","minHeight","command","italic","bold","underline","strike","fontSizeRatio","tag","ratio","entries","emSize","styleTagOfCommand","counterTagOf","cssPropertyOf","cssPropertyChecker","textDecoration","documentFontSize","nodeFontSize","f_size","compare_size","fontStyle","loadHTML","catch","_wrapNode","appendWhole","console","log","start","end","withinRange","append","child","stripped","removeChild","_getStartEndLine","getInbetween","inBetween","currentLine","some","matches","_classNameToQuery","_isThereContentEditableOverMyHead","flyup","_normalizeBrowserQuirks","navigator","userAgent","indexOf","remove","_isSelectionTrespassRestrictedRange","restrict","_createEmptyParagraph","createElement","_trackStyle","cls","checker","sp","_isTextElement","_lastLineBlank","force","lastLine","_selectionchange","anchorElement","anchorNode","focusElement","focusNode","appendChild","caratPosition","restricted","concat","quote","comm","caratEl","getBoundingClientRect","_callback","error","_setEventListener","listen","removeEventListener","imgInput","_keydown","_normalize","_paste","_keyup","accept","hidden","multiple","setAttribute","addEventListener","_imageSelected","collapsed","toUpperCase","shift","shiftKey","preventDefault","stc","block","prevsib","cl","tagName","_replaceText","_setArrow","sweep_array","hasIndent","diveAndRemoveTab","offset","containerOffset","line","container","tab","insertNode","bind","stopPropagation","_normalizeDocument","cloneRange","doc","createDocumentFragment","clipboardData","getData","replace","u","extractContents","pop","destroy","observer","disconnect","_observeMutation","track","MutationObserver","mutation_array","monitor","cloneNode","name","attributeName","added","clones","addedNodes","removed","removedNodes","mutate","mutation","mutationTarget","callbackRemoved","what","arrIdx","splice","childIdx","toBreak","t","_isCeilingElement","idx","_isTextBlockElement","_isUnSelectableElement","getBr","br","isWysiwygChild","isWysiwygEldestChild","ceiling","clo","isMediaElement","isBlockQuoteElement","isCustomElement","isHashtagElement","isUrlLinkElement","el","_isBlockElement","_isStyleAllowedElement","sa","doContinue","addBr","classSet","counter","toUnwrap","cIdx","set","class_idx","className","observe","attributes","childList","subtree","isAllRangeOnSameLine","caratElement","arrowDirection","metaKey","ctrlKey","rangeSetup","removeZeroSpace","targetContainer","nudged","siblingDirection","nudgeRangeToInlineElement","display","_caratElement","nextEl","setDirection","isMultiLine","eldestParentOfCurrentLine","isCurrentLineInsideSubCeiling","siblingSet","reverse","backwardNode","forwardNode","_forwardNode","leap","collectOffset","currentOffset","_append","insertAfter","wrap","common","insertRestricted","next","nodeToUnwrap","chk","notAllowed","fc","data","Promise","files","prepareForCallback","image","readFile","FileReader","load","file","res","onload","f","lastModified","size","source","img","Image","dimension","width","height","filename","fileSize","fileType","src","readAsDataURL","loading","feedback","restoreLastSelection","media","_loadImage","imageObject","classname","class","onclick","st","pushArray","process","_getAnchorOffsetFromLine","anchorOffset","found","traverse","_getFocusOffsetFromLine","focusOffset","normalize","cel","par","wholeDocument","typeName","setData","regex","anchorText","collected","textNodes","forEach","handler","hits","nxt","ownerDocument","global","nodeValue","lastIndex","handleResult","apply","results","orig","index","create","rest","createElementNS","namespaceURI","attrs","content","contentEditable","replaceTextNode","matched","textEl","toCallback","collectId","tc","then","dom","url","open","_checkElement","chkArr","exp","attr","gotTheMatch","_isTextAreaElement","_isSpecialTextElement","action","bq","li","ul","hr","click","collectLines","nextLine","isColor","query","stopperMode","pass","undefined","restrictedClass","span","replaceAll","unwrapTarget","rev","del","querySelectorAll","join","wrapperSplit","nestedWrapper","output","ws","lc","fn","lp","prev","custom","contenteditable","HTMLElement","insert","_","txt","setEditable","div","imgCallback","imgId","JSON","parse","stringify","hashtagCallback","clIdx","urllinkCallback","customCallback","fb","imageParent","querySelector","pre","title","setup","promiseOrNot","strip","sid","inputText","split","titleSearchRegex","urlArray","j","splitUrl","splitTail","splitTail_length","sourceClip","trim","bool"],"sourceRoot":""}