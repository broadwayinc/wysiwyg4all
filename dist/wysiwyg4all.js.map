{"version":3,"file":"wysiwyg4all.js","mappings":"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","sources":["webpack://wysiwyg4all/webpack/universalModuleDefinition","webpack://wysiwyg4all/webpack/bootstrap","webpack://wysiwyg4all/webpack/runtime/define property getters","webpack://wysiwyg4all/webpack/runtime/hasOwnProperty shorthand","webpack://wysiwyg4all/webpack/runtime/make namespace object","webpack://wysiwyg4all/./node_modules/colormangle/colormangle.js","webpack://wysiwyg4all/./wysiwyg4all.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","class ColorMangle {\n    /**\n     * @param {string} [color='#4848db'] - Argument string can be either color name string or any type of HTML color codes (hex, rgb, hsl).\n     */\n    constructor(color = '#4848db', fineTuned = true) {\n        this.fineTuned = fineTuned;\n        this.colorName = {\n            \"aliceblue\": \"#f0f8ff\",\n            \"antiquewhite\": \"#faebd7\",\n            \"aqua\": \"#00ffff\",\n            \"aquamarine\": \"#7fffd4\",\n            \"azure\": \"#f0ffff\",\n            \"beige\": \"#f5f5dc\",\n            \"bisque\": \"#ffe4c4\",\n            \"black\": \"#000000\",\n            \"blanchedalmond\": \"#ffebcd\",\n            \"blue\": \"#0000ff\",\n            \"blueviolet\": \"#8a2be2\",\n            \"brown\": \"#a52a2a\",\n            \"burlywood\": \"#deb887\",\n            \"cadetblue\": \"#5f9ea0\",\n            \"chartreuse\": \"#7fff00\",\n            \"chocolate\": \"#d2691e\",\n            \"coral\": \"#ff7f50\",\n            \"cornflowerblue\": \"#6495ed\",\n            \"cornsilk\": \"#fff8dc\",\n            \"crimson\": \"#dc143c\",\n            \"cyan\": \"#00ffff\",\n            \"darkblue\": \"#00008b\",\n            \"darkcyan\": \"#008b8b\",\n            \"darkgoldenrod\": \"#b8860b\",\n            \"darkgray\": \"#a9a9a9\",\n            \"darkgreen\": \"#006400\",\n            \"darkgrey\": \"#a9a9a9\",\n            \"darkkhaki\": \"#bdb76b\",\n            \"darkmagenta\": \"#8b008b\",\n            \"darkolivegreen\": \"#556b2f\",\n            \"darkorange\": \"#ff8c00\",\n            \"darkorchid\": \"#9932cc\",\n            \"darkred\": \"#8b0000\",\n            \"darksalmon\": \"#e9967a\",\n            \"darkseagreen\": \"#8fbc8f\",\n            \"darkslateblue\": \"#483d8b\",\n            \"darkslategray\": \"#2f4f4f\",\n            \"darkslategrey\": \"#2f4f4f\",\n            \"darkturquoise\": \"#00ced1\",\n            \"darkviolet\": \"#9400d3\",\n            \"deeppink\": \"#ff1493\",\n            \"deepskyblue\": \"#00bfff\",\n            \"dimgray\": \"#696969\",\n            \"dimgrey\": \"#696969\",\n            \"dodgerblue\": \"#1e90ff\",\n            \"firebrick\": \"#b22222\",\n            \"floralwhite\": \"#fffaf0\",\n            \"forestgreen\": \"#228b22\",\n            \"fuchsia\": \"#ff00ff\",\n            \"gainsboro\": \"#dcdcdc\",\n            \"ghostwhite\": \"#f8f8ff\",\n            \"goldenrod\": \"#daa520\",\n            \"gold\": \"#ffd700\",\n            \"gray\": \"#808080\",\n            \"green\": \"#008000\",\n            \"greenyellow\": \"#adff2f\",\n            \"grey\": \"#808080\",\n            \"honeydew\": \"#f0fff0\",\n            \"hotpink\": \"#ff69b4\",\n            \"indianred\": \"#cd5c5c\",\n            \"indigo\": \"#4b0082\",\n            \"ivory\": \"#fffff0\",\n            \"khaki\": \"#f0e68c\",\n            \"lavenderblush\": \"#fff0f5\",\n            \"lavender\": \"#e6e6fa\",\n            \"lawngreen\": \"#7cfc00\",\n            \"lemonchiffon\": \"#fffacd\",\n            \"lightblue\": \"#add8e6\",\n            \"lightcoral\": \"#f08080\",\n            \"lightcyan\": \"#e0ffff\",\n            \"lightgoldenrodyellow\": \"#fafad2\",\n            \"lightgray\": \"#d3d3d3\",\n            \"lightgreen\": \"#90ee90\",\n            \"lightgrey\": \"#d3d3d3\",\n            \"lightpink\": \"#ffb6c1\",\n            \"lightsalmon\": \"#ffa07a\",\n            \"lightseagreen\": \"#20b2aa\",\n            \"lightskyblue\": \"#87cefa\",\n            \"lightslategray\": \"#778899\",\n            \"lightslategrey\": \"#778899\",\n            \"lightsteelblue\": \"#b0c4de\",\n            \"lightyellow\": \"#ffffe0\",\n            \"lime\": \"#00ff00\",\n            \"limegreen\": \"#32cd32\",\n            \"linen\": \"#faf0e6\",\n            \"magenta\": \"#ff00ff\",\n            \"maroon\": \"#800000\",\n            \"mediumaquamarine\": \"#66cdaa\",\n            \"mediumblue\": \"#0000cd\",\n            \"mediumorchid\": \"#ba55d3\",\n            \"mediumpurple\": \"#9370db\",\n            \"mediumseagreen\": \"#3cb371\",\n            \"mediumslateblue\": \"#7b68ee\",\n            \"mediumspringgreen\": \"#00fa9a\",\n            \"mediumturquoise\": \"#48d1cc\",\n            \"mediumvioletred\": \"#c71585\",\n            \"midnightblue\": \"#191970\",\n            \"mintcream\": \"#f5fffa\",\n            \"mistyrose\": \"#ffe4e1\",\n            \"moccasin\": \"#ffe4b5\",\n            \"navajowhite\": \"#ffdead\",\n            \"navy\": \"#000080\",\n            \"oldlace\": \"#fdf5e6\",\n            \"olive\": \"#808000\",\n            \"olivedrab\": \"#6b8e23\",\n            \"orange\": \"#ffa500\",\n            \"orangered\": \"#ff4500\",\n            \"orchid\": \"#da70d6\",\n            \"palegoldenrod\": \"#eee8aa\",\n            \"palegreen\": \"#98fb98\",\n            \"paleturquoise\": \"#afeeee\",\n            \"palevioletred\": \"#db7093\",\n            \"papayawhip\": \"#ffefd5\",\n            \"peachpuff\": \"#ffdab9\",\n            \"peru\": \"#cd853f\",\n            \"pink\": \"#ffc0cb\",\n            \"plum\": \"#dda0dd\",\n            \"powderblue\": \"#b0e0e6\",\n            \"purple\": \"#800080\",\n            \"rebeccapurple\": \"#663399\",\n            \"red\": \"#ff0000\",\n            \"rosybrown\": \"#bc8f8f\",\n            \"royalblue\": \"#4169e1\",\n            \"saddlebrown\": \"#8b4513\",\n            \"salmon\": \"#fa8072\",\n            \"sandybrown\": \"#f4a460\",\n            \"seagreen\": \"#2e8b57\",\n            \"seashell\": \"#fff5ee\",\n            \"sienna\": \"#a0522d\",\n            \"silver\": \"#c0c0c0\",\n            \"skyblue\": \"#87ceeb\",\n            \"slateblue\": \"#6a5acd\",\n            \"slategray\": \"#708090\",\n            \"slategrey\": \"#708090\",\n            \"snow\": \"#fffafa\",\n            \"springgreen\": \"#00ff7f\",\n            \"steelblue\": \"#4682b4\",\n            \"tan\": \"#d2b48c\",\n            \"teal\": \"#008080\",\n            \"thistle\": \"#d8bfd8\",\n            \"tomato\": \"#ff6347\",\n            \"turquoise\": \"#40e0d0\",\n            \"violet\": \"#ee82ee\",\n            \"wheat\": \"#f5deb3\",\n            \"white\": \"#ffffff\",\n            \"whitesmoke\": \"#f5f5f5\",\n            \"yellow\": \"#ffff00\",\n            \"yellowgreen\": \"#9acd32\"\n        };\n        let format = this._colorType(color);\n        this.type = format.type;\n        this.color = format.color;\n    }\n\n    _colorType(color = this.color, throwErr = true) {\n        let chkType, type;\n\n        try {\n            if (!color)\n                throw 'invalid color';\n\n            if (typeof color === 'object' && color.string)\n                color = color.string;\n\n            if (typeof color === 'string')\n                color = color.toLowerCase();\n            else\n                throw 'invalid color';\n\n            if (color === this.color)\n                return { type: this.type, color: this.color };\n\n            if (this.colorName[color])\n                return { type: 'hex', color: this.colorName[color] };\n\n            chkType = color.match(/^(rgba?|rgb?|hsla?|#)/g);\n\n            if (Array.isArray(chkType)) {\n\n                if (chkType[0] === '#') {\n\n                    if (color.length === 4)\n                        // convert shorthand hex\n                        color = color[0] + color[1] + color[1] + color[2] + color[2] + color[3] + color[3];\n\n                    if (/^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(color))\n                        // is valid hex\n                        type = 'hex';\n\n                    else\n                        throw 'invalid hex';\n\n                } else if (color[color.length - 1] === ')')\n                    // hex, rgb, rgba, hsl, hsla\n                    type = chkType[0];\n\n                return { type, color };\n\n            }\n\n        } catch (err) {\n            if (throwErr)\n                throw err + ':' + color;\n        }\n\n        return {};\n    }\n\n    _extractDigit(color_arg = this.color) {\n        let { type = this.type, color = this.color } = this._colorType(color_arg);\n\n        if (type === 'hex')\n            color = this.rgba(1, color).string;\n\n        const value = [];\n\n        for (const i of color.match(/\\d+(\\.\\d+)?/g))\n            value.push(parseFloat(i));\n\n        if (value.length < 4) value.push(1);\n\n        return value;\n    }\n\n    /**\n     * @return {number} - Retrieves color alpha value (range 0 ~ 1)\n     */\n    getAlpha(color_arg = this.color) {\n        let extract = this._extractDigit(color_arg);\n        return extract ? extract[3] || 1 : 1;\n    }\n\n    /**\n     * @typedef {Object} colorScheme\n     * @property {string} --alert\n     * @property {string} --alert-text\n     * @property {string} --alert-text_placeholder\n     * @property {string} --alert-text_shade\n     * @property {string} --alert-text_shadow\n     * @property {string} --alert-text_soft\n     * @property {string} --alert-text_transparent\n     * @property {string} --alert_placeholder\n     * @property {string} --alert_shade\n     * @property {string} --alert_shadow\n     * @property {string} --alert_soft\n     * @property {string} --alert_transparent\n     * @property {string} --analogous\n     * @property {string} --analogous-text\n     * @property {string} --analogous-text_placeholder\n     * @property {string} --analogous-text_shade\n     * @property {string} --analogous-text_shadow\n     * @property {string} --analogous-text_soft\n     * @property {string} --analogous-text_transparent\n     * @property {string} --analogous_placeholder\n     * @property {string} --analogous_shade\n     * @property {string} --analogous_shadow\n     * @property {string} --analogous_soft\n     * @property {string} --analogous_transparent\n     * @property {string} --background\n     * @property {string} --background-focus\n     * @property {string} --background-focus-nude\n     * @property {string} --background-focus-nude_placeholder\n     * @property {string} --background-focus-nude_shade\n     * @property {string} --background-focus-nude_shadow\n     * @property {string} --background-focus-nude_soft\n     * @property {string} --background-focus-nude_transparent\n     * @property {string} --background-focus-text\n     * @property {string} --background-focus-text_placeholder\n     * @property {string} --background-focus-text_shade\n     * @property {string} --background-focus-text_shadow\n     * @property {string} --background-focus-text_soft\n     * @property {string} --background-focus-text_transparent\n     * @property {string} --background-focus_placeholder\n     * @property {string} --background-focus_shade\n     * @property {string} --background-focus_shadow\n     * @property {string} --background-focus_soft\n     * @property {string} --background-focus_transparent\n     * @property {string} --background-text\n     * @property {string} --background-text_placeholder\n     * @property {string} --background-text_shade\n     * @property {string} --background-text_shadow\n     * @property {string} --background-text_soft\n     * @property {string} --background-text_transparent\n     * @property {string} --background_placeholder\n     * @property {string} --background_shade\n     * @property {string} --background_shadow\n     * @property {string} --background_soft\n     * @property {string} --background_transparent\n     * @property {string} --button\n     * @property {string} --button-nude\n     * @property {string} --button-nude_placeholder\n     * @property {string} --button-nude_shade\n     * @property {string} --button-nude_shadow\n     * @property {string} --button-nude_soft\n     * @property {string} --button-nude_transparent\n     * @property {string} --button-text\n     * @property {string} --button-text_placeholder\n     * @property {string} --button-text_shade\n     * @property {string} --button-text_shadow\n     * @property {string} --button-text_soft\n     * @property {string} --button-text_transparent\n     * @property {string} --button_placeholder\n     * @property {string} --button_shade\n     * @property {string} --button_shadow\n     * @property {string} --button_soft\n     * @property {string} --button_transparent\n     * @property {string} --complementary\n     * @property {string} --complementary-text\n     * @property {string} --complementary-text_placeholder\n     * @property {string} --complementary-text_shade\n     * @property {string} --complementary-text_shadow\n     * @property {string} --complementary-text_soft\n     * @property {string} --complementary-text_transparent\n     * @property {string} --complementary_placeholder\n     * @property {string} --complementary_shade\n     * @property {string} --complementary_shadow\n     * @property {string} --complementary_soft\n     * @property {string} --complementary_transparent\n     * @property {string} --content\n     * @property {string} --content-focus\n     * @property {string} --content-focus-nude\n     * @property {string} --content-focus-nude_placeholder\n     * @property {string} --content-focus-nude_shade\n     * @property {string} --content-focus-nude_shadow\n     * @property {string} --content-focus-nude_soft\n     * @property {string} --content-focus-nude_transparent\n     * @property {string} --content-focus-text\n     * @property {string} --content-focus-text_placeholder\n     * @property {string} --content-focus-text_shade\n     * @property {string} --content-focus-text_shadow\n     * @property {string} --content-focus-text_soft\n     * @property {string} --content-focus-text_transparent\n     * @property {string} --content-focus_placeholder\n     * @property {string} --content-focus_shade\n     * @property {string} --content-focus_shadow\n     * @property {string} --content-focus_soft\n     * @property {string} --content-focus_transparent\n     * @property {string} --content-text\n     * @property {string} --content-text_placeholder\n     * @property {string} --content-text_shade\n     * @property {string} --content-text_shadow\n     * @property {string} --content-text_soft\n     * @property {string} --content-text_transparent\n     * @property {string} --content_placeholder\n     * @property {string} --content_shade\n     * @property {string} --content_shadow\n     * @property {string} --content_soft\n     * @property {string} --content_transparent\n     * @property {string} --focus\n     * @property {string} --focus-text\n     * @property {string} --focus-text_placeholder\n     * @property {string} --focus-text_shade\n     * @property {string} --focus-text_shadow\n     * @property {string} --focus-text_soft\n     * @property {string} --focus-text_transparent\n     * @property {string} --focus_placeholder\n     * @property {string} --focus_shade\n     * @property {string} --focus_shadow\n     * @property {string} --focus_soft\n     * @property {string} --focus_transparent\n     * @property {string} --placeholder\n     * @property {string} --saturate\n     * @property {string} --saturate-text\n     * @property {string} --saturate-text_placeholder\n     * @property {string} --saturate-text_shade\n     * @property {string} --saturate-text_shadow\n     * @property {string} --saturate-text_soft\n     * @property {string} --saturate-text_transparent\n     * @property {string} --saturate_placeholder\n     * @property {string} --saturate_shade\n     * @property {string} --saturate_shadow\n     * @property {string} --saturate_soft\n     * @property {string} --saturate_transparent\n     * @property {string} --shade\n     * @property {string} --shadow\n     * @property {string} --success\n     * @property {string} --success-text\n     * @property {string} --success-text_placeholder\n     * @property {string} --success-text_shade\n     * @property {string} --success-text_shadow\n     * @property {string} --success-text_soft\n     * @property {string} --success-text_transparent\n     * @property {string} --success_placeholder\n     * @property {string} --success_shade\n     * @property {string} --success_shadow\n     * @property {string} --success_soft\n     * @property {string} --success_transparent\n     * @property {string} --toolbar\n     * @property {string} --toolbar-focus\n     * @property {string} --toolbar-focus-nude\n     * @property {string} --toolbar-focus-nude_placeholder\n     * @property {string} --toolbar-focus-nude_shade\n     * @property {string} --toolbar-focus-nude_shadow\n     * @property {string} --toolbar-focus-nude_soft\n     * @property {string} --toolbar-focus-nude_transparent\n     * @property {string} --toolbar-focus-text\n     * @property {string} --toolbar-focus-text_placeholder\n     * @property {string} --toolbar-focus-text_shade\n     * @property {string} --toolbar-focus-text_shadow\n     * @property {string} --toolbar-focus-text_soft\n     * @property {string} --toolbar-focus-text_transparent\n     * @property {string} --toolbar-focus_placeholder\n     * @property {string} --toolbar-focus_shade\n     * @property {string} --toolbar-focus_shadow\n     * @property {string} --toolbar-focus_soft\n     * @property {string} --toolbar-focus_transparent\n     * @property {string} --toolbar-text\n     * @property {string} --toolbar-text_placeholder\n     * @property {string} --toolbar-text_shade\n     * @property {string} --toolbar-text_shadow\n     * @property {string} --toolbar-text_soft\n     * @property {string} --toolbar-text_transparent\n     * @property {string} --toolbar_placeholder\n     * @property {string} --toolbar_shade\n     * @property {string} --toolbar_shadow\n     * @property {string} --toolbar_soft\n     * @property {string} --toolbar_transparent\n     * @property {string} --transparent\n     */\n    /**\n     * Generates color scheme object.\n     * @param {string} [color=this.color] - Focus color for color scheme\n     * @param {boolean} [darkMode=false] - Dark mode when true\n     * @return {colorScheme} - { [&lt;CSS Variable names&gt;] : &lt;string | HTML color string&gt; }\n     */\n    colorScheme(color = this.color, darkMode = false) {\n\n        let opacity = {\n            text: { black: 0.88, white: 1 },\n            soft: { black: 0.66, white: 0.88 },\n            placeholder: { black: 0.44, white: 0.55 },\n            transparent: { black: 0.22, white: 0.33 },\n            shade: { black: 0.066, white: 0.11 },\n            shadow: { black: 0.033, white: 0.066 }\n        };\n\n        let template = {\n            '--background': darkMode ? '#121212' : '#f7f7f7',\n            '--content': darkMode ? '#2b2b2b' : '#ffffff',\n            '--toolbar': darkMode ? '#2b2b2b' : '#ffffff'\n        };\n\n        let focusOriginal;\n        let focusSat;\n        let content_isHighLuminance = this.isHighLuminance(template['--content']);\n        let focus = (() => {\n            if (color && typeof color === 'object') {\n                if (color['--button']) {\n                    focusOriginal = color['--button'];\n                    return focusOriginal;\n                }\n                for (let key of color)\n                    if (key.includes('focus')) {\n                        focusOriginal = color[key];\n                        return focusOriginal;\n                    }\n            }\n\n            focusOriginal = color;\n            focusSat = this.matchLuminance(color, template['--content'], content_isHighLuminance ? 1.5 : 4.5);\n            return darkMode ? focusSat : color;\n        })();\n\n        let compDir = 1;\n        let analogous = (() => {\n            let deg = 30;\n            let analogous = this.analogous(focusOriginal, deg);\n            let focusHSL = this.hsla(1, focusOriginal).h;\n            let an1HSL = this.hsla(1, analogous[0]).h;\n            let an2HSL = this.hsla(1, analogous[1]).h;\n\n            if (focusHSL + deg > 360)\n                an1HSL = an1HSL + 360;\n            if (focusHSL - deg < 0)\n                an2HSL = 360 - an2HSL;\n\n            if (Math.abs(focusHSL - an1HSL) > Math.abs(focusHSL - an2HSL)) {\n                compDir = -1;\n                return analogous[1];\n            }\n\n            return analogous[0];\n        })();\n\n        let complementary = this.matchLuminance(this.complementary(focus, 60 * compDir), template['--background'], 3.1);\n        let fixedValue = {\n            '--shadow': 'rgba(0, 0, 0, 0.033)',\n            '--shade': 'rgba(0, 0, 0, 0.066)',\n            '--transparent': 'rgba(0, 0, 0, 0.22)',\n            '--placeholder': 'rgba(0, 0, 0, 0.33)'\n        };\n\n        let darkModeAnalogous = darkMode ? this.matchLuminance(analogous, template['--background'], 4.5) : analogous;\n        let analogousNude = this.matchLuminance(analogous, template['--background'], 4.5);\n\n        for (let k in template) {\n            template[k + '-text'] = this.textColor(opacity.text, template[k]);\n            template[k + '-focus'] = k.includes('--background') ? darkModeAnalogous : focus;\n            template[k + '-focus-nude'] = k.includes('--background') ? analogousNude : this.matchLuminance(darkMode ? focus : focusSat, template[k], 1.66);\n            template[k + '-focus-text'] = this.textColor(1, k.includes('--background') ? darkModeAnalogous : focus);\n        }\n\n        template['--focus'] = focusOriginal;\n        template['--focus-text'] = this.textColor(1, focusOriginal);\n        template['--saturate'] = focusSat;\n        template['--saturate-text'] = this.textColor(1, focusSat);\n\n        Object.assign(template, {\n            '--complementary': complementary,\n            '--complementary-text': this.textColor(1, complementary),\n            '--analogous': analogous,\n            '--analogous-text': this.textColor(1, analogous),\n            '--alert': 'tomato',\n            '--alert-text': 'white',\n            '--success': 'seagreen',\n            '--success-text': 'white',\n            '--button': focus,\n            '--button-nude': darkMode ? this.matchLuminance(focusSat, template[\"--content\"], 7) : this.contrastRatio(template[\"--content\"], focusSat) < 4.5 ? \"inherit\" : focusSat,\n            '--button-text': this.textColor(1, focus)\n        });\n\n        for (let k in template) {\n            if (!template[k] || template[k] === \"\")\n                continue;\n\n            let highLum = this.isHighLuminance(template[k]);\n            for (let op of ['soft', 'placeholder', 'transparent', 'shadow', 'shade']) {\n\n                template[k + '_' + op] = this.rgba(opacity[op][highLum ? 'white' : 'black'], template[k]).string;\n            }\n        }\n\n        // template['--button-border'] = (() => {\n        //     let focus_isHighLuminance = this.isHighLuminance(focus);\n        //     let border = this.matchLuminance(this.adjustLuminance(-1, template['--button']), template['--button'], 1.15, -1, focus_isHighLuminance ? 'luminance' : 'brightness');\n        //     return focus_isHighLuminance ? this.rgba(0.5, border).string : border;\n        // })();\n\n        if (color && typeof color === 'object') {\n            for (let key of color)\n                if (key[0] !== '-')\n                    throw 'invalid color scheme';\n            Object.assign(template, color);\n        }\n\n        let unordered = Object.assign(template, fixedValue);\n        return Object.keys(unordered).sort().reduce(\n            (obj, key) => {\n                obj[key] = unordered[key];\n                return obj;\n            },\n            {}\n        );\n    }\n\n    /**\n     * Match luminance of target_color with base color\n     * @param {string} target_color - Target color\n     * @param {string} [color_arg=this.color] - Base color\n     * @param {number} [target_ratio] - Set contrast ratio difference\n     * @param {number} [direction] - Adjust direction. Adjust to darker luminance when -1. Brighter when 1, otherwise auto.\n     * @param {string} [method] - Luminance adjustment mode: 'brightness | luminance | saturation'\n     * @return {string} - HTML color string\n     */\n    matchLuminance(target_color, color_arg = this.color, target_ratio, direction, method) {\n        let { color } = this._colorType(color_arg);\n        let target = this._colorType(target_color).color;\n\n        if (target_ratio) {\n            let adj = target;\n            let m = this.contrastRatio(adj, color);\n            if (m < target_ratio) {\n                let dir = direction || this.isHighLuminance(color) ? -1 : 1;\n                let count = 100;\n                while (m < target_ratio && count--) {\n                    let adj_set;\n\n                    switch (method) {\n                        case 'brightness':\n                            adj_set = this.adjustBrightness(1 * dir, adj);\n                            break;\n                        case 'luminance':\n                            adj_set = this.adjustLuminance(1 * dir, adj);\n                            break;\n                        default:\n                            adj_set = this.adjustBrightness(1 * dir, { legacy: true, color: adj });\n                    }\n\n                    if (adj === adj_set)\n                        break;\n                    adj = adj_set;\n\n                    m = this.contrastRatio(adj, color);\n                }\n            }\n            return this.hex(adj);\n        } else {\n            let main_lum = this._luminance(color);\n            let lum = this._luminance(target);\n\n            if (Math.abs(lum - main_lum) < 0.01)\n                return target;\n\n            let adj = this.hex(target);\n\n            let dir = (lum, main_lum) => {\n                return lum < main_lum ? 1 : -1;\n            };\n\n            let currDir = dir(lum, main_lum);\n            while (Math.abs(lum - main_lum) > 0.01 && currDir === dir(lum, main_lum)) {\n                let adj_set;\n                switch (method) {\n                    case 'saturation':\n                        adj_set = this.adjustBrightness(currDir, { color: adj, legacy: true });\n                        break;\n                    case 'luminance':\n                        adj_set = this.adjustLuminance(currDir, adj);\n                        break;\n                    default:\n                        adj_set = this.adjustBrightness(currDir, adj);\n                }\n                let lum_pre = this._luminance(adj_set);\n                if (lum_pre === lum || currDir !== dir(lum_pre, main_lum))\n                    break;\n                lum = lum_pre;\n                adj = adj_set;\n            }\n            return this.hex(adj);\n        }\n    }\n\n    /**\n     * Generate analogous color\n     * @param {string} [color_arg=this.color] - Target color\n     * @param {number} [deg=30] - Amount of hue separation\n     * @return {Array} - 2 analogous color is returned. [&lt;hsla color&gt;, ... ]\n     */\n    analogous(color_arg = this.color, deg = 30) {\n        let { color } = this._colorType(color_arg);\n\n        let spin = (h, v) => {\n            let val = h + v;\n            return val < 0 ? 360 + val : val > 360 ? val - 360 : val;\n        };\n\n        let hsl = this.hsla(this.getAlpha(color), color);\n        let plus = 'hsla(' + spin(hsl.h, deg) + ', ' + hsl.s + '%, ' + hsl.l + '%, ' + hsl.a + ')';\n        let minus = 'hsla(' + spin(hsl.h, -deg) + ', ' + hsl.s + '%, ' + hsl.l + '%, ' + hsl.a + ')';\n\n        return [this.matchLuminance(plus, color), this.matchLuminance(minus, color)];\n    }\n\n    /**\n     * Generate complementary color\n     * @param {string} [color_arg=this.color] - Target color\n     * @param {number} [add=0] - Add or subtract hue from complementary color\n     * @return {string} - HEX color string\n     */\n    complementary(color_arg = this.color, add = 0) {\n        let { color } = this._colorType(color_arg);\n\n        let hsl = this.hsla(this.getAlpha(color), color);\n\n        if (hsl.h < 180)\n            hsl.h += 180;\n        else\n            hsl.h -= 180;\n\n        hsl.h += add;\n        hsl.h = hsl.h > 360 ? hsl.h - 360 : hsl.h < 0 ? 360 - hsl.h : hsl.h;\n\n        return this.hex(this._toString(hsl));\n    }\n\n    /**\n     * @param {string} [color_arg=this.color] - Target color\n     * @param {boolean} [fineTuned=false] - Custom Color space is applied when true\n     * @return {boolean} - True if color has high luminance\n     */\n    isHighLuminance(color_arg = this.color, fineTuned = this.fineTuned) {\n        const { r, g, b } = this.rgba(1, this._colorType(color_arg).color);\n\n        let yiq =\n            fineTuned ?\n                ((r * (299 - 64)) + (g * (587 * 1.25)) + (b * 114)) / 1000 : // Fine tuned\n                ((r * 299) + (g * 587) + (b * 114)) / 1000; // Standard color space formula\n\n        // Web standard of color space threshold is 128\n        return (yiq >= (fineTuned ? 188 : 128));\n    }\n\n    _luminance(color_arg = this.color) {\n        let rgb = this.rgba(1, color_arg);\n        let a = [rgb.r, rgb.g, rgb.b].map(function (v) {\n            v /= 255;\n            return v <= 0.03928\n                ? v / 12.92\n                : Math.pow((v + 0.055) / 1.055, 2.4);\n        });\n\n        return a[0] * 0.2126 + a[1] * 0.7152 + a[2] * 0.0722;\n    }\n\n    _toString(col) {\n        let numberOrNot = (n, def = 100) => {\n            return typeof n === 'number' ? n : def;\n        };\n        if (typeof col === 'string')\n            return col;\n\n        if (col.hasOwnProperty('h'))\n            return 'hsla(' + (col.h || 0) + ', ' + numberOrNot(col.s) + '%, ' + numberOrNot(col.l) + '%, ' + numberOrNot(col.a, 1) + ')';\n\n        if (col.hasOwnProperty('r'))\n            return 'rgba(' + numberOrNot(col.r) + ', ' + numberOrNot(col.g) + ', ' + numberOrNot(col.b) + ', ' + numberOrNot(col.a, 1) + ')';\n        throw col;\n    }\n\n    /**\n     * Returns contrast ratio between the given color.\n     * Useful to determine if the given color is suitable for text with the constructed color as a background.\n     * @param {string} color_arg1 - Color string you want to compare luminance ratio.\n     * @param {string} [color_arg2=this.color] - Color string you want to compare with color_arg1\n     * @return {number} - Contrast ratio\n     */\n    contrastRatio(color_arg1, color_arg2 = this.color) {\n        let lum1 = this._luminance(color_arg2) + 0.05;\n        let lum2 = this._luminance(color_arg1) + 0.05;\n\n        return lum1 > lum2 ? lum1 / lum2 : lum2 / lum1;\n    }\n\n    /**\n     * Returns suitable text color (Black / White).\n     * @param {(number | Object)} opacity - Can set returning color values opacity.\n     * @param {number} opacity.black - Set returning color values opacity when the result color is black.\n     * @param {number} opacity.white - Set returning color values opacity when the result color is white.\n     * @param {(string|Object)} [option=this.color] - Background color of text\n     * @param {(string|Object)} [option.color=this.color] - Background color of text\n     * @param {(string|Object)} [option.fineTuned=true] - Follows standard color space calculation when false\n     * @return {string | null} - HTML color string\n     */\n    textColor(opacity = 1, option = this.color) {\n\n        if (typeof option === 'string')\n            option = { color: option };\n\n        let { color = this.color, fineTuned = true } = option;\n\n        color = this._colorType(color).color;\n\n        // returns null if color opacity is below 0.5\n        if (this.getAlpha(color) < 0.5)\n            return \"\";\n\n        let blackOpacity, whiteOpacity;\n\n        if (typeof opacity === 'number' && opacity < 1) {\n            blackOpacity = opacity;\n            whiteOpacity = opacity;\n        } else if (opacity && typeof opacity === 'object') {\n            for (let k of ['black', 'white']) {\n                let opa = opacity[k];\n                if (typeof opa === 'number' && opa < 1) {\n                    if (k === 'black')\n                        blackOpacity = opa;\n                    else if (k === 'white')\n                        whiteOpacity = opa;\n                }\n            }\n        }\n\n        const opa = (v) => {\n            if (typeof v === 'number') {\n                if (v < 1 && v > 0) return v;\n                else if (v > 1) return 1;\n                else return 0;\n            } else return 1;\n        };\n\n        if (this.isHighLuminance(color, fineTuned))\n            return blackOpacity ? `rgba(0, 0, 0, ${opa(blackOpacity)})` : 'black';\n\n        return whiteOpacity ? `rgba(255, 255, 255, ${opa(whiteOpacity)})` : 'white';\n    }\n\n    /**\n     * Returns hsla color\n     * @param {number} [opacity] - Set opacity for returning color value.\n     * @param {string} [color_arg=this.color] - Color to convert to hsla string\n     * @return {Object} - { h: &lt;number&gt;, s: &lt;number&gt;, l: &lt;number&gt;, r: &lt;number&gt;, g: &lt;number&gt;, b: &lt;number&gt;, a: &lt;number&gt;, string: &lt;string | rgba color string&gt; }\n     */\n    hsla(opacity, color_arg = this.color) {\n        const { type = this.type, color = this.color } = this._colorType(color_arg);\n\n        const hsl = (r, g, b) => {\n            r /= 255;\n            g /= 255;\n            b /= 255;\n\n            let c_min = Math.min(r, g, b),\n                c_max = Math.max(r, g, b),\n                delta = c_max - c_min,\n                h = 0,\n                s = 0,\n                l = 0;\n\n            if (delta === 0)\n                h = 0;\n            else if (c_max === r)\n                h = ((g - b) / delta) % 6;\n            else if (c_max === g)\n                h = (b - r) / delta + 2;\n            else\n                h = (r - g) / delta + 4;\n\n            h = Math.round(h * 60);\n\n            if (h < 0) h += 360;\n\n            l = (c_max + c_min) / 2;\n            s = delta === 0 ? 0 : delta / (1 - Math.abs(2 * l - 1));\n            s = +(s * 100).toFixed(1);\n            l = +(l * 100).toFixed(1);\n            return { h, s, l };\n        };\n\n        if (type === 'hex') {\n            opacity = typeof opacity === 'number' ? opacity : 1;\n            const rgba = this.rgba(opacity, color);\n            const { r, g, b, a } = rgba;\n            const { h, s, l } = hsl(r, g, b);\n\n            return {\n                r, g, b, a,\n                h: h,\n                s: s,\n                l: l,\n                string: this._toString({ h, s, l, a: opacity })\n            };\n\n        } else {\n\n            const digit = this._extractDigit(color);\n            opacity = typeof opacity === 'number' ? opacity : digit[3] || 1;\n\n            if (type.includes('hsl')) {\n                const { r, g, b, a } = this.rgba(opacity, color);\n\n                return {\n                    r, g, b, a,\n                    h: digit[0],\n                    s: digit[1],\n                    l: digit[2],\n                    string: this._toString({\n                        h: digit[0],\n                        s: digit[1],\n                        l: digit[2],\n                        a\n                    })\n                };\n\n            } else if (type.includes('rgb')) {\n                const value = {\n                    r: digit[0],\n                    g: digit[1],\n                    b: digit[2],\n                    a: opacity\n                };\n                const { h, s, l } = hsl(value.r, value.g, value.b);\n\n                return Object.assign(value, {\n                    r: value.r,\n                    g: value.g,\n                    b: value.b,\n                    h: h,\n                    s: s,\n                    l: l,\n                    a: value.a,\n                    string: this._toString({ h, s, l, a: value.a })\n                });\n\n            }\n        }\n    }\n\n    /**\n     * Returns hex color string\n     * @param {string} [color_arg=this.color] - Color to convert to hex string\n     * @return {string} - HEX color string\n     */\n    hex(color_arg = this.color) {\n        const { type = this.type, color = this.color } = this._colorType(color_arg);\n\n        if (type.includes('rgb') || type.includes('hsl')) {\n            const rgba = this.rgba(1, color);\n            return '#' + ((1 << 24) + (rgba.r << 16) + (rgba.g << 8) + rgba.b).toString(16).slice(1);\n        }\n\n        return color;\n    }\n\n    /**\n     * Returns rgba color\n     * @param {number} [opacity] - Set opacity of returning color\n     * @param {string} [color_arg=this.color] - Color to convert to rgba string\n     * @return {Object} - { r: &lt;number&gt;, g: &lt;number&gt;, b: &lt;number&gt;, a: &lt;number&gt;, string: &lt;string | HTML color string&gt; }\n     */\n    rgba(opacity, color_arg = this.color) {\n        const { type = this.type, color = this.color } = this._colorType(color_arg);\n\n        if (type === 'hex') {\n            const hex = color;\n            let rgbObject = { r: null, g: null, b: null };\n            let hexValues = hex.match(/[a-fA-F0-9]{2}/g);\n\n            if (hex.length === 4) {\n                hexValues = hex.match(/[a-fA-F0-9]{1}/g);\n                hexValues = hexValues.map(hex => \"\" + hex + hex);\n            }\n            let count = 0;\n            for (const key in rgbObject) {\n                rgbObject[key] = parseInt(hexValues[count], 16);\n                count++;\n            }\n\n            const opacity_value = typeof opacity === 'number' ? opacity : 1;\n            let { r, g, b } = rgbObject;\n\n            return {\n                ...rgbObject,\n                a: opacity_value,\n                string: this._toString({\n                    r: +r, g: +g, b: +b, a: opacity_value\n                })\n            };\n\n        } else {\n            const digit = this._extractDigit(color);\n            const a = typeof opacity === 'number' ? opacity : digit[3] || 1;\n\n            if (type.includes('rgb')) {\n\n                let value = {\n                    r: digit[0],\n                    g: digit[1],\n                    b: digit[2],\n                    a\n                };\n\n                return Object.assign({\n                    string: this._toString(value)\n                }, value);\n\n            } else if (type.includes('hsl')) {\n\n                let h = digit[0];\n                let s = digit[1];\n                let l = digit[2];\n\n                s /= 100;\n                l /= 100;\n\n                let c = (1 - Math.abs(2 * l - 1)) * s,\n                    x = c * (1 - Math.abs((h / 60) % 2 - 1)),\n                    m = l - c / 2,\n                    r = 0,\n                    g = 0,\n                    b = 0;\n                if (0 <= h && h < 60) {\n                    r = c;\n                    g = x;\n                    b = 0;\n                } else if (60 <= h && h < 120) {\n                    r = x;\n                    g = c;\n                    b = 0;\n                } else if (120 <= h && h < 180) {\n                    r = 0;\n                    g = c;\n                    b = x;\n                } else if (180 <= h && h < 240) {\n                    r = 0;\n                    g = x;\n                    b = c;\n                } else if (240 <= h && h < 300) {\n                    r = x;\n                    g = 0;\n                    b = c;\n                } else if (300 <= h && h < 360) {\n                    r = c;\n                    g = 0;\n                    b = x;\n                }\n                r = Math.round((r + m) * 255);\n                g = Math.round((g + m) * 255);\n                b = Math.round((b + m) * 255);\n\n                return {\n                    r, g, b, a,\n                    string: this._toString({ r, g, b, a })\n                };\n\n            }\n        }\n    }\n\n    /**\n     * @param {number} value - Adjust value by percent. range: -100 ~ 100\n     * @param {(string|Object)} [option=this.color] - Color to adjust || additional option.\n     * @param {(string|Object)} [option.color_arg=this.color] - Color to adjust.\n     * @param {(string|Object)} [option.legacy=false] - Legacy adjust mode. Adjust brightness by saturation and luminance.\n     * @return {string} - Brightness adjusted HTML color string\n     */\n    adjustBrightness(value = 0, option = this.color) {\n        let color_arg, legacy = false;\n        if (typeof option === 'string')\n            color_arg = option || this.color;\n        else {\n            color_arg = option.color || this.color;\n            legacy = option.legacy || false;\n        }\n\n        if (legacy) {\n            let { color } = this._colorType(color_arg);\n            let col = this.hsla(this.getAlpha(color), color);\n\n            let limit = (v, limit = 100) => {\n                return v > limit ? limit : v < 0 ? 0 : v;\n            };\n\n            col.s += ((value > 0 ? (100 - col.s) : col.s) / 100) * value;\n            col.s = limit(col.s);\n            col.l += ((value > 0 ? (100 - col.l) : col.l) / 100) * value;\n            col.l = limit(col.l);\n\n            return this._toString(col);\n        }\n\n        let { type = this.type, color = this.color } = this._colorType(color_arg);\n\n        if (value === 0)\n            return color;\n\n        const opacity = type === 'hex' ? 1 : this._extractDigit(color)[3] || 1;\n        const rgb = this.rgba(opacity, color);\n\n        let rgbRange = {\n            r: 0 - rgb['r'],\n            g: 0 - rgb['g'],\n            b: 0 - rgb['b']\n        };\n\n        if (value > 0) {\n            Object.keys(rgbRange).map(function (key) {\n                rgbRange[key] = 255 - rgb[key];\n            });\n        }\n\n        ['r', 'g', 'b'].map(function (key) {\n            rgb[key] += parseInt(rgbRange[key] / 100 * Math.abs(value));\n        });\n\n        const result = 'rgb(' + rgb.r + ', ' + rgb.g + ', ' + rgb.b + ')';\n\n        if (type === 'hex')\n            return this.hex(result);\n\n        else if (type.includes('rgb'))\n            return this.rgba(rgb.a, result).string;\n\n        else if (type.includes('hsl'))\n            return this.hsla(rgb.a, result).string;\n    }\n\n    /**\n     * @param {number} value - Adjust value by percent. range: -100 ~ 100\n     * @param {string} [color_arg=this.color] - Color to adjust.\n     * @return {string} - Luminance adjusted hsla color string\n     */\n    adjustLuminance(value = 0, color_arg = this.color) {\n        let { color } = this._colorType(color_arg);\n        let col = this.hsla(this.getAlpha(color), color);\n\n        let limit = (v, limit = 100) => {\n            return v > limit ? limit : v < 0 ? 0 : v;\n        };\n\n        col.l += ((value > 0 ? (100 - col.l) : col.l) / 100) * value;\n        col.l = limit(col.l);\n\n        return this._toString(col);\n    }\n\n    /**\n     * @param {number} value - Adjust value by percent. range: -100 ~ 100\n     * @param {string} [color_arg=this.color] - Color to adjust.\n     * @return {string} - Saturation adjusted hsla color string\n     */\n    adjustSaturation(value = 0, color_arg = this.color) {\n        let { color } = this._colorType(color_arg);\n        let col = this.hsla(this.getAlpha(color), color);\n\n        let limit = (v, limit = 100) => {\n            return v > limit ? limit : v < 0 ? 0 : v;\n        };\n\n        col.s += ((value > 0 ? (100 - col.s) : col.s) / 100) * value;\n        col.s = limit(col.s);\n\n        return this._toString(col);\n    }\n}\n\nexport { ColorMangle };","import { ColorMangle } from \"colormangle\";\n\nclass Wysiwyg4All {\n  /**\n   * Wysiwyg4All is a simple framework for building a text editor for your website.\n   * Focused on expandability and customizations.\n   * Additional library ColorMangle is required for text colors.\n   * @param {{}} option - Options\n   * @param {string} option.elementId - ID of target <DIV>.\n   * @param {boolean} [option.editable=true] - When set to false, Wysiwyg will not be editable. By doing this, it can be used as readonly.\n   * @param {string} [option.placeholder=''] - Add placeholder string.\n   * @param {boolean} [option.spellcheck=false] - Set spellcheck to true/false.\n   * @param {string | object} [option.highlightColor='teal'] - Sets the highlight color of the wysiwyg (web color name | hex | rgb | hsl). Or can provide custom color scheme object (more details in api doc).\n   * @param {string} [option.html=''] - HTML string to load on initialization.\n   * @param {function} [option.callback=(cb)=>{return cb}] - Setup callback function. Callback argument contains array of information such as current text style, added images, hashtags, urllinks, selected range... etc.\n   * @param {{} | number} [option.fontSize={desktop:18, tablet: 16, phone: 14}] - Set default font size of each screen size in px. If number is given all screen size will share the same give font size.\n   * @param {boolean} [option.lastLineBlank=false] - When set to true, Blank line will always be added on the last line of wysiwyg.\n   * @param {boolean} [option.hashtag=false] - When set to true, wysiwyg will auto detect hashtag strings.\n   * @param {boolean} [option.urllink=false] - When set to true, wysiwyg will auto detect url strings.\n   * @param {boolean} [option.logMutation=false] - When set to true, wysiwyg will output dom mutation data via callback function.\n   */\n  constructor(option) {\n    this.hashtag_regex =\n      /#[\\u0041-\\u005A\\u0061-\\u007A\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0\\u08A2-\\u08AC\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097F\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA697\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA80-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC\\w-]+(?:\\+[\\w-]+)*/g;\n    this.hashtag_stopper_regex =\n      /[^\\u0041-\\u005A\\u0061-\\u007A\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0\\u08A2-\\u08AC\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097F\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA697\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA80-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC\\w-]/g;\n    this.urllink_regex =\n      /(https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|www\\.[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9]+\\.[^\\s]{2,}|www\\.[a-zA-Z0-9]+\\.[^\\s]{2,})/gi;\n\n    let {\n      elementId = \"\",\n      editable = true,\n      placeholder = \"\",\n      spellcheck = false,\n      highlightColor = \"teal\",\n      html = \"\",\n      callback,\n      fontSize = {\n        desktop: \"18px\",\n        tablet: \"16px\",\n        phone: \"14px\",\n\n        h1: 4.2,\n        h2: 3.56,\n        h3: 2.92,\n        h4: 2.28,\n        h5: 1.64,\n        h6: 1.15,\n        small: 0.8,\n      },\n      lastLineBlank = false,\n      hashtag = false,\n      urllink = false,\n      logMutation = false,\n      logExecution = false,\n    } = option;\n\n    this.hashtag = hashtag;\n    this.urllink = urllink;\n    this.logMutation = logMutation;\n    this.logExecution = logExecution;\n    this.fontSizeCssVariable = {};\n\n    if (typeof fontSize === \"number\")\n      this.fontSizeCssVariable = {\n        \"--wysiwyg-font-desktop\": `${fontSize}`,\n        \"--wysiwyg-font-tablet\": `${fontSize}`,\n        \"--wysiwyg-font-phone\": `${fontSize}`,\n      };\n    else if (typeof fontSize === \"object\" && Object.keys(fontSize).length) {\n      let hold;\n      let keyArr = [\"desktop\", \"tablet\", \"phone\"];\n\n      for (let k of keyArr) {\n        if (fontSize[k]) {\n          hold = fontSize[k];\n          if (typeof hold === \"number\") hold = `${hold}px`;\n        }\n        this.fontSizeCssVariable[`--wysiwyg-font-${k}`] = `${hold}`;\n      }\n    }\n\n    if (!elementId || typeof elementId !== \"string\")\n      throw new Error(\"The wysiwyg element should have an ID\");\n    elementId = elementId[0] === \"#\" ? elementId.substring(1) : elementId;\n\n    this.html = html;\n    this.elementId = elementId[0] === \"#\" ? elementId.substring(1) : elementId;\n    this.placeholder = placeholder;\n    this.spellcheck = spellcheck;\n    this.lastLineBlank = lastLineBlank;\n\n    if (typeof highlightColor === \"string\")\n      highlightColor = new ColorMangle(highlightColor).color;\n\n    this.colorScheme = highlightColor;\n    this.callback = callback || null;\n\n    this.image_array = [];\n    this.hashtag_array = [];\n    this.urllink_array = [];\n    this.custom_array = [];\n\n    this.blockElement_queryArray = [\n      \"HR\",\n      \"BLOCKQUOTE\",\n      \"UL\",\n      \"OL\",\n      \"._media_\",\n      \"._custom_\",\n    ];\n    this.specialTextElement_queryArray = [\"._hashtag_\", \"._urllink_\"];\n    this.restrictedElement_queryArray = [\"._media_\", \"._custom_\"];\n    this.textAreaElement_queryArray = [\"BLOCKQUOTE\", \"LI\"];\n    this.textBlockElement_queryArray = [\"P\", \"LI\", \"TD\", \"TH\"]; //, \"TD\", \"TH\", '._color', '._small', '._h1`', '._h2', '._h3', '._h4', '._h5', '._h6', '._b', '._i', '._u', '._del'\n    this.ceilingElement_queryArray = [\n      \"UL\",\n      \"OL\",\n      \"BLOCKQUOTE\",\n      `#${elementId}`,\n      \"TD\",\n      \"TH\",\n    ];\n    this.unSelectable_queryArray = [\n      \"._media_\",\n      \"._custom_\",\n      \"._hashtag_\",\n      \"._urllink_\",\n      \"HR\",\n    ];\n    this.styleAllowedElement_queryArray = [\n      \"._color\",\n      `#${elementId}`,\n      \"._hashtag_\",\n      \"._urllink_\",\n      \"TD\",\n      \"TH\",\n    ]; // ALLOWED ELEMENTS FOR STYLE ATTRIBUTE <... style=\"...\">\n    this.alignClass = [\"_alignCenter_\", \"_alignRight_\"];\n\n    this.hashtag_flag = false;\n    this.urllink_flag = false;\n    this.range_backup = null;\n\n    this.commandTracker = {};\n    this.range = null;\n    this.isRangeDirectionForward = true;\n    this.insertTabPending_tabString = \"\";\n    this.removeSandwichedLine_array = [];\n    this.lastKey = null;\n\n    //  setup div\n    this.element = document.getElementById(this.elementId);\n    if (!this.element) throw `element #${this.elementId} is null`;\n\n    this.element.innerHTML = \"\";\n\n    this.cssVariable = new ColorMangle().colorScheme(this.colorScheme);\n    Object.assign(this.cssVariable, this.fontSizeCssVariable);\n\n    for (const v in this.cssVariable)\n      this.element.style.setProperty(v, this.cssVariable[v]);\n\n    this.elementComputedStyle = window.getComputedStyle(this.element);\n    this.defaultFontColor = new ColorMangle(\n      this.cssVariable[\"--content-text\"]\n    ).hex();\n    this.highlightColor = new ColorMangle(\n      this.cssVariable[\"--content-focus\"]\n    ).hex();\n\n    if (!this.element.classList.contains(\"_wysiwyg4all\"))\n      this.element.classList.add(\"_wysiwyg4all\");\n\n    this.setPlaceholder(this.placeholder);\n    this.setSpellcheck(this.spellcheck);\n\n    //  re-adjust min-height depending on padding\n    let paddingB = this.elementComputedStyle.paddingBottom;\n    let paddingT = this.elementComputedStyle.paddingTop;\n    let borderT = this.elementComputedStyle.borderTopWidth;\n    let borderB = this.elementComputedStyle.borderBottomWidth;\n\n    this.element.style.minHeight = `calc(${paddingB} + ${paddingT} + ${borderT} + ${borderB} + 1.6em)`;\n\n    //  command style tag\n    const command = {\n      //  [<targetClassName>, <cssProperty>, [<string: counter tag | class name>]]\n      h1: [\"_h1\", \"fontSize\", [\"_small\", \"_h2\", \"_h3\", \"_h4\", \"_h5\", \"_h6\"]],\n      h2: [\"_h2\", \"fontSize\", [\"_small\", \"_h1\", \"_h3\", \"_h4\", \"_h5\", \"_h6\"]],\n      h3: [\"_h3\", \"fontSize\", [\"_small\", \"_h1\", \"_h2\", \"_h4\", \"_h5\", \"_h6\"]],\n      h4: [\"_h4\", \"fontSize\", [\"_small\", \"_h1\", \"_h2\", \"_h3\", \"_h5\", \"_h6\"]],\n      h5: [\"_h5\", \"fontSize\", [\"_small\", \"_h1\", \"_h2\", \"_h3\", \"_h4\", \"_h6\"]],\n      h6: [\"_h6\", \"fontSize\", [\"_small\", \"_h1\", \"_h2\", \"_h3\", \"_h4\", \"_h5\"]],\n      italic: [\"_i\", \"fontStyle\"],\n      small: [\n        \"_small\",\n        \"fontSize\",\n        [\"_h1\", \"_h2\", \"_h3\", \"_h4\", \"_h5\", \"_h6\", \"_b\"],\n      ],\n      bold: [\"_b\", \"fontWeight\", [\"_small\"]],\n      underline: [\"_u\", \"textDecoration\", [\"_del\"]],\n      strike: [\"_del\", \"textDecoration\", [\"_u\"]],\n      color: [\"_color\", \"color\"],\n    };\n\n    const fontSizeRatio = {\n      //  should always be the same em value as css\n      // h1: 4.2,\n      // h2: 3.56,\n      // h3: 2.92,\n      // h4: 2.28,\n      // h5: 1.64,\n      // h6: 1.15,\n      // small: 0.8,\n      h1: fontSize.h1 || 4.2,\n      h2: fontSize.h2 || 3.56,\n      h3: fontSize.h3 || 2.92,\n      h4: fontSize.h4 || 2.28,\n      h5: fontSize.h5 || 1.64,\n      h6: fontSize.h6 || 1.15,\n      small: fontSize.small || 0.8,\n    };\n\n    // // font size variables\n    // --wysiwyg-h1: calc(var(--wysiwyg-font) * 4.2);\n    // --wysiwyg-h2: calc(var(--wysiwyg-font) * 3.56);\n    // --wysiwyg-h3: calc(var(--wysiwyg-font) * 2.92);\n    // --wysiwyg-h4: calc(var(--wysiwyg-font) * 2.28);\n    // --wysiwyg-h5: calc(var(--wysiwyg-font) * 1.64);\n    // --wysiwyg-h6: calc(var(--wysiwyg-font) * 1.15);\n    // --wysiwyg-small: calc(var(--wysiwyg-font) * 0.8);\n    for (const [tag, ratio] of Object.entries(fontSizeRatio)) {\n      if (typeof ratio === \"number\") {\n        this.element.style.setProperty(\n          `--wysiwyg-${tag}`,\n          `calc(var(--wysiwyg-font) * ${ratio})`\n        );\n      } else if (typeof ratio === \"string\") {\n        if (ratio.includes(\"px\")) {\n          this.element.style.setProperty(`--wysiwyg-${tag}`, ratio);\n        } else if (ratio.includes(\"em\") || ratio.includes(\"rem\")) {\n          let emSize = parseFloat(ratio);\n          if (emSize > 0) {\n            this.element.style.setProperty(\n              `--wysiwyg-${tag}`,\n              `calc(var(--wysiwyg-font) * ${emSize})`\n            );\n          }\n        }\n      }\n    }\n\n    this.styleTagOfCommand = {};\n    this.counterTagOf = {};\n    this.cssPropertyOf = {};\n    this.cssPropertyChecker = {\n      textDecoration: (v) => {\n        //  v = <string: value from computedStyle>\n        if (v.includes(\"underline\")) return \"underline\";\n        else if (v.includes(\"line-through\")) return \"strike\";\n\n        return false;\n      },\n      fontSize: (v) => {\n        //  v = <string: value from computedStyle>\n        let documentFontSize = parseFloat(this.elementComputedStyle.fontSize);\n        let nodeFontSize = parseFloat(v);\n        for (let tag in fontSizeRatio) {\n          let f_size = fontSizeRatio[tag];\n\n          if (typeof f_size === \"number\") {\n            //  precision\n            let compare_size = documentFontSize * f_size;\n            let f_size_high = compare_size + 0.01;\n            let f_size_low = compare_size - 0.01;\n            if (f_size_high > nodeFontSize && f_size_low < nodeFontSize)\n              return tag;\n          } else if (typeof f_size === \"string\") {\n            if (f_size.includes(\"px\")) {\n              if (v === f_size) return tag;\n            } else if (f_size.includes(\"em\") || f_size.includes(\"rem\")) {\n              let emSize = parseFloat(f_size);\n              if (emSize > 0) {\n                let compare_size = documentFontSize * emSize;\n                let f_size_high = compare_size + 0.01;\n                let f_size_low = compare_size - 0.01;\n                if (f_size_high > nodeFontSize && f_size_low < nodeFontSize)\n                  return tag;\n              }\n            }\n          }\n        }\n        return false;\n      },\n      fontStyle: (v) => {\n        //  v = <string: value from computedStyle>\n        if (v.includes(\"italic\")) return \"italic\";\n        return false;\n      },\n    };\n\n    for (let c in command) {\n      this.commandTracker[c] = false;\n      this.styleTagOfCommand[c] = command[c][0];\n      this.cssPropertyOf[command[c][0]] = command[c][1];\n      if (!this.cssPropertyChecker.hasOwnProperty(command[c][1]))\n        this.cssPropertyChecker[command[c][1]] = c;\n      if (command[c][2]) this.counterTagOf[command[c][0]] = command[c][2];\n    }\n\n    /**\n         this.styleTagOfCommand = {\n            [commandKey]: <targetClassName>\n         };\n\n         this.cssPropertyChecker = {\n            [cssPropertyKey]: <commandKey | function(<cssValue>)>\n         };\n\n         this.cssPropertyOf = {\n            [targetClassName]: <cssPropertyKey>\n         };\n\n         this.counterTagOf = {\n            [targetClassName]: [<counterClassName>]\n         };\n\n         this.commandTracker = {\n            [commandKey]: <boolean>\n         };\n\n         console.log({\n            styleTagOfCommand: this.styleTagOfCommand,\n            cssPropertyChecker: this.cssPropertyChecker,\n            cssPropertyOf: this.cssPropertyOf,\n            counterTagOf: this.counterTagOf,\n            commandTracker: this.commandTracker\n         });\n         */\n\n    this.loadHTML(this.html, editable).catch((err) => {\n      throw err;\n    });\n  }\n\n  _adjustSelection(\n    target,\n    ceilingElement_query = this.ceilingElement_queryArray\n  ) {\n    if (this.logExecution)\n      console.log(\"_adjustSelection()\", { target, ceilingElement_query });\n\n    let toArray = (v, allowObject = false) => {\n      if (Array.isArray(v)) return v;\n      else if (\n        (typeof v === \"string\" && v) ||\n        typeof v === \"number\" ||\n        typeof v === \"boolean\" ||\n        (allowObject && typeof v === \"object\")\n      )\n        return [v];\n      else return [];\n    };\n\n    let setRange = !!target;\n\n    let { node = null, position = true } = target || {};\n\n    let sel = window.getSelection();\n    if (!sel) return null;\n\n    let range;\n    try {\n      range = sel.getRangeAt(0);\n    } catch (err) {\n      if (setRange) range = document.createRange();\n    }\n\n    if (setRange) {\n      node = toArray(node, true);\n      position = toArray(position, true);\n\n      for (let p of position)\n        if (typeof p !== \"number\" && typeof p !== \"boolean\" && p !== null)\n          throw \"INVALID_POSITION\";\n\n      for (let n of node) {\n        if (!(n instanceof Node) && n !== null) {\n          if (n === false) return;\n          throw \"INVALID_NODE\";\n        }\n      }\n\n      const setTarget = (node, position) => {\n        if (node instanceof Node) {\n          if (node.nodeType === 1) {\n            if (typeof position === \"boolean\")\n              while (position === false ? node.lastChild : node.firstChild)\n                node = position === false ? node.lastChild : node.firstChild;\n            else if (typeof position === \"number\") {\n              let textLength = 0;\n              this._nodeCrawler(\n                (n) => {\n                  if (n.nodeType === 3 && n.textContent.length) {\n                    let length = n.textContent.length;\n                    if (\n                      n.parentNode.getAttribute(\"contenteditable\") === \"false\"\n                    ) {\n                      if (position - (textLength + length) >= 0)\n                        textLength += length;\n                      else {\n                        position = length;\n                        return \"BREAK\";\n                      }\n                      return n;\n                    } else {\n                      node = n;\n\n                      if (position - (textLength + length) >= 0) {\n                        textLength += length;\n                      } else {\n                        position -= textLength;\n                        return \"BREAK\";\n                      }\n                    }\n                  }\n                  return n;\n                },\n                {\n                  node,\n                }\n              );\n              if (node.nodeType === 1) {\n                let text = document.createTextNode(\"\\u200B\");\n                node.insertBefore(text, node.childNodes[0]);\n                node = text;\n                position = 0;\n              }\n            }\n\n            if (node.nodeName === \"BR\" && node.parentNode.childNodes.length > 1)\n              node = node.previousSibling || node;\n          }\n          if (typeof position === \"boolean\")\n            position = position ? 0 : node.textContent.length;\n          else\n            position =\n              position > node.textContent.length\n                ? node.textContent.length\n                : position;\n\n          return { node, position };\n        }\n      };\n\n      let doCollapse = false,\n        setEnd,\n        setStart = (() => {\n          node[0] = node[0] === null ? range.startContainer : node[0];\n          position[0] = position[0] === null ? range.startOffset : position[0];\n          return setTarget(node[0], position[0]);\n        })();\n      range.setStart(setStart.node, setStart.position);\n\n      if (position.length > 1)\n        setEnd = setTarget(\n          (node[1] === null ? range.endContainer : node[1]) || node[0],\n          position[1] === null ? range.endOffset : position[1]\n        );\n      else {\n        setEnd = setStart;\n        doCollapse = true;\n      }\n\n      range.setEnd(setEnd.node, setEnd.position);\n\n      if (doCollapse) range.collapse(true);\n\n      sel.removeAllRanges();\n      sel.addRange(range);\n    }\n\n    if (ceilingElement_query && range) {\n      let startLine, endLine;\n      for (let q of ceilingElement_query) {\n        let e =\n          range.endContainer.nodeType === 3\n            ? range.endContainer.parentNode\n            : range.endContainer;\n        let s =\n          range.startContainer.nodeType === 3\n            ? range.startContainer.parentNode\n            : range.startContainer;\n\n        if (!startLine && s.closest(q))\n          startLine = this._climbUpToEldestParent(s, s.closest(q));\n        if (!endLine && e.closest(q))\n          endLine = this._climbUpToEldestParent(e, e.closest(q));\n      }\n\n      range.startLine = startLine;\n      range.endLine = endLine;\n    }\n\n    return range;\n  }\n\n  _generateId(option) {\n    if (this.logExecution) console.log(\"_generateId()\", { option });\n    let limit = 12;\n    let prefix = \"\";\n\n    if (typeof option === \"number\") limit = option;\n    else if (typeof option === \"string\") prefix = `${option}_`;\n\n    const possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\n\n    let text = \"\";\n    for (let i = 0; i < limit - 6; i++)\n      text += possible.charAt(\n        Math.floor(Math.random() * (possible.length - 1))\n      );\n\n    const numb = new Date().getTime().toString().substring(7, 13); // SECOND, MILLISECOND\n\n    // const shuffleArray = (array) => {\n    //     let currentIndex = array.length;\n    //     let temporaryValue, randomIndex;\n    //     while (0 !== currentIndex) {\n    //         randomIndex = Math.floor(Math.random() * currentIndex);\n    //         currentIndex -= 1;\n    //         temporaryValue = array[currentIndex];\n    //         array[currentIndex] = array[randomIndex];\n    //         array[randomIndex] = temporaryValue;\n    //     }\n    //     return array;\n    // };\n\n    // const letter_array = shuffleArray((text + numb).split(''));\n\n    // let output = '';\n    // for (let i = 0; i < limit; i++) output += letter_array[i];\n\n    return prefix + numb + text;\n  }\n\n  _nodeCrawler(run, option) {\n    if (this.logExecution) console.log(\"_nodeCrawler()\", { run, option });\n    const { parentNode, node, startFromEldestChild, startNode } = option;\n\n    if (startFromEldestChild && !parentNode)\n      throw new Error(\"Need parentNode to crawl up single child\");\n\n    if (!node || !(node instanceof Node || node?.commonAncestorContainer))\n      throw new Error(\"No node to crawl\");\n\n    let outputNodes = [],\n      nodeIsRange = !!node.commonAncestorContainer,\n      commonContainer = null,\n      parentAnchor;\n\n    if (parentNode && parentNode instanceof Node && parentNode?.nodeType === 1)\n      parentAnchor = parentNode;\n\n    if (nodeIsRange) {\n      commonContainer = node.commonAncestorContainer;\n      commonContainer =\n        commonContainer.nodeType === 3\n          ? commonContainer.parentNode || commonContainer\n          : commonContainer;\n    } else commonContainer = node;\n\n    if (startFromEldestChild)\n      commonContainer = this._climbUpToEldestParent(\n        commonContainer,\n        parentNode,\n        true\n      );\n\n    if (parentAnchor) {\n      while (\n        commonContainer.nodeType === 3 ||\n        (commonContainer !== parentAnchor &&\n          commonContainer.parentNode &&\n          commonContainer.parentNode !== parentAnchor)\n      )\n        commonContainer = commonContainer.parentNode;\n    }\n\n    /** crawl order below (outputs node on the way)\n     *  If 'BREAK' is returned, the node is not saved in outputNode\n     *\n     *  start   ->  [                   end\n     *                  |               ^ (finish)\n     *                  v               | (outputNode)\n     *              outputNode  ->  outputNode\n     *\n     *  NOTE: Will not crawl when node is textNode\n     */\n\n    if (commonContainer.nodeType === 3) {\n      outputNodes.push(run(commonContainer));\n\n      return { nodes: outputNodes, commonContainer };\n    }\n\n    let id, uniqueId;\n    if (commonContainer.nodeType === 1) {\n      uniqueId =\n        commonContainer.id ||\n        (() => {\n          id = this._generateId(\"crawl\");\n          commonContainer.id = id;\n          return id;\n        })();\n    }\n\n    let crawl =\n      (startNode instanceof Node ? startNode : null) ||\n      (nodeIsRange ? node.startContainer : commonContainer.childNodes[0]);\n    let endNode = nodeIsRange\n      ? node.endContainer\n      : commonContainer.childNodes[\n          commonContainer.childNodes.length\n            ? commonContainer.childNodes.length - 1\n            : 0\n        ];\n\n    let withInRange = (cwl) => {\n      if (!cwl || !(cwl instanceof Node)) return false;\n      if (cwl.nodeType === 1)\n        return cwl.id !== uniqueId && cwl.parentNode?.closest(\"#\" + uniqueId);\n      else return true;\n    };\n\n    while (withInRange(crawl)) {\n      if (crawl.nodeType === 1 && crawl.childNodes.length) {\n        // dive down to deepest child's first crawl\n        crawl = crawl.childNodes[0];\n      } else if (crawl) {\n        // entering the deepest elements first child.\n\n        if (typeof run === \"function\") crawl = run(crawl);\n        if (crawl === \"BREAK\" || !withInRange(crawl)) break;\n\n        outputNodes.push(crawl);\n\n        // break out if the crawl hits the end\n        if (crawl === endNode) break;\n\n        /**\n         * Climb up the node if the node doesn't have any next siblings\n         * Stop when it hits the commonContainer\n         */\n        let breakOut = false;\n        while (\n          !crawl.nextSibling &&\n          crawl.parentNode &&\n          withInRange(crawl.parentNode)\n        ) {\n          crawl = crawl.parentNode;\n          if (crawl) {\n            if (typeof run === \"function\") crawl = run(crawl);\n\n            if (crawl === \"BREAK\" || !withInRange(crawl)) {\n              breakOut = true;\n              break;\n            }\n\n            if (crawl) outputNodes.push(crawl);\n          }\n        }\n\n        if (breakOut) break;\n\n        // move on to next crawl\n        crawl = crawl.nextSibling;\n      }\n    }\n\n    if (id) commonContainer.removeAttribute(\"id\");\n\n    return { node: outputNodes, commonContainer };\n  }\n\n  _wrapNode(node, wrapper, appendWhole = false) {\n    if (this.logExecution)\n      console.log(\"_wrapNode()\", { node, wrapper, appendWhole });\n    if (!(node instanceof Node)) return;\n\n    if (!node.parentNode) throw new Error(\"can't unwrap document fragment\");\n\n    // save current range\n    let sel = window.getSelection();\n    let range = sel.getRangeAt(0);\n    let start = null;\n    let startOffset = range.startOffset;\n    let end = null;\n    let endOffset = range.endOffset;\n\n    const withinRange = (n) => {\n      if (range.startContainer === n) {\n        start = n;\n      }\n      if (range.endContainer === n) {\n        end = n;\n      }\n    };\n\n    if (node.nodeType === 1) {\n      this._nodeCrawler(\n        (n) => {\n          withinRange(n);\n          return n;\n        },\n        { node }\n      );\n    } else withinRange(node);\n\n    if (wrapper) {\n      // place the wrapper\n      node.parentNode.insertBefore(wrapper, node);\n    }\n\n    // append node\n    if (node.nodeType === 3) {\n      if (wrapper) wrapper.append(node);\n      else throw new Error(\"no wrapper for text content\");\n    } else if (appendWhole) wrapper.append(node);\n    else\n      while (node.childNodes[0]) {\n        let child = node.childNodes[0];\n        if (wrapper) wrapper.append(child);\n        else node.parentNode.insertBefore(child, node);\n      }\n\n    let stripped;\n    if (node.nodeType === 1 && !appendWhole) {\n      let n = wrapper || node;\n      let p = n.parentNode;\n      stripped = node.previousSibling;\n      p.removeChild(node);\n    }\n\n    // restore range\n    if ((stripped || node).textContent && (start || end)) {\n      if (start && start === end && startOffset === endOffset)\n        range = this._adjustSelection({\n          node: stripped || node,\n          position: startOffset,\n        });\n      else\n        range = this._adjustSelection({\n          node: [start, end],\n          position: [startOffset, endOffset],\n        });\n    }\n\n    this.range = range;\n    return { node: stripped || node, range };\n  }\n\n  _climbUpToEldestParent(node, wrapper, singleChildParent = false, callback) {\n    if (this.logExecution)\n      console.log(\"_climbUpToEldestParent()\", {\n        node,\n        wrapper,\n        singleChildParent,\n        callback,\n      });\n    callback =\n      callback ||\n      ((n) => {\n        return n;\n      });\n\n    if (!(wrapper instanceof Node) || wrapper?.nodeType === 3)\n      throw new Error(\"invalid wrapper node\");\n\n    let id;\n    let uniqueId =\n      wrapper.id ||\n      (() => {\n        id = this._generateId(\"eldest\");\n        wrapper.id = id;\n        return id;\n      })();\n    // on single parent mode climb up if parent has only 1 child or 2 child with zero space text\n    function _isSingleChildParent(n) {\n      if (!n || n.nodeType === 3) return false;\n\n      let childrenCount = n?.children?.length;\n      return (\n        childrenCount === 0 ||\n        (() => {\n          let sweep = n.childNodes.length;\n          let divCount = 0;\n          let iHaveText = false;\n\n          while (sweep--) {\n            let s = n.childNodes[sweep];\n\n            if (\n              s.nodeType === 3 &&\n              s.textContent.length > 0 &&\n              s.textContent !== \"\\u200B\"\n            )\n              iHaveText = true;\n            else if (s.nodeType === 1 && s.nodeName !== \"BR\") divCount++;\n\n            // if (divCount > 1 || divCount && iHaveText)\n            if ((divCount > 1 && !iHaveText) || (divCount && iHaveText))\n              return false;\n          }\n\n          return true;\n        })()\n      );\n    }\n    while (\n      node?.id !== uniqueId &&\n      node.parentNode &&\n      node.parentNode.closest(\"#\" + uniqueId) &&\n      node.parentNode.id !== uniqueId &&\n      (singleChildParent ? _isSingleChildParent(node?.parentNode) : true)\n    ) {\n      let cb = callback(node.parentNode);\n\n      if (!cb || cb === \"BREAK\") break;\n\n      node = cb;\n    }\n\n    if (id) wrapper.removeAttribute(\"id\");\n\n    return node;\n  }\n\n  _getStartEndLine(\n    range = this.range,\n    element = this.element,\n    getInbetween = false\n  ) {\n    if (this.logExecution)\n      console.log(\"_getStartEndLine()\", { range, element });\n    if (!range) return [null, null, null];\n\n    let startLine = this._climbUpToEldestParent(range.startContainer, element);\n    let endLine = this._climbUpToEldestParent(range.endContainer, element);\n\n    let inBetween = [];\n    if (getInbetween) {\n      // collect all the lines in between startLine and endLine. line is a block element\n      let currentLine = startLine.nextSibling;\n      while (currentLine && currentLine !== endLine) {\n        if (\n          currentLine.nodeType === 1 &&\n          this.blockElement_queryArray.some((q) =>\n            currentLine.matches(this._classNameToQuery(q))\n          )\n        ) {\n          inBetween.push(currentLine);\n        }\n        currentLine = currentLine.nextSibling;\n      }\n    }\n    if (this.logExecution)\n      console.log(\"startLine | endLine\", { startLine, endLine, inBetween });\n\n    return [startLine, endLine, inBetween];\n  }\n\n  _isThereContentEditableOverMyHead(node, element = this.element) {\n    if (node && node !== this.element) {\n      let flyup = node;\n      while (flyup && this.element !== flyup) {\n        if (flyup.getAttribute(\"contenteditable\") === \"true\") return true;\n\n        flyup = flyup.parentNode;\n      }\n    }\n    return false;\n  }\n\n  _isSelectionWithinRestrictedRange(\n    range = this.range,\n    element = this.element\n  ) {\n    if (!range) {\n      if (this.logExecution)\n        console.log(\"_isSelectionWithinRestrictedRange():true\", {\n          range,\n          element,\n        });\n      return true;\n    }\n\n    let { commonAncestorContainer, startContainer, endContainer } = range;\n    let restrict = this.restrictedElement_queryArray;\n    // let startLine = this._climbUpToEldestParent(startContainer, element);\n    // let endLine = this._climbUpToEldestParent(endContainer, element);\n\n    // if (this.logExecution) console.log('startLine | endLine', {startLine, endLine});\n    let [startLine, endLine, inBetween] = this._getStartEndLine(\n      range,\n      element,\n      true\n    );\n    if (startLine === endLine) {\n      commonAncestorContainer =\n        commonAncestorContainer.nodeType === 3\n          ? commonAncestorContainer.parentNode\n          : commonAncestorContainer;\n      for (let r of restrict) {\n        let cl = commonAncestorContainer.closest(this._classNameToQuery(r));\n        if (cl) {\n          // if (cl.getAttribute('contenteditable') !== 'true') {\n          //     return r;\n          // }\n          let isThere = this._isThereContentEditableOverMyHead(\n            commonAncestorContainer,\n            element\n          );\n          if (!isThere) {\n            return true;\n          }\n        }\n        // let cl = commonAncestorContainer.closest(this._classNameToQuery(r));\n        // if (cl)\n        //     return r;\n      }\n    } else if (inBetween?.length) {\n      for (let i = 0; i < inBetween.length; i++) {\n        for (let r of restrict) {\n          if (inBetween[i].closest(this._classNameToQuery(r))) {\n            let isThere = this._isThereContentEditableOverMyHead(inBetween[i]);\n            if (!isThere) {\n              return true;\n            }\n          }\n        }\n      }\n      // while (startLine && startLine !== endLine) {\n      //     startLine = startLine.nextSibling;\n      //     if (startLine) {\n      //         if (startLine.nodeType === 1)\n      //             for (let r of restrict) {\n      //                 if (startLine.classList.contains(r)) {\n      //                     if (startLine.getAttribute('contenteditable') !== 'true') {\n      //                         return r;\n      //                     }\n      //                 }\n      //                 // if (startLine.classList.contains(r))\n      //                 //     return r;\n      //             }\n      //     } else\n      //         break;\n      // }\n    }\n\n    return false;\n  }\n\n  _classNameToQuery(q) {\n    if (this.logExecution) console.log(\"_classNameToQuery()\", { q });\n    if (q.includes(\"_stop\") && q[0] !== \".\") return \".\" + q;\n    return q[0] === \"_\" ? \".\" + q : q;\n  }\n\n  _createEmptyParagraph(append) {\n    if (this.logExecution) console.log(\"_createEmptyParagraph()\", { append });\n    let p = document.createElement(\"p\");\n\n    if (append && typeof append === \"string\")\n      append = document.createTextNode(append);\n\n    p.append(append || document.createTextNode(\"\"));\n\n    if (!append) p.append(document.createElement(\"br\"));\n\n    return p;\n  }\n\n  _trackStyle(n, cls) {\n    if (this.logExecution) console.log(\"_trackStyle()\", { n, cls });\n    let commandTracker = {};\n    let style = window.getComputedStyle(n);\n\n    for (let c of this.alignClass) {\n      if (n.closest(\".\" + c))\n        commandTracker[c.substring(1, c.length - 1)] = true;\n    }\n\n    let checker = (sp) => {\n      let key = this.cssPropertyChecker[sp];\n      if (typeof key === \"function\") {\n        key = key(style[sp]);\n        if (key) {\n          if (cls) return key;\n          commandTracker[key] = true;\n        }\n      } else if (sp === \"color\" && style[sp]) {\n        let col =\n          style[sp][0] === \"#\" ? style[sp] : new ColorMangle(style[sp]).hex();\n\n        if (col !== this.defaultFontColor) {\n          if (cls) return col;\n          commandTracker[key] = col;\n        }\n      } else if (\n        style[sp] !== this.elementComputedStyle[sp] &&\n        this._isTextElement(n)\n      ) {\n        if (cls) return true;\n        commandTracker[key] = true;\n      }\n      return false;\n    };\n\n    if (cls) return checker(this.cssPropertyOf[cls.toLowerCase()]);\n\n    for (let sp in this.cssPropertyChecker) {\n      checker(sp);\n    }\n\n    return commandTracker;\n  }\n\n  _lastLineBlank(force) {\n    if (this.logExecution) console.log(\"_lastLineBlank()\", { force });\n    if (this.lastLineBlank || force) {\n      let lastLine = this.element.lastChild;\n      if (\n        lastLine.nodeName !== \"P\" ||\n        (lastLine.nodeName === \"P\" &&\n          lastLine.textContent &&\n          lastLine.textContent !== \"\\u200B\")\n      ) {\n        this.element.append(this._createEmptyParagraph());\n      }\n    }\n  }\n\n  _setEventListener(listen) {\n    if (this.logExecution) console.log(\"_setEventListener()\", { listen });\n    /**\n     * keydown -> observer(dom change) -> selection change -> click | keyup\n     */\n\n    document.removeEventListener(\"selectionchange\", this._selectionchange);\n    this.imgInput = null;\n    if (this.element) {\n      this.element.removeEventListener(\"keydown\", this._keydown);\n      this.element.removeEventListener(\"mousedown\", this._normalize);\n      window.removeEventListener(\"mousedown\", this._normalize);\n      this.element.removeEventListener(\"paste\", this._paste);\n      this.element.removeEventListener(\"keyup\", this._keyup);\n    }\n\n    if (!listen) return;\n\n    //  image selector\n    let imgInput = document.createElement(\"input\");\n    for (const [key, value] of Object.entries({\n      id: this._generateId(\"imageInput\"),\n      type: \"file\",\n      accept: \"image/gif,image/png,image/jpeg,image/webp\",\n      hidden: true,\n      multiple: true,\n    })) {\n      imgInput.setAttribute(key, value);\n    }\n\n    this.imgInput = imgInput;\n    this.imgInput.addEventListener(\"change\", (e) => {\n      this._imageSelected(e).catch((err) => {\n        console.error(err);\n      });\n    });\n\n    this._selectionchange = function () {\n      this._modifySelection(() => {\n        let isForward =\n          !(this.lastKey === \"DELETE\" || this.lastKey === \"BACKSPACE\") ||\n          this.isRangeDirectionForward;\n\n        let rangeHeader = isForward\n          ? this.range.endContainer\n          : this.range.startContainer;\n        this.lastKey = null;\n\n        //  nudge range in-case carat is within non selectables\n        let unSel = this._isUnSelectableElement(rangeHeader);\n        if (unSel) {\n          let selNext = isForward ? unSel.nextSibling : unSel.previousSibling;\n          \n          if(this.logExecution) console.log('nudging range', {unSel, selNext, isForward});\n          \n          if (!selNext && !isForward) {\n            selNext = document.createTextNode(\"\\u200B\");\n            unSel.parentNode.insertBefore(\n              selNext,\n              isForward ? unSel.nextSibling : unSel\n            );\n          }\n          if (selNext)\n            this.range = this._adjustSelection({\n              node: this.range.collapsed\n                ? selNext\n                : isForward\n                ? [null, selNext]\n                : [selNext, null],\n              position: this.range.collapsed\n                ? isForward\n                  ? 0\n                  : selNext.textContent.length\n                : isForward\n                ? [null, 0]\n                : [0, null],\n            });\n        }\n\n        //  track commandTracker\n        let commandTracker = {};\n        for (let style in this.styleTagOfCommand) {\n          commandTracker[style] = false;\n        }\n\n        if (this._isSelectionWithinRestrictedRange()) {\n          this.commandTracker = commandTracker;\n          return;\n        }\n\n        let skipTrack = this.restrictedElement_queryArray.concat(\n          this.specialTextElement_queryArray\n        );\n        let crawlResult = this._nodeCrawler(\n          (node) => {\n            if (\n              (node.nodeType === 1 && node.closest(\"blockquote\")) ||\n              (node.nodeType === 3 && node.parentNode.closest(\"blockquote\"))\n            )\n              commandTracker.quote = true;\n\n            let styleRestrictedParents = (c) => {\n              return node.nodeType === 3\n                ? node.parentNode.closest(c)\n                : node.nodeType === 1\n                ? node.closest(c)\n                : !(node instanceof Node);\n            };\n\n            for (let p of skipTrack) {\n              let chk = styleRestrictedParents(p);\n              if (chk) return node;\n            }\n\n            if (\n              node.nodeType === 3 ||\n              node.nodeName === \"BR\" ||\n              (node.nodeType === 1 &&\n                node.childNodes.length === 1 &&\n                (node.childNodes[0].nodeName === \"BR\" ||\n                  node.childNodes[0].nodeType === 3))\n            ) {\n              let n =\n                node.nodeType === 3 || node.nodeName === \"BR\"\n                  ? node.parentNode\n                  : node;\n\n              let comm = this._trackStyle(n);\n              for (let c in comm) commandTracker[c] = comm[c];\n            }\n            return node;\n          },\n          { node: this.range, parentNode: this.element }\n        );\n\n        if (!crawlResult.node.length) {\n          let comm = this._trackStyle(this.range.startContainer);\n          for (let c in comm) commandTracker[c] = comm[c];\n        }\n\n        this.commandTracker = commandTracker;\n        let caratPosition;\n        let caratEl = this.isRangeDirectionForward\n          ? this.range.endContainer\n          : this.range.startContainer;\n\n        if (caratEl.nodeType === 3)\n          caratPosition = this.range.getBoundingClientRect();\n        else if (caratEl.nodeType === 1)\n          caratPosition = caratEl.getBoundingClientRect();\n\n        this._callback({\n          commandTracker,\n          range: this.range,\n          caratPosition,\n        }).catch((err) => console.error(err));\n        this._lastLineBlank();\n      });\n    }.bind(this);\n\n    this._keydown = function (e) {\n      if (this._isSelectionWithinRestrictedRange()) return;\n\n      this._modifySelection(() => {\n        if (!this.range) return;\n        let { startContainer, startOffset, collapsed, startLine, endLine } =\n          this.range;\n\n        let key = e.key.toUpperCase();\n        let shift = e.shiftKey;\n\n        this.lastKey = key;\n\n        if (key === \"ENTER\" && e.shiftKey) {\n          // prevent shift+enter\n          if (!this.range.endLine.closest(\"LI\")) e.preventDefault();\n          return;\n        }\n\n        // delete key\n        if ([\"BACKSPACE\", \"DELETE\"].includes(key)) {\n          this.isRangeDirectionForward = true;\n\n          // if (\n          //     this.element.childNodes.length === 1 &&\n          //     this._isTextBlockElement(this.element.childNodes[0]) &&\n          //     this.element.childNodes[0].textContent.length === 0\n          // ) {\n          //     if(this.logExecution) console.log('dead end');\n          //     e.preventDefault();\n          //     // Optionally, reset to a blank paragraph\n          //     // this.element.childNodes[0].innerHTML = '<br>';\n          //     // this.range = this._adjustSelection({ node: this.element.childNodes[0], position: 0 });\n          //     this._lastLineBlank(true);\n          // }\n\n          if (\n            !this.element.textContent &&\n            this.element.childNodes.length <= 1 &&\n            this._isTextElement(this.element.childNodes[0]) &&\n            this.element.childNodes[0] === startLine\n          ) {\n            if(this.logExecution) console.log('nothing to delete');\n            // there is nothing to delete\n            e.preventDefault();\n          } else {\n            let stc = this.range.startContainer;\n            if (this.range.collapsed) {\n              let block = (stc.nodeType === 3 ? stc.parentNode : stc).closest(\n                \"blockquote\"\n              );\n              if (\n                block &&\n                block.childNodes[0] ===\n                  this._climbUpToEldestParent(stc, block) &&\n                this.range.startOffset === 0\n              ) {\n                // if the block is empty and the cursor is on the first offset position within the blockquote\n                // cursor is on the first offset position within the blockquote\n                e.preventDefault();\n                this.command(\"quote\");\n              }\n\n              if(this.range.startOffset === 0) {\n                let ceil = this._climbUpToEldestParent(stc, this.element).previousSibling;\n                for(let cl of this.restrictedElement_queryArray) {\n                  if(ceil && ceil.closest(cl)) {\n                    // remove the element\n                    this.element.removeChild(ceil);\n                    e.preventDefault();\n                    return;\n                  }\n                }\n              }\n            }\n\n            let commonAncestorContainer = this.range.commonAncestorContainer;\n            // check if commonAncestorContainer is the only element in this.element\n\n            // e.preventDefault();\n            if (\n              !this.range.startOffset &&\n              ((this.element.childNodes.length === 1 &&\n              commonAncestorContainer === this.element.childNodes[0]) ||\n              (commonAncestorContainer === this.element && this.element.childNodes.length === 0))\n            ) {\n              // if the element is empty and the cursor is on the first offset position within the block\n              // let t = document.createTextNode(\"\\u200B\");\n              // let stcEl = stc.nodeType === 3 ? stc.parentNode : stc;\n              // stcEl.insertBefore(t, stcEl[0]);\n              e.preventDefault();\n              return;\n            }\n\n            // // Not sure what this is meant to do...\n            // if (stc.nodeType === 1 && this._isTextBlockElement(stc) && !this.range.startOffset) {\n            //     let t = document.createTextNode('\\u200B');\n            //     stc.insertBefore(t, stc.childNodes[0]);\n            //     this.range = this._adjustSelection({\n            //         node: t,\n            //         position: 0\n            //     });\n            // }\n          }\n\n          return;\n        }\n\n        //  hashtag flag\n        if (key === \"#\" && !this.hashtag_flag) {\n          this.hashtag_flag = true;\n          return;\n        }\n\n        //  url flag\n        if ([\":\", \"/\", \".\"].includes(key) && !this.urllink_flag) {\n          this.urllink_flag = true;\n          return;\n        }\n\n        // insert hashtag | urllink\n        if (\n          (this.hashtag_flag || this.urllink_flag) &&\n          ([\" \", \"ENTER\", \"TAB\"].includes(key) || key.includes(\"ARROW\"))\n        ) {\n          this._replaceText();\n          // return;\n        }\n\n        // when user press shift + arrows to expand the selection range,\n        // this.isRangeDirectionForward is responsible of setting direction to expand\n        // when set to true, the endOffset will change when using shift + arrow\n        if (shift) {\n          if (key === \"PAGEUP\" || key === \"HOME\") {\n            this.isRangeDirectionForward = false;\n            return;\n          }\n\n          if (key === \"PAGEDOWN\" || key === \"END\") {\n            this.isRangeDirectionForward = true;\n            return;\n          }\n        }\n\n        if (key.includes(\"ARROW\")) {\n          this._setArrow(e);\n          return;\n        }\n\n        if (key === \"TAB\") {\n          this.isRangeDirectionForward = true;\n\n          e.preventDefault();\n          let sweep_array = [];\n\n          if (!collapsed) {\n            let sweep = startLine;\n            while (sweep && sweep !== endLine) {\n              sweep_array.push(sweep);\n              sweep = sweep.nextSibling;\n            }\n            sweep_array.push(endLine);\n          }\n\n          if (shift) {\n            // delete indent\n            let hasIndent = false;\n            let diveAndRemoveTab = (n) => {\n              while (n.childNodes[0]) {\n                n = n.childNodes[0];\n\n                while (n.nodeType === 3 && !n.textContent) n = n.nextSibling;\n\n                if (n.nodeType === 3 && n.textContent[0] === \"\\t\") {\n                  hasIndent = true;\n                  n.textContent = n.textContent.substring(1);\n                  break;\n                }\n              }\n            };\n            if (sweep_array.length) {\n              for (let n of sweep_array) {\n                if (n.textContent[0] === \"\\t\") diveAndRemoveTab(n);\n              }\n              if (hasIndent)\n                this._adjustSelection({\n                  node: [startLine, endLine],\n                  position: [true, false],\n                });\n            } else if (startLine.textContent[0] === \"\\t\") {\n              let lineOffset = (line, container, containerOffset) => {\n                if (line === container) return containerOffset;\n\n                this._nodeCrawler(\n                  (n) => {\n                    if (container === n) return \"BREAK\";\n\n                    if (n.nodeType === 3 && n.textContent.length)\n                      containerOffset += n.textContent.length;\n\n                    return n;\n                  },\n                  { node: line }\n                );\n                return containerOffset;\n              };\n\n              let offset =\n                lineOffset(startLine, startContainer, startOffset) - 1;\n              offset = offset < 0 ? 0 : offset;\n\n              diveAndRemoveTab(startLine);\n              if (hasIndent)\n                this._adjustSelection({ node: startLine, position: offset });\n            }\n          } else {\n            // indent\n            if (sweep_array.length) {\n              let hasIndent = false;\n              for (let n of sweep_array) {\n                hasIndent = true;\n                let tab = document.createTextNode(\"\\t\");\n                n.insertBefore(tab, n.childNodes[0]);\n              }\n              if (hasIndent)\n                this._adjustSelection({\n                  node: [startLine, endLine],\n                  position: [true, false],\n                });\n            } else {\n              let tab = document.createTextNode(\"\\t\");\n              this.range.insertNode(tab);\n              this._adjustSelection({ node: tab, position: false });\n            }\n          }\n          return;\n        }\n\n        if (key === \"ENTER\") {\n          //  remove zero space\n          if (\n            collapsed &&\n            (startContainer.textContent.includes(\"\\u200B\") ||\n              !startContainer.textContent)\n          ) {\n            this._nodeCrawler(\n              (n) => {\n                if (\n                  n.nodeType === 3 &&\n                  (n.textContent === \"\\u200B\" || !n.textContent)\n                ) {\n                  n.remove();\n                }\n\n                return n;\n              },\n              {\n                node:\n                  startContainer.nodeType === 3\n                    ? startContainer.parentNode\n                    : startContainer,\n              }\n            );\n          }\n\n          if (endLine.textContent[0] === \"\\t\") {\n            for (let s of endLine.textContent) {\n              if (s === \"\\t\") this.insertTabPending_tabString += \"\\t\";\n              else break;\n            }\n          }\n        }\n\n        this.isRangeDirectionForward = true;\n      });\n    }.bind(this);\n\n    this._normalize = function (e) {\n      e.stopPropagation();\n      this._modifySelection(() => {\n        if (this._isSelectionWithinRestrictedRange()) return;\n        this._normalizeDocument(true);\n        this.range_backup = this.range.cloneRange();\n        this._replaceText(true);\n      });\n    }.bind(this);\n    this._paste = function (e) {\n      e.preventDefault();\n      if (this._isSelectionWithinRestrictedRange()) return;\n      this._modifySelection(() => {\n        if (this.range) {\n          if (this._isSelectionWithinRestrictedRange()) return;\n          let doc = document.createDocumentFragment();\n          doc.textContent = e.clipboardData\n            .getData(\"text/plain\")\n            .replace(/\\n\\n/g, \"\\n\");\n\n          if (doc.textContent.includes(\"#\")) {\n            this.hashtag_flag = true;\n          }\n\n          //  url flag\n          for (let u of [\":\", \"/\", \".\"]) {\n            doc.textContent.includes(u);\n            this.urllink_flag = true;\n          }\n\n          if (!this.range.collapsed) this.range.extractContents();\n          this.range.insertNode(doc);\n        }\n      });\n    }.bind(this);\n    this._keyup = function () {\n      if (this.removeSandwichedLine_array.length)\n        while (this.removeSandwichedLine_array.length)\n          this.removeSandwichedLine_array.pop().remove();\n    }.bind(this);\n\n    document.addEventListener(\"selectionchange\", this._selectionchange);\n    this.element.addEventListener(\"keydown\", this._keydown);\n    this.element.addEventListener(\"mousedown\", this._normalize);\n    // this.element.addEventListener('blur', this._normalize);\n    // fuck safari, firefox\n    window.addEventListener(\"mousedown\", this._normalize);\n    this.element.addEventListener(\"paste\", this._paste);\n    this.element.addEventListener(\"keyup\", this._keyup);\n  }\n\n  _observeMutation(track) {\n    if (this.observer) this.observer.disconnect();\n\n    this.observer = null;\n\n    if (!track) return;\n\n    this.observer = new MutationObserver((mutation_array) => {\n      if (this.logMutation) {\n        let monitor = mutation_array.map((m) => {\n          return {\n            target: m.target.cloneNode(true),\n            type: m.type,\n            name: m.attributeName,\n            added: (() => {\n              let clones = [];\n              for (let a of m.addedNodes) {\n                if (a.nodeType === 3) clones.push(a.textContent);\n                else clones.push(a.cloneNode(true));\n              }\n              return clones;\n            })(),\n            removed: (() => {\n              let clones = [];\n              for (let r of m.removedNodes) {\n                if (r.nodeType === 3) clones.push(r.textContent);\n                else clones.push(r.cloneNode(true));\n              }\n              return clones;\n            })(),\n          };\n        });\n\n        let mutate = [];\n        for (let m of monitor) {\n          if (m.type === \"childList\" || m.attributeName === \"class\")\n            mutate.push(m);\n        }\n\n        if (mutate.length)\n          this._callback({ mutation: mutate }).catch((err) => err);\n      }\n\n      for (const mutation of mutation_array) {\n        /** changes in attributes */\n        if (mutation.type === \"attributes\") {\n          const { target, attributeName } = mutation;\n          if (attributeName === \"class\") {\n            if (\n              target.parentNode &&\n              !target.classList.length &&\n              !(\n                this._isTextBlockElement(target) ||\n                this._isBlockElement(target) ||\n                target.nodeName === \"P\"\n              )\n            ) {\n              // this._unwrapElement(target);\n              this._wrapNode(target);\n            }\n            if (!target.classList.length) target.removeAttribute(\"class\");\n          }\n          //  prevent style attributes\n          if (attributeName === \"style\" && !this._isStyleAllowedElement(target))\n            target.removeAttribute(\"style\");\n          continue;\n        }\n\n        /** changes in node */\n        if (mutation.type === \"childList\") {\n          let mutationTarget = mutation.target;\n\n          /** removed nodes */\n          if (mutation.removedNodes.length) {\n            for (let m of mutation.removedNodes) {\n              /**\n               *  CAUTION!\n               *  changing the order of if statements below can lead to critical flaw\n               *  _custom_ class should always be checked after _urllink_ and _hashtag_\n               */\n\n              let callbackRemoved = (what, m) => {\n                if (!m.id) return;\n\n                let arrIdx = this[`${what}_array`].length;\n                let removed;\n\n                while (arrIdx--) {\n                  let got = this[`${what}_array`][arrIdx];\n                  if (got.elementId === m.id) {\n                    removed = this[`${what}_array`].splice(arrIdx, 1);\n                    break;\n                  }\n                }\n\n                if (removed) {\n                  this._callback({ removed: { [what]: removed } });\n                }\n              };\n\n              if (m?.classList?.contains(\"_media_\")) {\n                let child = m.childNodes;\n                let childIdx = child.length;\n                while (childIdx--) {\n                  let c = child[childIdx];\n                  switch (c.nodeName) {\n                    case \"IMG\":\n                      callbackRemoved(\"image\", c);\n                      break;\n                  }\n                }\n                continue;\n              }\n\n              let toBreak = false;\n              for (let t of [\"hashtag\", \"urllink\", \"custom\"]) {\n                if (m?.id?.includes(t)) {\n                  callbackRemoved(t, m);\n                  toBreak = true;\n                  break;\n                }\n              }\n\n              toBreak = false;\n\n              if (\n                this._isCeilingElement(mutationTarget) &&\n                (() => {\n                  let idx = mutationTarget.childNodes.length;\n                  if (idx)\n                    while (idx--) {\n                      let node = mutationTarget.childNodes[idx];\n                      if (node.nodeType === 1 || node.textContent) {\n                        return false;\n                      }\n                    }\n                  return true;\n                })()\n              ) {\n                mutationTarget.remove();\n                continue;\n              }\n\n              if (\n                this._isTextBlockElement(mutationTarget) &&\n                mutationTarget.childNodes.length === 1 &&\n                this._isUnSelectableElement(mutationTarget.childNodes[0])\n              )\n                mutationTarget.append(document.createTextNode(\"\"));\n            }\n          }\n\n          /** added nodes */\n          if (mutation.addedNodes.length)\n            for (let i of mutation.addedNodes) {\n              let getBr = (n) => {\n                let idx = n?.childNodes?.length;\n                let br = [];\n                while (idx--) {\n                  let c = n.childNodes[idx];\n                  if (c.nodeName === \"BR\") br.push(c);\n                }\n                return br;\n              };\n\n              if (i.nodeType === 3) {\n                // wrap all eldest text node\n                if (this._isCeilingElement(mutationTarget))\n                  this._wrapNode(i, document.createElement(\"p\"));\n                // remove <br> when there is text\n                else if (i.textContent && i.textContent !== \"\\u200B\") {\n                  // prevent br added to line\n                  let br = getBr(mutationTarget);\n                  if (br.length) for (let b of br) b.remove();\n                }\n\n                continue;\n              }\n\n              if (i.nodeType === 1) {\n                let node = (() => {\n                  let isWysiwygChild =\n                    i.closest(`#${this.elementId}`) && i.id !== this.elementId;\n                  let isWysiwygEldestChild = (() => {\n                    if (!isWysiwygChild) return false;\n\n                    return this._isCeilingElement(mutationTarget);\n                  })();\n\n                  let ceiling = (() => {\n                    for (let c of this.ceilingElement_queryArray) {\n                      let clo = i.closest(c);\n                      if (clo) return clo;\n                    }\n                    return null;\n                  })();\n\n                  let line = isWysiwygEldestChild\n                    ? i\n                    : isWysiwygChild &&\n                      (() => {\n                        let m = i;\n                        while (m && !this._isCeilingElement(m.parentNode)) {\n                          m = m.parentNode;\n                        }\n                        return m;\n                      })();\n\n                  return {\n                    isWysiwygChild,\n                    isWysiwygEldestChild,\n                    isMediaElement: i.closest(\"._media_\"),\n                    isBlockQuoteElement: i.closest(\"blockquote\"),\n                    isCustomElement: i.closest(\"._custom_\"),\n                    isHashtagElement: i.closest(\"._hashtag_\"),\n                    isUrlLinkElement: i.closest(\"._urllink_\"),\n                    ceiling,\n                    line,\n                  };\n                })();\n\n                if (!node.isWysiwygChild) continue; // bypass\n\n                if (\n                  node.isCustomElement ||\n                  node.isMediaElement ||\n                  node.isHashtagElement ||\n                  node.isUrlLinkElement\n                ) {\n                  // make sure un-editable element is secure\n                  let el =\n                    node.isCustomElement ||\n                    node.isMediaElement ||\n                    node.isHashtagElement ||\n                    node.isUrlLinkElement;\n\n                  // check if el has a value of contenteditable\n                  if (el.getAttribute(\"contenteditable\") !== \"true\")\n                    el.setAttribute(\"contenteditable\", \"false\");\n\n                  continue;\n                }\n\n                if (\n                  !(\n                    node.isWysiwygEldestChild &&\n                    (this._isBlockElement(i) || this._isTextBlockElement(i))\n                  ) &&\n                  i.nodeName !== \"BR\" &&\n                  !i.classList.length\n                ) {\n                  // unwrap anything that does not have class and is not block level text\n                  this._wrapNode(i);\n                  continue;\n                }\n\n                if (\n                  (() => {\n                    if (this._isStyleAllowedElement(i)) return false;\n\n                    for (let sa of this.restrictedElement_queryArray) {\n                      if (i.closest(sa)) return false;\n                    }\n\n                    return true;\n                  })()\n                )\n                  //  remove style attribute if not allowed\n                  i.removeAttribute(\"style\");\n\n                if (\n                  node.isWysiwygEldestChild &&\n                  !(this._isBlockElement(i) || this._isTextBlockElement(i))\n                ) {\n                  //  wrap eldest non text block element to p\n                  if (i.nodeName === \"BR\") i.remove();\n                  else this._wrapNode(i, document.createElement(\"p\"), true);\n                  continue;\n                }\n\n                if (\n                  mutationTarget.textContent &&\n                  mutationTarget.textContent !== \"\\u200B\"\n                ) {\n                  // prevent br added to line\n                  let br = getBr(mutationTarget);\n                  let doContinue = false;\n                  if (br.length)\n                    for (let b of br) {\n                      if (b === i) doContinue = true;\n                      b.remove();\n                    }\n                  if (doContinue) continue;\n                }\n\n                if (node.isWysiwygEldestChild && !this._isCeilingElement(i)) {\n                  // add tab on new line created by pressing enter\n                  if (this.insertTabPending_tabString) {\n                    let tab = document.createTextNode(\n                      this.insertTabPending_tabString\n                    );\n                    node.line.insertBefore(tab, node.line.childNodes[0]);\n                    this.insertTabPending_tabString = \"\";\n                    this._adjustSelection({ node: tab, position: false });\n                  }\n\n                  // if empty text block is added add br\n                  if (\n                    !node.line.textContent ||\n                    node.line.textContent === \"\\u200B\"\n                  ) {\n                    let addBr = true;\n                    this._nodeCrawler(\n                      (n) => {\n                        if (n.nodeName === \"BR\") {\n                          addBr = false;\n                          return \"BREAK\";\n                        }\n                        return n;\n                      },\n                      { node: node.line }\n                    );\n\n                    if (addBr) node.line.append(document.createElement(\"br\"));\n                  }\n\n                  continue;\n                }\n\n                let classSet = (c) => {\n                  let counter = this.counterTagOf[c] || [];\n\n                  if (counter.length)\n                    counter = counter.concat(\n                      counter.map((m) => {\n                        return m + \"_stop\";\n                      })\n                    );\n\n                  return [\n                    c,\n                    c.includes(\"_stop\") ? c.replace(\"_stop\", \"\") : c + \"_stop\",\n                  ].concat(counter);\n                };\n\n                let toUnwrap = [];\n\n                if (i.classList.length) {\n                  this._climbUpToEldestParent(i, node.ceiling, true, (n) => {\n                    let cIdx = i.classList.length;\n                    while (cIdx--) {\n                      if (\n                        (() => {\n                          let set = classSet(i.classList[cIdx]);\n                          for (let s of set) {\n                            if (n.classList.contains(s)) return true;\n                          }\n                          return false;\n                        })()\n                      )\n                        toUnwrap.push(n);\n                    }\n\n                    return n;\n                  });\n                }\n\n                let idx = toUnwrap.length;\n\n                while (idx--) {\n                  // unwrap unnecessary counter parents\n                  this._wrapNode(toUnwrap[idx]);\n                }\n\n                let class_idx = i.classList.length;\n                while (class_idx--) {\n                  let className = i.classList[class_idx];\n                  let curSt = this._trackStyle(\n                    i,\n                    className.replace(\"_stop\", \"\")\n                  );\n                  let parSt = this._trackStyle(\n                    i.parentNode,\n                    className.replace(\"_stop\", \"\")\n                  );\n\n                  if (curSt === parSt)\n                    // remove style class if parent shares the same style\n                    i.classList.remove(className);\n                }\n\n                if (!i.classList.length) {\n                  // remove style attribute if there is no class\n                  i.removeAttribute(\"class\");\n                }\n\n                if (\n                  this._isTextBlockElement(mutationTarget) &&\n                  mutationTarget.childNodes.length === 1 &&\n                  this._isUnSelectableElement(mutationTarget.childNodes[0])\n                )\n                  mutationTarget.append(document.createTextNode(\"\"));\n              }\n            }\n        }\n      }\n    });\n    this.observer.observe(this.element, {\n      attributes: true,\n      childList: true,\n      subtree: true,\n    });\n  }\n\n  _setArrow(e) {\n    if (this.logExecution) console.log(\"_setArrow\", { e });\n    if (!this.range || !e?.key) return;\n\n    let endContainer,\n      endOffset,\n      startContainer,\n      startOffset,\n      collapsed,\n      startLine,\n      endLine,\n      isAllRangeOnSameLine,\n      currentLine,\n      caratElement,\n      arrowDirection;\n\n    let key = e.key.toUpperCase();\n    let shift = e?.shiftKey || false;\n    let metaKey = e?.ctrlKey || e?.metaKey || false;\n    let rangeSetup = () => {\n      endContainer = this.range?.endContainer;\n      endOffset = this.range?.endOffset;\n      startContainer = this.range?.startContainer;\n      startOffset = this.range?.startOffset;\n      collapsed = this.range?.collapsed;\n      startLine = this.range?.startLine;\n      endLine = this.range?.endLine;\n      isAllRangeOnSameLine = startLine === endLine;\n      currentLine = this.isRangeDirectionForward ? endLine : startLine;\n      caratElement = this.isRangeDirectionForward\n        ? endContainer\n        : startContainer;\n      caratElement =\n        caratElement?.nodeType === 3 ? caratElement?.parentNode : caratElement;\n    };\n\n    let preventDefault = () => {\n      try {\n        e.preventDefault();\n      } catch (err) {}\n    };\n\n    let removeZeroSpace = () => {\n      let targetContainer = this.isRangeDirectionForward\n        ? endContainer\n        : startContainer;\n      let nudged = false;\n\n      if (\n        collapsed &&\n        (targetContainer.textContent.includes(\"\\u200B\") ||\n          !targetContainer.textContent)\n      ) {\n        this._nodeCrawler(\n          (n) => {\n            if (\n              n.nodeType === 3 &&\n              (n.textContent === \"\\u200B\" || !n.textContent)\n            ) {\n              let r = n.nextSibling || n.parentNode;\n              let siblingDirection = this.isRangeDirectionForward\n                ? \"nextSibling\"\n                : \"previousSibling\";\n\n              if (\n                n === targetContainer ||\n                (() => {\n                  // fuck safari\n                  if (targetContainer.nodeType === 1) {\n                    let idx = targetContainer.childNodes.length;\n                    while (idx--) {\n                      if (targetContainer.childNodes[idx] === n) return true;\n                    }\n                    return false;\n                  }\n                })()\n              ) {\n                let run = r;\n                if (run.nodeType === 1 && n.parentNode === run) {\n                  if (run[siblingDirection]) nudged = run[siblingDirection];\n                } else nudged = r;\n\n                n.remove();\n\n                this.range = this._adjustSelection({\n                  node: !collapsed\n                    ? this.isRangeDirectionForward\n                      ? [null, nudged || r]\n                      : [nudged || r, null]\n                    : nudged,\n                  position: !collapsed\n                    ? this.isRangeDirectionForward\n                      ? [null, nudged]\n                      : [!nudged, null]\n                    : this.isRangeDirectionForward,\n                });\n\n                rangeSetup();\n                preventDefault();\n                return \"BREAK\";\n              }\n            }\n            return n;\n          },\n          { node: targetContainer }\n        );\n      }\n      return !!nudged;\n    };\n\n    let isCaratOnMultiLine = (el) => {\n      // check if carat is on the first / last line of multi wrapped line\n\n      let posTarget = arrowDirection === \"DOWN\" ? \"bottom\" : \"top\";\n      let caratViewPortPosition = this.range.getBoundingClientRect();\n      let elPosition = el.getBoundingClientRect()[posTarget];\n      let phoneTextSize = parseInt(\n        this.fontSizeCssVariable[\"--wysiwyg-font-phone\"]\n      );\n\n      if (caratViewPortPosition.height) {\n        let isLastLine =\n          (posTarget === \"bottom\"\n            ? elPosition - caratViewPortPosition[posTarget]\n            : caratViewPortPosition[posTarget] - elPosition) < phoneTextSize;\n        return !isLastLine;\n      }\n\n      return false;\n    };\n\n    let nudgeRangeToInlineElement = () => {\n      let rem = removeZeroSpace();\n\n      if (\n        !rem &&\n        window.getComputedStyle(caratElement).display === \"inline-block\"\n      ) {\n        let _caratElement =\n          caratElement.nodeType === 3 ? caratElement.parentNode : caratElement;\n        while (\n          window.getComputedStyle(_caratElement).display === \"inline-block\"\n        ) {\n          _caratElement = _caratElement.parentNode;\n        }\n\n        let siblingDirection =\n          arrowDirection === \"UP\" ? \"previousSibling\" : \"nextSibling\";\n        let nextEl = _caratElement[siblingDirection];\n\n        if (!nextEl) {\n          let t = document.createTextNode(\"\");\n          _caratElement.parentNode.insertBefore(\n            t,\n            siblingDirection === \"previousSibling\" ? _caratElement : nextEl\n          );\n        }\n\n        _caratElement = _caratElement[siblingDirection];\n\n        if (_caratElement) {\n          let setDirection = (() => {\n            return arrowDirection === \"DOWN\";\n          })();\n\n          this.range = this._adjustSelection({\n            node: shift\n              ? this.isRangeDirectionForward\n                ? [null, _caratElement]\n                : [_caratElement, null]\n              : _caratElement,\n            position: shift\n              ? this.isRangeDirectionForward\n                ? [null, setDirection]\n                : [setDirection, null]\n              : setDirection,\n          });\n\n          rangeSetup();\n\n          return true;\n        }\n      }\n      return false;\n    };\n\n    rangeSetup();\n\n    switch (key) {\n      case \"ARROWLEFT\":\n        arrowDirection = \"LEFT\";\n      case \"ARROWRIGHT\":\n        arrowDirection = arrowDirection || \"RIGHT\";\n\n        if (metaKey || (collapsed && shift)) {\n          this.isRangeDirectionForward = arrowDirection === \"RIGHT\";\n          rangeSetup();\n        }\n\n        let caratOnSingleLine = !isCaratOnMultiLine(caratElement);\n\n        let nudged;\n        if (caratOnSingleLine) {\n          if (metaKey && arrowDirection === \"RIGHT\")\n            nudged = nudgeRangeToInlineElement();\n        }\n\n        if (!nudged) removeZeroSpace();\n\n        break;\n\n      case \"ARROWUP\":\n        arrowDirection = \"UP\";\n      case \"ARROWDOWN\":\n        arrowDirection = arrowDirection || \"DOWN\";\n\n        if (!collapsed && !shift) {\n          preventDefault();\n          let adj =\n            arrowDirection === \"UP\"\n              ? [startContainer, startOffset]\n              : [endContainer, endOffset];\n          this.range = this._adjustSelection({\n            node: adj[0],\n            position: adj[1],\n          });\n          break;\n        }\n\n        if (collapsed || isAllRangeOnSameLine) {\n          this.isRangeDirectionForward = arrowDirection === \"DOWN\";\n          rangeSetup();\n        }\n\n        if (isCaratOnMultiLine(caratElement)) break;\n\n        let iNudged = nudgeRangeToInlineElement();\n\n        if (iNudged) break;\n        else removeZeroSpace();\n\n        let isMultiLine = isCaratOnMultiLine(currentLine);\n        if (isMultiLine) break;\n\n        let eldestParentOfCurrentLine = this._climbUpToEldestParent(\n          currentLine,\n          this.element\n        );\n\n        let isCurrentLineInsideSubCeiling =\n          eldestParentOfCurrentLine.id !== this.elementId &&\n          this._isCeilingElement(eldestParentOfCurrentLine);\n\n        // break out if current line is inside the sub ceiling and it's not on the last line\n        if (\n          isCurrentLineInsideSubCeiling &&\n          ((arrowDirection === \"UP\" &&\n            eldestParentOfCurrentLine.firstChild !== currentLine) ||\n            (arrowDirection === \"DOWN\" &&\n              eldestParentOfCurrentLine.lastChild !== currentLine))\n        )\n          break;\n\n        let siblingSet = [\n          isCurrentLineInsideSubCeiling\n            ? eldestParentOfCurrentLine.previousSibling\n            : currentLine.previousSibling,\n          isCurrentLineInsideSubCeiling\n            ? eldestParentOfCurrentLine.nextSibling\n            : currentLine.nextSibling,\n        ];\n\n        if (arrowDirection === \"UP\") siblingSet.reverse();\n\n        let [backwardNode, forwardNode] = siblingSet;\n\n        // if current line is on last line of sub ceiling set forward node to sub ceiling\n        let _forwardNode = isCurrentLineInsideSubCeiling\n          ? eldestParentOfCurrentLine\n          : forwardNode;\n        if (_forwardNode) {\n          if (this._isBlockElement(_forwardNode) && !shift) {\n            preventDefault();\n\n            let leap =\n              arrowDirection === \"UP\"\n                ? _forwardNode.previousSibling\n                : _forwardNode.nextSibling;\n\n            if (!leap || this._isBlockElement(leap)) {\n              let p = this._createEmptyParagraph();\n              _forwardNode.parentNode.insertBefore(\n                p,\n                arrowDirection === \"UP\" ? _forwardNode : leap\n              );\n              _forwardNode = p;\n            } else _forwardNode = leap;\n\n            this.range = this._adjustSelection({\n              node: _forwardNode,\n              position: arrowDirection === \"DOWN\",\n            });\n\n            if (\n              !shift &&\n              !currentLine.textContent &&\n              (this._isBlockElement(backwardNode) ||\n                (!backwardNode && currentLine === this.element.firstChild))\n            )\n              this.removeSandwichedLine_array.push(currentLine);\n          } else if (!isMultiLine && arrowDirection === \"DOWN\") {\n            preventDefault();\n            let collectOffset = 0;\n            let currentOffset = this.isRangeDirectionForward\n              ? endOffset\n              : startOffset;\n            this._nodeCrawler(\n              (n) => {\n                if (n === endContainer) return \"BREAK\";\n                else if (n.nodeType === 3 && n.textContent)\n                  collectOffset += n.textContent.length;\n                return n;\n              },\n              {\n                node: currentLine,\n              }\n            );\n            collectOffset += currentOffset;\n            this.range = this._adjustSelection({\n              node: collapsed\n                ? forwardNode\n                : this.isRangeDirectionForward\n                ? [null, forwardNode]\n                : [forwardNode, null],\n              position: collapsed\n                ? collectOffset\n                : this.isRangeDirectionForward\n                ? [null, collectOffset]\n                : [collectOffset, null],\n            });\n          }\n        } else preventDefault();\n    }\n  }\n\n  _append(i, insertAfter, wrap = false, focusElement) {\n    if (this.logExecution)\n      console.log(\"_append\", { i, insertAfter, wrap, focusElement });\n    let common = this._climbUpToEldestParent(\n      this.range.commonAncestorContainer,\n      this.element\n    );\n    let [startLine, endLine] = this._getStartEndLine();\n    // let startLine = this._climbUpToEldestParent(this.range.startContainer, this.element);\n    // let endLine = this._climbUpToEldestParent(this.range.endContainer, this.element);\n    let insertRestricted = [\"HR\", \"UL\", \"LI\", \"._media_\", \"._custom_\"];\n\n    let append = (node) => {\n      if (node === this.element)\n        node = this.element.childNodes[this.element.childNodes.length - 1];\n\n      let next = node.nextSibling;\n      if (insertAfter) node.parentNode.insertBefore(insertAfter, next);\n\n      node.parentNode.insertBefore(i, insertAfter || next);\n      if (\n        this._isTextElement(node) &&\n        !node.textContent &&\n        this.element.lastChild !== node\n      )\n        node.remove();\n    };\n\n    if (wrap) {\n      let nodeToUnwrap = {};\n      let restricted = false;\n\n      let checker = (tag, el) => {\n        if (\n          el &&\n          (!nodeToUnwrap[tag] ||\n            (() => {\n              for (let u in nodeToUnwrap) {\n                if (nodeToUnwrap[u] === el) return false;\n              }\n              return true;\n            })())\n        )\n          nodeToUnwrap[tag] = el;\n      };\n\n      if (this.range.collapsed) {\n        checker(i.nodeName, startLine.closest(i.nodeName));\n\n        let idx = i.classList.length;\n        while (idx--) {\n          let className = i.classList[idx];\n          checker(className, startLine.closest(\".\" + className));\n        }\n      } else\n        this._nodeCrawler(\n          (n) => {\n            let chk = n.nodeType === 3 ? n.parentNode : n;\n            if (chk.nodeType !== 1) {\n              restricted = true;\n              return \"BREAK\";\n            }\n\n            if (n.nodeType === 1) {\n              for (let notAllowed of insertRestricted)\n                if (n.nodeName === notAllowed || n.closest(notAllowed)) {\n                  restricted = true;\n                  return \"BREAK\";\n                }\n            }\n\n            checker(i.nodeName, chk.closest(i.nodeName));\n\n            let idx = i.classList.length;\n            while (idx--) {\n              let className = i.classList[idx];\n              checker(className, chk.closest(\".\" + className));\n            }\n\n            if (n === this.range.endContainer) return \"BREAK\";\n\n            return n;\n          },\n          { node: common, startNode: this.range.startContainer }\n        );\n\n      if (restricted) return;\n\n      if (Object.keys(nodeToUnwrap).length) {\n        for (let u in nodeToUnwrap) this._wrapNode(nodeToUnwrap[u]);\n      } else {\n        append(endLine);\n\n        let extract = this.range.extractContents();\n\n        if (extract.childNodes[0]) {\n          while (extract.childNodes[0]) {\n            let t = extract.childNodes[0];\n            if (!t.textContent) t.remove();\n            else i.append(t);\n          }\n        } else i.append(this._createEmptyParagraph());\n\n        this.range = this._adjustSelection({\n          node: focusElement || i,\n          position: false,\n        });\n\n        //  remove garbage node\n        let fc = i.previousSibling;\n        // let lc = i.nextSibling;\n\n        if (fc) {\n          fc = fc.nodeType === 3 ? fc.parentNode : fc;\n\n          if (\n            this._isTextElement(fc) &&\n            (!fc.textContent || fc.textContent === \"\\u200B\")\n          )\n            fc.remove();\n        }\n      }\n\n      return;\n    }\n\n    for (let r of insertRestricted) {\n      if (endLine.closest(r)) endLine = endLine.closest(r);\n    }\n\n    append(endLine);\n\n    if (insertAfter)\n      this.range = this._adjustSelection({ node: focusElement || insertAfter });\n  }\n\n  async _callback(data) {\n    if (typeof this.callback === \"function\") {\n      let cb = this.callback(data) || data;\n      if (cb instanceof Promise) {\n        cb = await cb;\n      }\n      return cb || data;\n    }\n    return data;\n  }\n\n  async _imageSelected(e) {\n    if (this.logExecution) console.log(\"_imageSelected\", { e });\n    let files = e.target.files;\n\n    const prepareForCallback = { image: [] };\n    let readFile = new FileReader();\n\n    const load = (file) => {\n      return new Promise((res) => {\n        readFile.onload = (f) => {\n          const { lastModified, name, size, type } = file;\n          const source = f.target.result;\n\n          let img = new Image();\n          img.onload = () => {\n            res({\n              dimension: {\n                width: img.width,\n                height: img.height,\n              },\n              lastModified,\n              filename: name,\n              fileSize: size,\n              fileType: type,\n              source,\n              elementId: this._generateId(\"img\"),\n            });\n          };\n          img.src = source;\n        };\n        readFile.readAsDataURL(file);\n      });\n    };\n\n    this.callback({ loading: true });\n    for (let idx = 0; files.length > idx; idx++) {\n      prepareForCallback.image[idx] = await load(files[idx]);\n    }\n    this.callback({ loading: false });\n\n    //  reset image input\n    this.imgInput.value = \"\";\n\n    let feedback = await this._callback(prepareForCallback);\n\n    if (!this.range) {\n      this.restoreLastSelection();\n    }\n    if (\n      !this.range ||\n      (() => {\n        let c = this.range.commonAncestorContainer;\n        c = c.nodeType === 3 ? c.parentNode : c;\n        return !c.closest(\"#\" + this.elementId);\n      })()\n    )\n      this.element.focus();\n\n    this._modifySelection(() => {\n      for (let img of feedback.image) {\n        let media = this._loadImage(img, document.createElement(\"div\"));\n        this._append(media, this._createEmptyParagraph());\n      }\n    });\n  }\n\n  _loadImage(imageObject, wrapper) {\n    if (this.logExecution) console.log(\"_loadImage\", { imageObject, wrapper });\n    /**\n         elementId: \"img_uniqueId\"\n         element: HTML\n         fileSize: 0\n         fileType: \"image/jpeg\"\n         source: \"file.jpg | http://url.com/file.jpg | s3 filename | base 64 string\"\n         lastModified: 0000000000000\n         filename: \"selectedLocalFilename.jpg\"\n         */\n\n    if (wrapper instanceof Node) {\n      if (!wrapper.classList.contains(\"_media_\"))\n        wrapper.classList.add(\"_media_\");\n\n      if (wrapper.getAttribute(\"contenteditable\") !== \"false\")\n        wrapper.setAttribute(\"contenteditable\", \"false\");\n    } else throw \"image needs _media_ wrapper\";\n\n    let process = (i) => {\n      let image = i?.element instanceof Node ? i.element : null;\n\n      if (image) {\n        if (image.id) i.elementId = image.id;\n        else image.id = i.elementId;\n      }\n\n      if (!image) {\n        image = document.createElement(\"img\");\n        i.element = image;\n\n        let classname =\n          \"_img_\" +\n          i.source\n            .substring(i.source.length - 128)\n            .replace(/[/:.\"'\\\\@#$%\\?= \\{\\}\\|&*`!<>+]/g, \"\");\n        if (image.classList.contains(classname)) image.classList.add(classname);\n\n        if (Array.isArray(i.class)) {\n          for (let cl of i.class) image.classList.add(cl);\n        }\n\n        if (image.tagName === \"IMG\") image.setAttribute(\"src\", i.source);\n\n        if (typeof i.onclick === \"function\") {\n          image.addEventListener(\"click\", i.onclick);\n          image.classList.add(\"_hover_\");\n        }\n\n        if (\n          i.style &&\n          typeof i.style === \"object\" &&\n          Object.keys(i.style).length\n        ) {\n          for (let st in i.style) {\n            wrapper.style.setProperty(st, i.style[st]);\n          }\n        }\n      }\n\n      wrapper.setAttribute(\"contenteditable\", \"false\");\n      wrapper.append(image);\n\n      let pushArray = true;\n\n      for (let chk of this.image_array)\n        if (chk.elementId === i.elementId) {\n          pushArray = false;\n          break;\n        }\n\n      if (pushArray) this.image_array.push(i);\n    };\n\n    process(imageObject);\n\n    return wrapper;\n  }\n\n  _getAnchorOffsetFromLine(line) {\n    const sel = window.getSelection();\n    if (!sel || !sel.anchorNode) return 0;\n\n    let anchorNode = sel.anchorNode;\n    let anchorOffset = sel.anchorOffset;\n\n    // If anchorNode is not inside line, return 0\n    if (!line.contains(anchorNode) && line !== anchorNode) return 0;\n\n    let offset = 0;\n    let found = false;\n\n    function traverse(node) {\n      if (found) return;\n      if (node === anchorNode) {\n        offset += anchorOffset;\n        found = true;\n        return;\n      }\n      if (node.nodeType === 3) {\n        offset += node.textContent.length;\n      } else {\n        for (let child of node.childNodes) {\n          traverse(child);\n          if (found) break;\n        }\n      }\n    }\n\n    traverse(line);\n    return offset;\n  }\n  _getFocusOffsetFromLine(line) {\n    const sel = window.getSelection();\n    if (!sel || !sel.focusNode) return 0;\n\n    let focusNode = sel.focusNode;\n    let focusOffset = sel.focusOffset;\n\n    // If focusNode is not inside line, return 0\n    if (!line.contains(focusNode) && line !== focusNode) return 0;\n\n    let offset = 0;\n    let found = false;\n\n    function traverse(node) {\n      if (found) return;\n      if (node === focusNode) {\n        offset += focusOffset;\n        found = true;\n        return;\n      }\n      if (node.nodeType === 3) {\n        offset += node.textContent.length;\n      } else {\n        for (let child of node.childNodes) {\n          traverse(child);\n          if (found) break;\n        }\n      }\n    }\n\n    traverse(line);\n    return offset;\n  }\n  _modifySelection(run, lineByLine) {\n    if (this.logExecution) console.log(\"_modifySelection\", { run });\n    let sel = window.getSelection();\n    let doSingleLine = (sel) => {\n      let anchorElement =\n        sel.anchorNode?.nodeType === 3\n          ? sel.anchorNode.parentNode\n          : sel.anchorNode;\n      if (anchorElement && anchorElement.closest(`#${this.elementId}`)) {\n        if (anchorElement.id === this.elementId) {\n          // In case selection is the wysiwyg element itself\n          let lastChild = this.element.lastChild;\n          if (!lastChild) {\n            // Wysiwyg is empty\n            lastChild = this._createEmptyParagraph();\n            this.element.appendChild(lastChild);\n\n            // Adjust selection\n            this.range = this._adjustSelection({\n              node: lastChild,\n              position: true,\n            });\n          }\n        } else this.range = this._adjustSelection(null);\n\n        if (typeof run === \"function\") run();\n        return;\n      }\n    };\n\n    // if (lineByLine) { // TODO: line by line\n    //   let [startLine, endLine, inBetween] = this._getStartEndLine(\n    //     this.range,\n    //     this.element,\n    //     true\n    //   );\n\n    //   if (this.logExecution) console.log({ startLine, endLine, inBetween });\n\n    //   if (startLine === endLine) {\n    //     return doSingleLine(sel);\n    //   } else {\n    //     this.range_backup = this.range.cloneRange();\n    //     this.range = this._adjustSelection({\n    //       node: startLine,\n    //       position: [this._getAnchorOffsetFromLine(startLine), false],\n    //     });\n    //     if (typeof run === \"function\") run();\n\n    //     if (inBetween?.length) {\n    //       for (let i of inBetween) {\n    //         this.range = this._adjustSelection({\n    //           node: inBetween[i],\n    //           position: [true, false],\n    //         });\n\n    //         if (typeof run === \"function\") run();\n    //       }\n    //     }\n\n    //     this.range = this._adjustSelection({\n    //       node: endLine,\n    //       position: [true, this._getFocusOffsetFromLine(endLine)],\n    //     });\n\n    //     if (typeof run === \"function\") run();\n\n    //     this.restoreLastSelection();\n    //     return;\n    //   }\n    // } else if (sel) {\n    return doSingleLine(sel);\n    // }\n\n    this.range = null;\n    this.commandTracker = {};\n  }\n\n  _normalizeDocument(normalize) {\n    if (this.logExecution) console.log(\"_normalizeDocument\", { normalize });\n    if (!normalize) return;\n\n    this._nodeCrawler(\n      (n) => {\n        if (n.nodeType === 3 && n.textContent.includes(\"\\u200B\")) {\n          //!n.textContent ||\n          n.textContent = n.textContent.replace(\"\\u200B\", \"\");\n\n          if (!n.textContent) {\n            let cel;\n            for (let c of this.ceilingElement_queryArray)\n              if (n.parentNode.closest(c)) {\n                cel = n.parentNode.closest(c);\n                break;\n              }\n\n            let el = this._climbUpToEldestParent(n, cel, true);\n\n            let par = el.parentNode;\n            if (\n              !this._isCeilingElement(par) &&\n              !el.textContent &&\n              this.element.lastChild !== el\n            ) {\n              par.removeChild(el);\n              n = par;\n            }\n            return n;\n          }\n        } else if (n.nodeType === 1) n.normalize();\n\n        return n;\n      },\n      { node: this.element }\n    );\n  }\n\n  _replaceText(wholeDocument = false) {\n    if (this.logExecution) console.log(\"_replaceText\", { wholeDocument });\n    const process = (typeName, setData) => {\n      if (!this[typeName]) return;\n\n      let regex = this[`${typeName}_regex`] || null;\n\n      if (regex === null) throw new Error(\"no regex to process\");\n\n      if (typeof setData !== \"function\")\n        throw new Error(\"setData should be returning function\");\n\n      let node = wholeDocument\n        ? this.element\n        : this.range?.commonAncestorContainer;\n\n      if (!node) return;\n\n      if (node.nodeType === 3) node = node.parentNode;\n\n      let res = (() => {\n        let className = `_${typeName}_`;\n        let element = [];\n        let collected = [];\n\n        let textNodes = [];\n        this._nodeCrawler(\n          (n) => {\n            if (n.nodeType === 3 && n.textContent) {\n              if (\n                n.nextSibling?.nodeType === 3 &&\n                n.nextSibling.textContent &&\n                n.nextSibling.textContent !== \"\\u200B\"\n              ) {\n                let par = n.parentNode;\n                par.normalize();\n                n = par;\n              } else if (\n                n.textContent !== \"\\u200B\" &&\n                !n.parentNode.closest(\".\" + className)\n              )\n                textNodes.push(n);\n            }\n\n            return n;\n          },\n          { node }\n        );\n\n        textNodes.forEach((node) => {\n          replaceTextNode(node, regex, function (matched) {\n            if (matched.length > 1) {\n              return {\n                name: \"span\",\n                attrs: { class: `${className} ${className}${matched}` },\n                content: matched,\n              };\n            }\n          });\n        });\n\n        function replaceTextNode(node, regex, handler) {\n          let par = node.parentNode,\n            nxt = node.nextSibling,\n            doc = node.ownerDocument,\n            hits;\n\n          if (regex.global) {\n            while (node && (hits = regex.exec(node.nodeValue))) {\n              regex.lastIndex = 0;\n              node = handleResult(node, hits, handler.apply(this, hits));\n            }\n          } else if ((hits = regex.exec(node.nodeValue)))\n            handleResult(node, hits, handler.apply(this, hits));\n\n          function handleResult(node, hits, results) {\n            let orig = node.nodeValue;\n            node.nodeValue = orig.slice(0, hits.index);\n            [].concat(create(par, results)).forEach(function (n) {\n              let res = par.insertBefore(n, nxt);\n              element.push(res);\n            });\n            let rest = orig.slice(hits.index + hits[0].length);\n            if (rest) {\n              let text = doc.createTextNode(rest);\n              return par.insertBefore(text, nxt);\n            }\n          }\n\n          function create(el, o) {\n            if (o.map)\n              return o.map(function (v) {\n                return create(el, v);\n              });\n            else if (typeof o === \"object\") {\n              let e = doc.createElementNS(\n                o.namespaceURI || el.namespaceURI,\n                o.name\n              );\n              if (o.attrs) for (let a in o.attrs) e.setAttribute(a, o.attrs[a]);\n              if (o.content)\n                [].concat(create(e, o.content)).forEach(e.appendChild, e);\n              if (typeof o.content === \"string\") collected.push(o.content);\n              e.contentEditable = \"false\";\n              return e;\n            } else return doc.createTextNode(o + \"\");\n          }\n        }\n\n        let anchorText;\n        if (element.length) {\n          for (let el of element) {\n            anchorText = node.ownerDocument.createTextNode(\"\");\n            el.parentNode.insertBefore(anchorText, el.nextSibling);\n          }\n        }\n        return { collected, element, anchorText };\n      })();\n\n      let textEl = res.element;\n\n      if (!wholeDocument) {\n        this.range = this._adjustSelection({\n          node: res.anchorText,\n          position: false,\n        });\n      }\n\n      let toCallback = [];\n      let collectId = [];\n\n      if (textEl[0])\n        for (let el of textEl) {\n          let elementId = this._generateId(typeName);\n          el.setAttribute(\"id\", elementId);\n          let tc = setData(el) || {};\n          tc.elementId = el.id;\n          tc.element = el;\n\n          el.removeAttribute(\"style\");\n          collectId.push(el.id);\n          toCallback.push(tc);\n        }\n\n      if (toCallback.length) {\n        this._callback({ [typeName]: toCallback })\n          .then((e) => {\n            for (let idx = 0; collectId.length > idx; idx++) {\n              //  elementId is read only\n              e[typeName][idx].elementId = collectId[idx];\n            }\n\n            if (Array.isArray(e[typeName]) && e[typeName].length)\n              for (let h of e[typeName]) {\n                let dom = document.getElementById(h.elementId);\n\n                dom.setAttribute(\"id\", h.elementId);\n                dom.setAttribute(\"contenteditable\", \"false\");\n\n                if (typeof h.onclick === \"function\") {\n                  dom.addEventListener(\"click\", h.onclick);\n                  dom.classList.add(\"_hover_\");\n                }\n\n                if (\n                  h.style &&\n                  typeof h.style === \"object\" &&\n                  Object.keys(h.style).length\n                ) {\n                  for (let s in h.style) dom.style.setProperty(s, h.style[s]);\n                }\n\n                this[`${typeName}_array`].push(h);\n              }\n          })\n          .catch((err) => {\n            console.error(err);\n          });\n      }\n    };\n\n    if (this.urllink_flag) {\n      process(\"urllink\", (url) => {\n        let u = url.textContent;\n        url.addEventListener(\"click\", function () {\n          if (!u.match(/^https?:\\/\\//i)) {\n            u = \"http://\" + u;\n          }\n          window.open(u, \"_blank\");\n        });\n\n        return { url: u };\n      });\n    }\n\n    if (this.hashtag_flag) {\n      process(\"hashtag\", (tag) => {\n        let t = tag.textContent;\n        return { tag: t[0] === \"#\" ? t.substring(1) : t };\n      });\n    }\n\n    this.hashtag_flag = false;\n    this.urllink_flag = false;\n  }\n\n  _checkElement(node, chkArr, closest, exp) {\n    /**\n     * parentNode when node is a text node\n     * chkArr is an array of class names or tag names\n     * closest is a boolean to check if the element is closest to the node\n     */\n    if (this.logExecution)\n      console.log(\"_checkElement\", { node, chkArr, closest, exp });\n    if (node && node.nodeType === 1)\n      for (let c of chkArr) {\n        if (closest) {\n          let clo = node.closest(c);\n          if (clo) {\n            if (exp && exp[c]) {\n              if (c === \"._custom_\") {\n                let flyup = node;\n                let gotTheMatch = false;\n                if (node !== this.element) {\n                  while ((flyup && this.element !== flyup) || !gotTheMatch) {\n                    gotTheMatch =\n                      flyup.getAttribute(exp[c].attr) === exp[c].value;\n                    if (gotTheMatch) return false;\n\n                    flyup = flyup.parentNode;\n                  }\n                }\n              } else\n                return clo.getAttribute(exp[c].attr) === exp[c].value\n                  ? false\n                  : clo;\n            }\n\n            return clo;\n          }\n        } else if (\n          c[0] === \"#\"\n            ? node.id === c.substring(1)\n            : c[0] === \".\"\n            ? node.classList.contains(c.substring(1))\n            : node.nodeName === c\n        )\n          return true;\n      }\n    return false;\n  }\n\n  _isUnSelectableElement(node) {\n    if (this.logExecution) console.log(\"_isUnSelectableElement\", { node });\n    node = node?.nodeType === 3 ? node.parentNode : node;\n    let exceptions = {\n      \"._custom_\": { attr: \"contenteditable\", value: \"true\" },\n    };\n    return this._checkElement(\n      node,\n      this.unSelectable_queryArray,\n      true,\n      exceptions\n    );\n  }\n\n  _isStyleAllowedElement(node) {\n    if (this.logExecution) console.log(\"_isStyleAllowedElement\", { node });\n    return this._checkElement(node, this.styleAllowedElement_queryArray);\n  }\n\n  _isCeilingElement(node) {\n    if (this.logExecution) console.log(\"_isCeilingElement\", { node });\n    return this._checkElement(node, this.ceilingElement_queryArray);\n  }\n\n  _isBlockElement(node) {\n    if (this.logExecution) console.log(\"_isBlockElement\", { node });\n    return this._checkElement(node, this.blockElement_queryArray);\n  }\n\n  _isTextAreaElement(node) {\n    if (this.logExecution) console.log(\"_isTextAreaElement\", { node });\n    return this._checkElement(node, this.textAreaElement_queryArray);\n  }\n\n  _isTextBlockElement(node) {\n    if (this.logExecution) console.log(\"_isTextBlockElement\", { node });\n    node = node?.nodeType === 3 ? node.parentNode : node;\n    return this._checkElement(node, this.textBlockElement_queryArray);\n  }\n\n  _isSpecialTextElement(node) {\n    if (this.logExecution) console.log(\"_isSpecialTextElement\", { node });\n    node = node?.nodeType === 3 ? node.parentNode : node;\n    return this._checkElement(node, this.specialTextElement_queryArray);\n  }\n\n  _isTextElement(node) {\n    if (this.logExecution) console.log(\"_isTextElement\", { node });\n    node = node?.nodeType === 3 ? node.parentNode : node;\n    return (\n      (this._isTextBlockElement(node) || node.nodeName === \"SPAN\") &&\n      !this._isSpecialTextElement(node)\n    );\n  }\n\n  /**\n   * List of command for editing wysiwyg text.\n   * @param {'quote'} action - Add blockquote below selected line.\n   * @also\n   * @param {'unorderedList'} action - Add unordered list below selected line.\n   * @also\n   * @param {'orderedList'} action - Add ordered list below selected line.\n   * @also\n   * @param {'divider'} action - Add HR below selected line.\n   * @also\n   * @param {'image'} action - Add image below selected line.\n   * @also\n   * @param {'alignLeft'} action - Align selected line to left.\n   * @also\n   * @param {'alignCenter'} action - Align selected line to center.\n   * @also\n   * @param {'alignRight'} action - Align selected line to right.\n   * @also\n   * @param {'color' | 'hex | rgb string | hsl string'} action - Apply color to selected text. If 'color' is given, the default focus color is applied to the text.\n   * @also\n   * @param {'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'small' | 'bold' | 'italic' | 'underline' | 'strike'} action - Apply style to selection.\n   * @also\n   * @param {object} action - Custom element object\n   * @param {object | string} action.element - Custom element can be node objects | html string | string\n   * @param {string} action.elementId - Set custom elements parent id. Otherwise auto generated\n   * @param {object} action.style - Set custom elements parent css style\n   * @param {boolean} action.insert - Set custom element insert mode. If true, inserts element at carat position, otherwise appends on next line\n   */\n  command(action) {\n    if (!action) return;\n\n    if (!this.range) this.restoreLastSelection();\n\n    switch (action) {\n      case \"quote\":\n        if (\n          !this.range ||\n          (() => {\n            let c = this.range.commonAncestorContainer;\n            c = c.nodeType === 3 ? c.parentNode : c;\n            return !c.closest(\"#\" + this.elementId);\n          })()\n        )\n          this.element.focus();\n\n        this._modifySelection(() => {\n          let p = this._createEmptyParagraph(),\n            bq = document.createElement(\"blockquote\");\n          this._append(bq, p, true);\n        });\n        return;\n      case \"unorderedList\":\n        if (\n          !this.range ||\n          (() => {\n            let c = this.range.commonAncestorContainer;\n            c = c.nodeType === 3 ? c.parentNode : c;\n            return !c.closest(\"#\" + this.elementId);\n          })()\n        )\n          this.element.focus();\n\n        this._modifySelection(() => {\n          let p = this._createEmptyParagraph(),\n            li = document.createElement(\"li\"),\n            ul = document.createElement(\"ul\");\n          ul.append(li);\n          this._append(ul, p, false, li);\n        });\n\n        return;\n      case \"orderedList\":\n        if (\n          !this.range ||\n          (() => {\n            let c = this.range.commonAncestorContainer;\n            c = c.nodeType === 3 ? c.parentNode : c;\n            return !c.closest(\"#\" + this.elementId);\n          })()\n        )\n          this.element.focus();\n\n        this._modifySelection(() => {\n          let p = this._createEmptyParagraph(),\n            li = document.createElement(\"li\"),\n            ul = document.createElement(\"ol\");\n          ul.append(li);\n          this._append(ul, p, false, li);\n        });\n\n        return;\n      case \"divider\":\n        if (\n          !this.range ||\n          (() => {\n            let c = this.range.commonAncestorContainer;\n            c = c.nodeType === 3 ? c.parentNode : c;\n            return !c.closest(\"#\" + this.elementId);\n          })()\n        )\n          this.element.focus();\n\n        this._modifySelection(() => {\n          let p = this._createEmptyParagraph(),\n            hr = document.createElement(\"hr\");\n          hr.setAttribute(\"contenteditable\", \"false\");\n          this._append(hr, p, false);\n        });\n        return;\n      case \"image\":\n        this.imgInput.click();\n        return;\n      case \"alignLeft\":\n      case \"alignCenter\":\n      case \"alignRight\":\n        if (!this.range) return;\n\n        this._modifySelection(() => {\n          let startLine = this.range.startLine;\n          let endLine = this.range.endLine;\n\n          let collectLines = [];\n          collectLines.push(startLine);\n\n          while (collectLines[collectLines.length - 1] !== endLine) {\n            let nextLine = collectLines[collectLines.length - 1].nextSibling;\n\n            while (nextLine && !this._isTextBlockElement(nextLine)) {\n              if (\n                this._isCeilingElement(nextLine) &&\n                nextLine.firstChild &&\n                this._isTextBlockElement(nextLine.firstChild)\n              ) {\n                nextLine = nextLine.firstChild;\n                break;\n              }\n              nextLine = nextLine.nextSibling;\n            }\n\n            if (\n              !nextLine &&\n              this._isCeilingElement(\n                collectLines[collectLines.length - 1].parentNode\n              )\n            )\n              nextLine =\n                collectLines[collectLines.length - 1].parentNode.nextSibling;\n\n            if (nextLine) collectLines.push(nextLine);\n            else break;\n          }\n\n          let commandTracker = Object.assign({}, this.commandTracker);\n\n          for (let l of collectLines) {\n            for (let c of this.alignClass) {\n              if (l.classList.contains(c)) l.classList.remove(c);\n              commandTracker[c.substring(1, c.length - 1)] = false;\n            }\n\n            if (action !== \"alignLeft\" && !this.commandTracker[action]) {\n              for (let c of this.alignClass) {\n                if (c.includes(action)) l.classList.add(c);\n              }\n              commandTracker[action] = true;\n            }\n          }\n\n          this.commandTracker = commandTracker;\n\n          this._callback({\n            commandTracker,\n            range: this.range,\n          }).catch((err) => err);\n        });\n        return;\n\n      default:\n        break;\n    }\n\n    let isColor;\n    try {\n      isColor = new ColorMangle(action).hex();\n      action = \"color\";\n    } catch {}\n\n    //  style command\n    if (this.styleTagOfCommand[action]) {\n      this._modifySelection(() => {\n        let wrapper,\n          query = this.styleTagOfCommand[action],\n          stopperMode = false;\n\n        let counter = this.counterTagOf[query]\n          ? this.counterTagOf[query].map((c) => this._classNameToQuery(c))\n          : [];\n        if (counter.length)\n          counter = counter.concat(counter.map((c) => c + \"_stop\"));\n\n        //  setup query\n        query = this._classNameToQuery(query);\n\n        if (this.commandTracker[action]) {\n          let pass;\n\n          if (action === \"color\") {\n            pass =\n              isColor === this.commandTracker[action] ||\n              (isColor === undefined &&\n                this.commandTracker[action] ===\n                  this.cssVariable[\"--content-focus\"]);\n          } else pass = true;\n\n          if (pass) {\n            query = this._classNameToQuery(query + \"_stop\");\n            stopperMode = true;\n          }\n        }\n\n        //  setup wrapper element\n        if (query[0] === \".\") {\n          wrapper = document.createElement(\"SPAN\");\n          wrapper.classList.add(query.substring(1));\n        } else wrapper = document.createElement(query);\n\n        if (isColor && !stopperMode) wrapper.style.color = isColor;\n\n        let restrictedClass = this._isSelectionWithinRestrictedRange();\n        if (this.range.collapsed) {\n          if (restrictedClass) return;\n\n          let text = document.createTextNode(\"\");\n          // let text = document.createTextNode(\"\\u200B\");\n          wrapper.append(text);\n\n          if (this.range.startContainer.nodeName === \"BR\")\n            this.range.startContainer.parentNode.insertBefore(\n              wrapper,\n              this.range.startContainer\n            );\n          else this.range.insertNode(wrapper);\n\n          this.range = this._adjustSelection({ node: text, position: false });\n        } else {\n          if (restrictedClass) {\n            this.range = this._adjustSelection({\n              node: this.range.endContainer,\n              position: this.range.endOffset,\n            });\n            return;\n          }\n          //  selection has range\n          let extract = this.range.extractContents();\n          let span = document.createElement(\"span\");\n\n          while (extract.childNodes[0]) span.append(extract.childNodes[0]);\n\n          this._nodeCrawler(\n            (n) => {\n              let res = restrictedClass\n                ? this._classNameToQuery(restrictedClass)\n                : null;\n              let par = n.nodeType === 3 ? n.parentNode : n;\n              let restricted =\n                res && par.hasOwnProperty(\"closest\") ? par.closest(res) : false;\n\n              if (n.nodeType === 3 && !restricted)\n                n.textContent = n.textContent.replaceAll(\"\\t\", \"\");\n\n              return n;\n            },\n            { node: span, startFromEldestChild: true, parentNode: this.element }\n          );\n\n          while (span.childNodes[0]) extract.append(span.childNodes[0]);\n\n          //  unwrap duplicates and stopper | counter\n          let unwrapTarget = [query];\n\n          //  add countering | opposite tag to unwrap\n          if (stopperMode) {\n            let rev = query.replace(\"_stop\", \"\").substring(1);\n            rev = rev[0] === \"_\" ? \".\" + rev : rev;\n            unwrapTarget.push(rev);\n          } else {\n            let rev = query + \"_stop\";\n            rev = rev[0] === \".\" ? rev : \".\" + rev;\n            unwrapTarget.push(rev);\n          }\n\n          unwrapTarget = unwrapTarget.concat(counter);\n          let del = extract.querySelectorAll(unwrapTarget.join());\n          let idx = del.length;\n          if (idx) while (idx--) this._wrapNode(del[idx]);\n\n          //  split wrapper\n          let wrapperSplit = [wrapper.cloneNode(true)];\n\n          while (extract.childNodes[0]) {\n            let child = extract.childNodes[0];\n\n            if (child.nodeType === 1 && this._isBlockElement(child)) {\n              let nest = this._isTextAreaElement(child);\n\n              if (nest) {\n                for (let idx = 0; child.childNodes.length > idx; idx++) {\n                  let text = child.childNodes[idx];\n\n                  if (this._isTextElement(text)) {\n                    let nestedWrapper = wrapper.cloneNode(true);\n                    while (text.childNodes[0]) {\n                      if (text.childNodes[0].textContent)\n                        nestedWrapper.append(text.childNodes[0]);\n                      else text.childNodes[0].remove();\n                    }\n                    text.append(nestedWrapper);\n                  }\n                }\n\n                if (!child.textContent) {\n                  child.remove();\n                  continue;\n                }\n              }\n\n              let doc = document.createDocumentFragment();\n              doc.append(child);\n              wrapperSplit.push(doc);\n            } else {\n              if (child.nodeType === 1 && this._isTextBlockElement(child)) {\n                let nestedWrapper = wrapper.cloneNode(true);\n\n                while (child.childNodes[0])\n                  nestedWrapper.append(child.childNodes[0]);\n\n                if (\n                  nestedWrapper.childNodes.length === 1 &&\n                  nestedWrapper.childNodes[0].nodeName !== \"BR\" &&\n                  !nestedWrapper.textContent.length\n                ) {\n                  child.remove();\n                  continue;\n                }\n\n                child.append(nestedWrapper);\n                let doc = document.createDocumentFragment();\n                doc.append(child);\n                wrapperSplit.push(doc);\n              } else wrapperSplit[wrapperSplit.length - 1].append(child);\n            }\n          }\n\n          let output = document.createDocumentFragment();\n          for (let ws of wrapperSplit) output.append(ws);\n\n          let fc = output.firstChild;\n          let lc = output.lastChild;\n\n          if (this._isTextElement(fc) && !fc.textContent) {\n            let fn = fc.nextSibling;\n            fc.remove();\n            fc = fn;\n          }\n          if (this._isTextElement(lc) && !fc.textContent) {\n            let lp = lc.nextSibling;\n            lc.remove();\n            lc = lp;\n          }\n\n          this.range.insertNode(output);\n          this.range = this._adjustSelection({\n            node: [fc, lc],\n            position: [true, false],\n          });\n\n          //  remove garbage node\n          fc = fc.nodeType === 3 ? fc.parentNode : fc;\n          lc = lc.nodeType === 3 ? lc.parentNode : lc;\n\n          let next = lc.nextSibling;\n          if (\n            this._isTextElement(next) &&\n            (!next.textContent || next.textContent === \"\\u200B\")\n          )\n            next.remove();\n\n          let prev = fc.previousSibling;\n          if (\n            (this._isTextElement(prev) && !prev.textContent) ||\n            prev.textContent === \"\\u200B\"\n          )\n            prev.remove();\n        }\n      }, true);\n\n      return;\n    }\n\n    //  custom component\n    if (typeof action === \"object\") {\n      /**\n        action = {\n          elementId: <string: generated parent element id>,\n          element: <HTMLElement>,\n          style: {<css style object for parent element>},\n          insert: true | false,\n          contenteditable: false,\n        }\n      */\n\n      this._modifySelection(() => {\n        //  setup wrapper\n        let custom = document.createElement(\"div\");\n        custom.classList.add(\"_custom_\");\n        custom.setAttribute(\n          \"contenteditable\",\n          (!!action?.contenteditable).toString()\n        );\n\n        if (action.style)\n          for (let s in action.style) custom.style[s] = action.style[s];\n\n        action.elementId = action.elementId || this._generateId(\"custom\");\n        custom.id = action.elementId;\n\n        if (typeof action.element === \"string\")\n          custom.innerHTML = action.element;\n        else if (action.element instanceof HTMLElement)\n          custom.append(action.element);\n\n        if (!custom.children.length) action.insert = true; // insert if only text node\n\n        if (!this.range) this.element.focus();\n\n        this.custom_array.push(action);\n\n        this._callback({ custom: action }).then((_) => {\n          if (action.insert) {\n            let txt = document.createTextNode(\"\");\n            this.range.insertNode(txt); // when inserted in range, it will push the next el back\n            this.range.insertNode(custom);\n            this.range = this._adjustSelection({\n              node: txt,\n              position: false,\n            });\n          } else this._append(custom, this._createEmptyParagraph(), false);\n        });\n      });\n    }\n  }\n\n  /**\n   * Restores the last selection range\n   */\n  restoreLastSelection() {\n    if (this.logExecution)\n      console.log(\"restoreLastSelection\", { range_backup: this.range_backup });\n    if (this.range_backup) {\n      this.range = this._adjustSelection({\n        node: [\n          this.range_backup.startContainer,\n          this.range_backup.endContainer,\n        ],\n        position: [this.range_backup.startOffset, this.range_backup.endOffset],\n      });\n      let sel = window.getSelection();\n      let range = document.createRange();\n      range.setStart(this.range.startContainer, this.range.startOffset);\n      range.setEnd(this.range.endContainer, this.range.endOffset);\n      sel.removeAllRanges();\n      sel.addRange(range);\n    }\n  }\n\n  /**\n   * Load html string to wysiwyg\n   * @param {string} html - HTML string to load.\n   * @param {boolean} [editable=false] - Set editable mode.\n   */\n  async loadHTML(html = this.html, editable = false) {\n    if (typeof html !== \"string\") {\n      throw new Error(\"html should be a string\");\n    }\n\n    this.setEditable(false);\n    this.html = html || \"\";\n    const div = document.createElement(\"div\");\n    div.innerHTML = html;\n\n    // image\n    const img = div.querySelectorAll(\"img\");\n    const imgCallback = [];\n    if (img.length)\n      for (let i of img) {\n        const imageParent = i.closest(\"._media_\");\n\n        if (imageParent) {\n          const source = i.getAttribute(\"src\");\n          let imgId = i.id || this._generateId(\"img\");\n          i.setAttribute(\"id\", imgId);\n\n          imgCallback.push({\n            source,\n            elementId: imgId,\n            element: i,\n          });\n        }\n\n        this.image_array = JSON.parse(JSON.stringify(imgCallback));\n      }\n\n    // hashtag\n    const hashtag = div.querySelectorAll(\"._hashtag_\");\n    const hashtagCallback = [];\n    if (hashtag.length)\n      for (let i of hashtag) {\n        let clIdx = i.classList.length;\n        let tag,\n          elementId = i.id || this._generateId(\"hashtag\");\n        while (clIdx--) {\n          let cls = i.classList[clIdx];\n          if (cls.replace(\"_hashtag_\", \"\")[0] === \"#\") {\n            tag = cls.replace(\"_hashtag_\", \"\");\n          }\n        }\n        tag = tag?.[0] === \"#\" ? tag.substring(1) : tag;\n        if (tag) hashtagCallback.push({ tag, elementId, element: i });\n      }\n\n    // urllink\n    const urllink = div.querySelectorAll(\"._urllink_\");\n    const urllinkCallback = [];\n    if (urllink.length)\n      for (let i of urllink) {\n        let elementId = i.id || this._generateId(\"urllink\");\n        let url;\n\n        let clIdx = i.classList.length;\n        while (clIdx--) {\n          let cls = i.classList[clIdx];\n          if (cls.includes(\"_urllink_\").length) {\n            url = cls.replace(\"_urllink_\", \"\");\n          }\n        }\n        if (url) urllinkCallback.push({ url, elementId, element: i });\n      }\n\n    const custom = div.querySelectorAll(\"._custom_\");\n    const customCallback = [];\n    if (custom.length)\n      for (let i of custom) {\n        let elementId = i.id || this._generateId(\"custom\");\n        customCallback.push({ elementId, element: i });\n      }\n\n    let fb = await this._callback({\n      image: imgCallback,\n      hashtag: hashtagCallback,\n      urllink: urllinkCallback,\n      custom: customCallback,\n    });\n\n    // callback\n    for (let f in fb) {\n      if (f === \"image\") {\n        let img = fb[f];\n        for (let i of img) {\n          let imgEl = div.querySelector(\"#\" + i.elementId);\n          const imageParent = imgEl.closest(\"._media_\");\n          this._loadImage(i, imageParent);\n        }\n      } else this[f + \"_array\"] = fb[f];\n    }\n\n    this.element.innerHTML = \"\";\n\n    while (div.childNodes[0]) this.element.append(div.childNodes[0]);\n\n    if (editable) this.setEditable(true);\n  }\n\n  /**\n   * Load html string to wysiwyg\n   * @param {function} [pre=(p)=>{return p}] - Pre processing callback before export.\n   * @return {object} - Exported wysiwyg data object\n   */\n  async export(pre) {\n    this._normalizeDocument(true);\n    const dom = this.element.cloneNode(true);\n\n    const { hashtag_array, image_array, urllink_array, custom_array } = this;\n    let title = \"\";\n    let text = \"\";\n\n    let setup = {\n      dom,\n      urllink: this.urllink ? urllink_array : undefined,\n      hashtag: this.hashtag ? hashtag_array : undefined,\n      image: image_array,\n      custom: custom_array,\n    };\n\n    if (typeof pre === \"function\") {\n      let promiseOrNot = pre(setup);\n\n      if (promiseOrNot instanceof Promise)\n        setup = (await promiseOrNot) || setup;\n      else setup = promiseOrNot || setup;\n\n      if (this.hashtag) this.hashtag_array = setup.hashtag;\n      if (this.urllink) this.urllink_array = setup.urllink;\n\n      this.image_array = setup.image;\n      this.custom_array = setup.custom;\n      title = setup.title || \"\";\n    }\n\n    const strip = setup.dom.querySelectorAll(\":scope > *\");\n\n    //  Loop through eldest child element in document\n    for (let sid = 0; sid < strip.length; sid++) {\n      let child = strip[sid];\n      if (child.textContent.length) {\n        //  set title and text information\n        let inputText = child.textContent;\n        if (!title) {\n          let titleSearchRegex = /([^\\s^.]{2,}[^\\s]+[.][^\\s^.]{2,})/g;\n          let urlArray = inputText.match(titleSearchRegex);\n\n          // We are replacing the urls with a special text here.\n          // Then we split the sentences by the dots.\n          // Then we replace the url with the special text and identify the title and body text\n\n          let split;\n          if (urlArray) {\n            for (let i = 0; i < urlArray.length; i++) {\n              inputText = inputText.replace(\n                urlArray[i].replace(/\\.+$/, \"\"),\n                \"[§url§]\" + i + \"[/§url§]\"\n              );\n            }\n\n            split = inputText.split(\".\");\n\n            for (let i = 0; i < split.length; i++) {\n              for (let j = 0; j < urlArray.length; j++) {\n                split[i] = split[i].replace(\n                  \"[§url§]\" + j + \"[/§url§]\",\n                  urlArray[j].replace(/\\.+$/, \"\")\n                );\n              }\n            }\n          } else split = inputText.split(\".\");\n\n          title = split[0];\n          if (title.length > 200) {\n            text += title.substring(200) + \".\";\n            title = title.substring(0, 200);\n          }\n\n          split.shift();\n          inputText = split.join(\".\").replace(/\\s\\s+/g, \" \");\n          text += inputText + \" \";\n        } else text += `${inputText}\\n`;\n      }\n\n      if (child.classList.contains(\"_media_\")) {\n        let idx = child.childNodes.length;\n        while (idx--) {\n          let c = child.childNodes[idx];\n          if (c.nodeName === \"IMG\") {\n            for (const f of this.image_array) {\n              if (f.elementId === c.id && f.source !== c.getAttribute(\"src\")) {\n                c.setAttribute(\"src\", f.source);\n                let cIdx = c.classList.length;\n                while (cIdx--) {\n                  if (\n                    c.classList[cIdx].includes(\"_img_\") &&\n                    c.classList[cIdx].length > 5\n                  ) {\n                    c.classList.remove(c.classList[cIdx]);\n                    let splitUrl = f.source.split(\"/\");\n                    let splitTail = splitUrl[splitUrl.length - 1];\n                    let splitTail_length = splitTail.length - 64;\n                    const sourceClip = splitUrl[splitUrl.length - 1].substring(\n                      splitTail_length > 0 ? splitTail : 0\n                    );\n                    c.classList.add(\"_img_\" + sourceClip);\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return {\n      html: setup.dom.innerHTML,\n      title: title.trim(),\n      text: text.trim(),\n      urllink: this.urllink ? this.urllink_array : undefined,\n      hashtag: this.hashtag ? this.hashtag_array : undefined,\n      image: this.image_array,\n      custom: this.custom_array,\n    };\n  }\n\n  /**\n   * Set placeholder string\n   * @param {string} p - Set placeholder string.\n   */\n  setPlaceholder(p) {\n    if (this.logExecution) console.log(\"setPlaceholder\", { p });\n    if (this.element) {\n      if (p && typeof p === \"string\")\n        this.element.setAttribute(\"placeholder\", p);\n      else this.element.removeAttribute(\"placeholder\");\n    }\n  }\n\n  /**\n   * Set spellcheck mode\n   * @param {boolean} bool - Set spellcheck mode.\n   */\n  setSpellcheck(bool) {\n    if (this.logExecution) console.log(\"setSpellcheck\", { bool });\n    if (this.element)\n      this.element.setAttribute(\"spellcheck\", bool ? \"on\" : \"off\");\n  }\n\n  /**\n   * Set edit mode\n   * @param {boolean} bool - Set wysiwyg to editable when true.\n   */\n  setEditable(bool) {\n    if (this.logExecution) console.log(\"setEditable\", { bool });\n    bool = this.element ? bool : false;\n\n    if (this.element)\n      this.element.setAttribute(\"contenteditable\", bool ? \"true\" : \"false\");\n\n    this._setEventListener(bool);\n    this._observeMutation(bool);\n  }\n}\n\nexport { Wysiwyg4All };\n"],"names":["root","factory","exports","module","define","amd","a","i","self","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","ColorMangle","constructor","color","fineTuned","this","colorName","format","_colorType","type","throwErr","chkType","string","toLowerCase","match","Array","isArray","length","exec","err","_extractDigit","color_arg","rgba","push","parseFloat","getAlpha","extract","colorScheme","darkMode","focusOriginal","focusSat","opacity","text","black","white","soft","placeholder","transparent","shade","shadow","template","content_isHighLuminance","isHighLuminance","focus","includes","matchLuminance","compDir","analogous","focusHSL","hsla","h","an1HSL","an2HSL","Math","abs","complementary","darkModeAnalogous","analogousNude","k","textColor","assign","contrastRatio","highLum","op","unordered","keys","sort","reduce","target_color","target_ratio","direction","method","target","adj","m","dir","count","adj_set","adjustBrightness","adjustLuminance","legacy","hex","main_lum","_luminance","lum","currDir","lum_pre","deg","spin","v","val","hsl","plus","s","l","minus","add","_toString","r","g","b","rgb","map","pow","col","numberOrNot","n","def","color_arg1","color_arg2","lum1","lum2","option","blackOpacity","whiteOpacity","opa","c_min","min","c_max","max","delta","round","toFixed","digit","toString","slice","rgbObject","hexValues","parseInt","opacity_value","c","x","limit","rgbRange","result","adjustSaturation","Wysiwyg4All","hashtag_regex","hashtag_stopper_regex","urllink_regex","elementId","editable","spellcheck","highlightColor","html","callback","fontSize","desktop","tablet","phone","h1","h2","h3","h4","h5","h6","small","lastLineBlank","hashtag","urllink","logMutation","logExecution","fontSizeCssVariable","hold","keyArr","Error","substring","image_array","hashtag_array","urllink_array","custom_array","blockElement_queryArray","specialTextElement_queryArray","restrictedElement_queryArray","textAreaElement_queryArray","textBlockElement_queryArray","ceilingElement_queryArray","unSelectable_queryArray","styleAllowedElement_queryArray","alignClass","hashtag_flag","urllink_flag","range_backup","commandTracker","range","isRangeDirectionForward","insertTabPending_tabString","removeSandwichedLine_array","lastKey","element","document","getElementById","innerHTML","cssVariable","style","setProperty","elementComputedStyle","window","getComputedStyle","defaultFontColor","classList","contains","setPlaceholder","setSpellcheck","paddingB","paddingBottom","paddingT","paddingTop","borderT","borderTopWidth","borderB","borderBottomWidth","minHeight","command","italic","bold","underline","strike","fontSizeRatio","tag","ratio","entries","emSize","styleTagOfCommand","counterTagOf","cssPropertyOf","cssPropertyChecker","textDecoration","documentFontSize","nodeFontSize","f_size","compare_size","fontStyle","loadHTML","catch","_adjustSelection","ceilingElement_query","console","log","toArray","allowObject","setRange","node","position","sel","getSelection","getRangeAt","createRange","p","Node","setTarget","nodeType","lastChild","firstChild","textLength","_nodeCrawler","textContent","parentNode","getAttribute","createTextNode","insertBefore","childNodes","nodeName","previousSibling","setEnd","doCollapse","setStart","startContainer","startOffset","endContainer","endOffset","collapse","removeAllRanges","addRange","startLine","endLine","q","e","closest","_climbUpToEldestParent","_generateId","prefix","charAt","floor","random","Date","getTime","run","startFromEldestChild","startNode","commonAncestorContainer","parentAnchor","id","uniqueId","outputNodes","nodeIsRange","commonContainer","nodes","crawl","endNode","withInRange","cwl","breakOut","nextSibling","removeAttribute","_wrapNode","wrapper","appendWhole","start","end","withinRange","append","child","stripped","removeChild","singleChildParent","_isSingleChildParent","childrenCount","children","sweep","divCount","iHaveText","cb","_getStartEndLine","getInbetween","inBetween","currentLine","some","matches","_classNameToQuery","_isThereContentEditableOverMyHead","flyup","_isSelectionWithinRestrictedRange","restrict","_createEmptyParagraph","createElement","_trackStyle","cls","checker","sp","_isTextElement","_lastLineBlank","force","lastLine","_setEventListener","listen","removeEventListener","_selectionchange","imgInput","_keydown","_normalize","_paste","_keyup","accept","hidden","multiple","setAttribute","addEventListener","_imageSelected","error","_modifySelection","isForward","rangeHeader","unSel","_isUnSelectableElement","selNext","collapsed","caratPosition","skipTrack","concat","quote","comm","caratEl","getBoundingClientRect","_callback","bind","toUpperCase","shift","shiftKey","preventDefault","stc","block","ceil","cl","_replaceText","_setArrow","remove","sweep_array","hasIndent","diveAndRemoveTab","offset","line","container","containerOffset","lineOffset","tab","insertNode","stopPropagation","_normalizeDocument","cloneRange","doc","createDocumentFragment","clipboardData","getData","replace","u","extractContents","pop","_observeMutation","track","observer","disconnect","MutationObserver","mutation_array","monitor","cloneNode","name","attributeName","added","clones","addedNodes","removed","removedNodes","mutate","mutation","mutationTarget","callbackRemoved","what","arrIdx","splice","childIdx","toBreak","t","_isCeilingElement","idx","_isTextBlockElement","getBr","br","isWysiwygChild","isWysiwygEldestChild","ceiling","clo","isMediaElement","isBlockQuoteElement","isCustomElement","isHashtagElement","isUrlLinkElement","el","_isBlockElement","_isStyleAllowedElement","sa","doContinue","addBr","classSet","counter","toUnwrap","cIdx","set","class_idx","className","observe","attributes","childList","subtree","isAllRangeOnSameLine","caratElement","arrowDirection","metaKey","ctrlKey","rangeSetup","removeZeroSpace","targetContainer","nudged","siblingDirection","isCaratOnMultiLine","posTarget","caratViewPortPosition","elPosition","phoneTextSize","height","nudgeRangeToInlineElement","display","_caratElement","nextEl","setDirection","isMultiLine","eldestParentOfCurrentLine","isCurrentLineInsideSubCeiling","siblingSet","reverse","backwardNode","forwardNode","_forwardNode","leap","collectOffset","currentOffset","_append","insertAfter","wrap","focusElement","common","insertRestricted","next","nodeToUnwrap","restricted","chk","notAllowed","fc","data","Promise","files","prepareForCallback","image","readFile","FileReader","load","file","res","onload","f","lastModified","size","source","img","Image","dimension","width","filename","fileSize","fileType","src","readAsDataURL","loading","feedback","restoreLastSelection","media","_loadImage","imageObject","classname","class","tagName","onclick","st","pushArray","process","_getAnchorOffsetFromLine","anchorNode","anchorOffset","found","traverse","_getFocusOffsetFromLine","focusNode","focusOffset","lineByLine","anchorElement","appendChild","doSingleLine","normalize","cel","par","wholeDocument","typeName","setData","regex","anchorText","collected","textNodes","forEach","handler","hits","nxt","ownerDocument","global","nodeValue","lastIndex","handleResult","apply","results","orig","index","create","rest","createElementNS","namespaceURI","attrs","content","contentEditable","replaceTextNode","matched","textEl","toCallback","collectId","tc","then","dom","url","open","_checkElement","chkArr","exp","attr","gotTheMatch","_isTextAreaElement","_isSpecialTextElement","action","bq","li","ul","hr","click","collectLines","nextLine","isColor","query","stopperMode","pass","undefined","restrictedClass","span","replaceAll","unwrapTarget","rev","del","querySelectorAll","join","wrapperSplit","nestedWrapper","output","ws","lc","fn","lp","prev","custom","contenteditable","HTMLElement","insert","_","txt","setEditable","div","imgCallback","imgId","JSON","parse","stringify","hashtagCallback","clIdx","urllinkCallback","customCallback","fb","imageParent","querySelector","pre","title","setup","promiseOrNot","strip","sid","inputText","split","titleSearchRegex","urlArray","j","splitUrl","splitTail","splitTail_length","sourceClip","trim","bool"],"sourceRoot":""}