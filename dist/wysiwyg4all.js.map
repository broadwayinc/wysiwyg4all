{"version":3,"file":"wysiwyg4all.js","mappings":"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","sources":["webpack://wysiwyg4all/webpack/universalModuleDefinition","webpack://wysiwyg4all/webpack/bootstrap","webpack://wysiwyg4all/webpack/runtime/define property getters","webpack://wysiwyg4all/webpack/runtime/hasOwnProperty shorthand","webpack://wysiwyg4all/webpack/runtime/make namespace object","webpack://wysiwyg4all/./node_modules/colormangle/colormangle.js","webpack://wysiwyg4all/./selectors.js","webpack://wysiwyg4all/./util.js","webpack://wysiwyg4all/./wysiwyg4all.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const colorNames = {\n    aliceblue: \"#f0f8ff\",\n    antiquewhite: \"#faebd7\",\n    aqua: \"#00ffff\",\n    aquamarine: \"#7fffd4\",\n    azure: \"#f0ffff\",\n    beige: \"#f5f5dc\",\n    bisque: \"#ffe4c4\",\n    black: \"#000000\",\n    blanchedalmond: \"#ffebcd\",\n    blue: \"#0000ff\",\n    blueviolet: \"#8a2be2\",\n    brown: \"#a52a2a\",\n    burlywood: \"#deb887\",\n    cadetblue: \"#5f9ea0\",\n    chartreuse: \"#7fff00\",\n    chocolate: \"#d2691e\",\n    coral: \"#ff7f50\",\n    cornflowerblue: \"#6495ed\",\n    cornsilk: \"#fff8dc\",\n    crimson: \"#dc143c\",\n    cyan: \"#00ffff\",\n    darkblue: \"#00008b\",\n    darkcyan: \"#008b8b\",\n    darkgoldenrod: \"#b8860b\",\n    darkgray: \"#a9a9a9\",\n    darkgreen: \"#006400\",\n    darkgrey: \"#a9a9a9\",\n    darkkhaki: \"#bdb76b\",\n    darkmagenta: \"#8b008b\",\n    darkolivegreen: \"#556b2f\",\n    darkorange: \"#ff8c00\",\n    darkorchid: \"#9932cc\",\n    darkred: \"#8b0000\",\n    darksalmon: \"#e9967a\",\n    darkseagreen: \"#8fbc8f\",\n    darkslateblue: \"#483d8b\",\n    darkslategray: \"#2f4f4f\",\n    darkslategrey: \"#2f4f4f\",\n    darkturquoise: \"#00ced1\",\n    darkviolet: \"#9400d3\",\n    deeppink: \"#ff1493\",\n    deepskyblue: \"#00bfff\",\n    dimgray: \"#696969\",\n    dimgrey: \"#696969\",\n    dodgerblue: \"#1e90ff\",\n    firebrick: \"#b22222\",\n    floralwhite: \"#fffaf0\",\n    forestgreen: \"#228b22\",\n    fuchsia: \"#ff00ff\",\n    gainsboro: \"#dcdcdc\",\n    ghostwhite: \"#f8f8ff\",\n    goldenrod: \"#daa520\",\n    gold: \"#ffd700\",\n    gray: \"#808080\",\n    green: \"#008000\",\n    greenyellow: \"#adff2f\",\n    grey: \"#808080\",\n    honeydew: \"#f0fff0\",\n    hotpink: \"#ff69b4\",\n    indianred: \"#cd5c5c\",\n    indigo: \"#4b0082\",\n    ivory: \"#fffff0\",\n    khaki: \"#f0e68c\",\n    lavenderblush: \"#fff0f5\",\n    lavender: \"#e6e6fa\",\n    lawngreen: \"#7cfc00\",\n    lemonchiffon: \"#fffacd\",\n    lightblue: \"#add8e6\",\n    lightcoral: \"#f08080\",\n    lightcyan: \"#e0ffff\",\n    lightgoldenrodyellow: \"#fafad2\",\n    lightgray: \"#d3d3d3\",\n    lightgreen: \"#90ee90\",\n    lightgrey: \"#d3d3d3\",\n    lightpink: \"#ffb6c1\",\n    lightsalmon: \"#ffa07a\",\n    lightseagreen: \"#20b2aa\",\n    lightskyblue: \"#87cefa\",\n    lightslategray: \"#778899\",\n    lightslategrey: \"#778899\",\n    lightsteelblue: \"#b0c4de\",\n    lightyellow: \"#ffffe0\",\n    lime: \"#00ff00\",\n    limegreen: \"#32cd32\",\n    linen: \"#faf0e6\",\n    magenta: \"#ff00ff\",\n    maroon: \"#800000\",\n    mediumaquamarine: \"#66cdaa\",\n    mediumblue: \"#0000cd\",\n    mediumorchid: \"#ba55d3\",\n    mediumpurple: \"#9370db\",\n    mediumseagreen: \"#3cb371\",\n    mediumslateblue: \"#7b68ee\",\n    mediumspringgreen: \"#00fa9a\",\n    mediumturquoise: \"#48d1cc\",\n    mediumvioletred: \"#c71585\",\n    midnightblue: \"#191970\",\n    mintcream: \"#f5fffa\",\n    mistyrose: \"#ffe4e1\",\n    moccasin: \"#ffe4b5\",\n    navajowhite: \"#ffdead\",\n    navy: \"#000080\",\n    oldlace: \"#fdf5e6\",\n    olive: \"#808000\",\n    olivedrab: \"#6b8e23\",\n    orange: \"#ffa500\",\n    orangered: \"#ff4500\",\n    orchid: \"#da70d6\",\n    palegoldenrod: \"#eee8aa\",\n    palegreen: \"#98fb98\",\n    paleturquoise: \"#afeeee\",\n    palevioletred: \"#db7093\",\n    papayawhip: \"#ffefd5\",\n    peachpuff: \"#ffdab9\",\n    peru: \"#cd853f\",\n    pink: \"#ffc0cb\",\n    plum: \"#dda0dd\",\n    powderblue: \"#b0e0e6\",\n    purple: \"#800080\",\n    rebeccapurple: \"#663399\",\n    red: \"#ff0000\",\n    rosybrown: \"#bc8f8f\",\n    royalblue: \"#4169e1\",\n    saddlebrown: \"#8b4513\",\n    salmon: \"#fa8072\",\n    sandybrown: \"#f4a460\",\n    seagreen: \"#2e8b57\",\n    seashell: \"#fff5ee\",\n    sienna: \"#a0522d\",\n    silver: \"#c0c0c0\",\n    skyblue: \"#87ceeb\",\n    slateblue: \"#6a5acd\",\n    slategray: \"#708090\",\n    slategrey: \"#708090\",\n    snow: \"#fffafa\",\n    springgreen: \"#00ff7f\",\n    steelblue: \"#4682b4\",\n    tan: \"#d2b48c\",\n    teal: \"#008080\",\n    thistle: \"#d8bfd8\",\n    tomato: \"#ff6347\",\n    turquoise: \"#40e0d0\",\n    violet: \"#ee82ee\",\n    wheat: \"#f5deb3\",\n    white: \"#ffffff\",\n    whitesmoke: \"#f5f5f5\",\n    yellow: \"#ffff00\",\n    yellowgreen: \"#9acd32\",\n};\n\nclass ColorMangle {\n    /**\n     * @param {string} [color='#4848db'] - Argument string can be either color name string or any type of HTML color codes (hex, rgb, hsl).\n     */\n    constructor(color = '#4848db', fineTuned = true) {\n        this.fineTuned = fineTuned;\n\n        let format = this._colorType(color);\n        this.type = format.type;\n        this.color = format.color;\n    }\n\n    _colorType(color = this.color, throwErr = true) {\n        let chkType, type;\n\n        try {\n            if (!color)\n                throw 'invalid color';\n\n            if (typeof color === 'object' && color.string)\n                color = color.string;\n\n            if (typeof color === 'string')\n                color = color.toLowerCase();\n            else\n                throw 'invalid color';\n\n            if (color === this.color)\n                return { type: this.type, color: this.color };\n\n            if (colorNames[color])\n                return { type: 'hex', color: colorNames[color] };\n\n            chkType = color.match(/^(rgba?|rgb?|hsla?|#)/g);\n\n            if (Array.isArray(chkType)) {\n\n                if (chkType[0] === '#') {\n\n                    if (color.length === 4)\n                        // convert shorthand hex\n                        color = color[0] + color[1] + color[1] + color[2] + color[2] + color[3] + color[3];\n\n                    if (/^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(color))\n                        // is valid hex\n                        type = 'hex';\n\n                    else\n                        throw 'invalid hex';\n\n                } else if (color[color.length - 1] === ')')\n                    // hex, rgb, rgba, hsl, hsla\n                    type = chkType[0];\n\n                return { type, color };\n\n            }\n\n        } catch (err) {\n            if (throwErr)\n                throw err + ':' + color;\n        }\n\n        return {};\n    }\n\n    _extractDigit(color_arg = this.color) {\n        let { type = this.type, color = this.color } = this._colorType(color_arg);\n\n        if (type === 'hex')\n            color = this.rgba(1, color).string;\n\n        const value = [];\n\n        for (const i of color.match(/\\d+(\\.\\d+)?/g))\n            value.push(parseFloat(i));\n\n        if (value.length < 4) value.push(1);\n\n        return value;\n    }\n\n    /**\n     * @return {number} - Retrieves color alpha value (range 0 ~ 1)\n     */\n    getAlpha(color_arg = this.color) {\n        let extract = this._extractDigit(color_arg);\n        return extract ? extract[3] || 1 : 1;\n    }\n\n    /**\n     * Generates color scheme object.\n     * @typedef {Object} colorScheme\n     * @property {string} --alert\n     * @property {string} --alert-text\n     * @property {string} --analogous\n     * @property {string} --analogous-text\n     * @property {string} --background\n     * @property {string} --background-focus\n     * @property {string} --background-focus-text\n     * @property {string} --background-text\n     * @property {string} --background-text_focus\n     * @property {string} --button\n     * @property {string} --button-text\n     * @property {string} --complementary\n     * @property {string} --complementary-text\n     * @property {string} --content\n     * @property {string} --content-focus\n     * @property {string} --content-focus-text\n     * @property {string} --content-text\n     * @property {string} --content-text_focus\n     * @property {string} --focus\n     * @property {string} --focus-text\n     * @property {string} --placeholder\n     * @property {string} --saturate\n     * @property {string} --saturate-text\n     * @property {string} --success\n     * @property {string} --success-text\n     * @property {string} --text-button\n     * @param {string} [color=this.color] - Focus color for color scheme\n     * @param {boolean} [darkMode=false] - Dark mode when true\n     * @return {colorScheme} - { [&lt;CSS Variable names&gt;] : &lt;string | HTML color string&gt; }\n     */\n    colorScheme(color = this.color, darkMode = false) {\n\n        let opacity = {\n            text: { black: 0.88, white: 1 },\n            // soft: { black: 0.66, white: 0.88 },\n            placeholder: { black: 0.44, white: 0.55 },\n            // transparent: { black: 0.22, white: 0.33 },\n            // shade: { black: 0.066, white: 0.11 },\n            // shadow: { black: 0.033, white: 0.066 }\n        };\n\n        let template = {\n            '--background': darkMode ? '#121212' : '#f7f7f7',\n            '--content': darkMode ? '#2b2b2b' : '#ffffff',\n            // '--toolbar': darkMode ? '#2b2b2b' : '#ffffff'\n        };\n\n        let focusOriginal;\n        let focusSat;\n        let content_isHighLuminance = this.isHighLuminance(template['--content']);\n        let focus = (() => {\n            if (color && typeof color === 'object') {\n                if (color['--button']) {\n                    focusOriginal = color['--button'];\n                    return focusOriginal;\n                }\n                for (let key of color)\n                    if (key.includes('focus')) {\n                        focusOriginal = color[key];\n                        return focusOriginal;\n                    }\n            }\n\n            focusOriginal = color;\n            focusSat = this.matchLuminance(color, template['--content'], content_isHighLuminance ? 1.5 : 4.5);\n            return darkMode ? focusSat : color;\n        })();\n\n        let compDir = 1;\n        let analogous = (() => {\n            let deg = 30;\n            let analogous = this.analogous(focusOriginal, deg);\n            let focusHSL = this.hsla(1, focusOriginal).h;\n            let an1HSL = this.hsla(1, analogous[0]).h;\n            let an2HSL = this.hsla(1, analogous[1]).h;\n\n            if (focusHSL + deg > 360)\n                an1HSL = an1HSL + 360;\n            if (focusHSL - deg < 0)\n                an2HSL = 360 - an2HSL;\n\n            if (Math.abs(focusHSL - an1HSL) > Math.abs(focusHSL - an2HSL)) {\n                compDir = -1;\n                return analogous[1];\n            }\n\n            return analogous[0];\n        })();\n\n        let complementary = this.matchLuminance(this.complementary(focus, 60 * compDir), template['--background'], 3.1);\n        let fixedValue = {\n            // '--shadow': 'rgba(0, 0, 0, 0.033)',\n            // '--shade': 'rgba(0, 0, 0, 0.066)',\n            // '--transparent': 'rgba(0, 0, 0, 0.22)',\n            '--placeholder': darkMode ? 'rgba(255, 255, 255, 0.55)' : 'rgba(0, 0, 0, 0.44)'\n        };\n\n        let darkModeAnalogous = darkMode ? this.matchLuminance(analogous, template['--background'], 4.5) : analogous;\n        let analogousNude = this.matchLuminance(analogous, template['--background'], 4.5);\n\n        for (let k in template) {\n            template[k + '-text'] = this.textColor(opacity.text, template[k]);\n            template[k + '-focus'] = k.includes('--background') ? darkModeAnalogous : focus;\n            template[k + '-text_focus'] = k.includes('--background') ? analogousNude : this.matchLuminance(darkMode ? focus : focusSat, template[k], 1.66);\n            template[k + '-focus-text'] = this.textColor(1, k.includes('--background') ? darkModeAnalogous : focus);\n        }\n\n        template['--focus'] = focusOriginal;\n        template['--focus-text'] = this.textColor(1, focusOriginal);\n        template['--saturate'] = focusSat;\n        template['--saturate-text'] = this.textColor(1, focusSat);\n\n        Object.assign(template, {\n            '--complementary': complementary,\n            '--complementary-text': this.textColor(1, complementary),\n            '--analogous': analogous,\n            '--analogous-text': this.textColor(1, analogous),\n            '--alert': 'tomato',\n            // '--alert-text': 'white',\n            '--success': 'limegreen',\n            // '--success-text': 'black',\n            '--button': focus,\n            '--text-button': darkMode ? this.matchLuminance(focusSat, template[\"--content\"], 7) : this.contrastRatio(template[\"--content\"], focusSat) < 4.5 ? \"inherit\" : focusSat,\n            '--button-text': this.textColor(1, focus)\n        });\n\n        // for (let k in template) {\n        //     if (!template[k] || template[k] === \"\")\n        //         continue;\n\n        //     let highLum = this.isHighLuminance(template[k]);\n        //     for (let op of ['soft', 'placeholder', 'transparent', 'shadow', 'shade']) {\n\n        //         template[k + '_' + op] = this.rgba(opacity[op][highLum ? 'white' : 'black'], template[k]).string;\n        //     }\n        // }\n\n        // template['--button-border'] = (() => {\n        //     let focus_isHighLuminance = this.isHighLuminance(focus);\n        //     let border = this.matchLuminance(this.adjustLuminance(-1, template['--button']), template['--button'], 1.15, -1, focus_isHighLuminance ? 'luminance' : 'brightness');\n        //     return focus_isHighLuminance ? this.rgba(0.5, border).string : border;\n        // })();\n\n        if (color && typeof color === 'object') {\n            for (let key of color)\n                if (key[0] !== '-')\n                    throw 'invalid color scheme';\n            Object.assign(template, color);\n        }\n\n        let unordered = Object.assign(template, fixedValue);\n        return Object.keys(unordered).sort().reduce(\n            (obj, key) => {\n                obj[key] = unordered[key];\n                return obj;\n            },\n            {}\n        );\n    }\n\n    /**\n     * Match luminance of target_color with base color\n     * @param {string} target_color - Target color\n     * @param {string} [color_arg=this.color] - Base color\n     * @param {number} [target_ratio] - Set contrast ratio difference\n     * @param {number} [direction] - Adjust direction. Adjust to darker luminance when -1. Brighter when 1, otherwise auto.\n     * @param {string} [method] - Luminance adjustment mode: 'brightness | luminance | saturation'\n     * @return {string} - HTML color string\n     */\n    matchLuminance(target_color, color_arg = this.color, target_ratio, direction, method) {\n        let { color } = this._colorType(color_arg);\n        let target = this._colorType(target_color).color;\n\n        if (target_ratio) {\n            let adj = target;\n            let m = this.contrastRatio(adj, color);\n            if (m < target_ratio) {\n                let dir = direction || this.isHighLuminance(color) ? -1 : 1;\n                let count = 100;\n                while (m < target_ratio && count--) {\n                    let adj_set;\n\n                    switch (method) {\n                        case 'brightness':\n                            adj_set = this.adjustBrightness(1 * dir, adj);\n                            break;\n                        case 'luminance':\n                            adj_set = this.adjustLuminance(1 * dir, adj);\n                            break;\n                        default:\n                            adj_set = this.adjustBrightness(1 * dir, { legacy: true, color: adj });\n                    }\n\n                    if (adj === adj_set)\n                        break;\n                    adj = adj_set;\n\n                    m = this.contrastRatio(adj, color);\n                }\n            }\n            return this.hex(adj);\n        } else {\n            let main_lum = this._luminance(color);\n            let lum = this._luminance(target);\n\n            if (Math.abs(lum - main_lum) < 0.01)\n                return target;\n\n            let adj = this.hex(target);\n\n            let dir = (lum, main_lum) => {\n                return lum < main_lum ? 1 : -1;\n            };\n\n            let currDir = dir(lum, main_lum);\n            while (Math.abs(lum - main_lum) > 0.01 && currDir === dir(lum, main_lum)) {\n                let adj_set;\n                switch (method) {\n                    case 'saturation':\n                        adj_set = this.adjustBrightness(currDir, { color: adj, legacy: true });\n                        break;\n                    case 'luminance':\n                        adj_set = this.adjustLuminance(currDir, adj);\n                        break;\n                    default:\n                        adj_set = this.adjustBrightness(currDir, adj);\n                }\n                let lum_pre = this._luminance(adj_set);\n                if (lum_pre === lum || currDir !== dir(lum_pre, main_lum))\n                    break;\n                lum = lum_pre;\n                adj = adj_set;\n            }\n            return this.hex(adj);\n        }\n    }\n\n    /**\n     * Generate analogous color\n     * @param {string} [color_arg=this.color] - Target color\n     * @param {number} [deg=30] - Amount of hue separation\n     * @return {Array} - 2 analogous color is returned. [&lt;hsla color&gt;, ... ]\n     */\n    analogous(color_arg = this.color, deg = 30) {\n        let { color } = this._colorType(color_arg);\n\n        let spin = (h, v) => {\n            let val = h + v;\n            return val < 0 ? 360 + val : val > 360 ? val - 360 : val;\n        };\n\n        let hsl = this.hsla(this.getAlpha(color), color);\n        let plus = 'hsla(' + spin(hsl.h, deg) + ', ' + hsl.s + '%, ' + hsl.l + '%, ' + hsl.a + ')';\n        let minus = 'hsla(' + spin(hsl.h, -deg) + ', ' + hsl.s + '%, ' + hsl.l + '%, ' + hsl.a + ')';\n\n        return [this.matchLuminance(plus, color), this.matchLuminance(minus, color)];\n    }\n\n    /**\n     * Generate complementary color\n     * @param {string} [color_arg=this.color] - Target color\n     * @param {number} [add=0] - Add or subtract hue from complementary color\n     * @return {string} - HEX color string\n     */\n    complementary(color_arg = this.color, add = 0) {\n        let { color } = this._colorType(color_arg);\n\n        let hsl = this.hsla(this.getAlpha(color), color);\n\n        if (hsl.h < 180)\n            hsl.h += 180;\n        else\n            hsl.h -= 180;\n\n        hsl.h += add;\n        hsl.h = hsl.h > 360 ? hsl.h - 360 : hsl.h < 0 ? 360 - hsl.h : hsl.h;\n\n        return this.hex(this._toString(hsl));\n    }\n\n    /**\n     * @param {string} [color_arg=this.color] - Target color\n     * @param {boolean} [fineTuned=false] - Custom Color space is applied when true\n     * @return {boolean} - True if color has high luminance\n     */\n    isHighLuminance(color_arg = this.color, fineTuned = this.fineTuned) {\n        const { r, g, b } = this.rgba(1, this._colorType(color_arg).color);\n\n        let yiq =\n            fineTuned ?\n                ((r * (299 - 64)) + (g * (587 * 1.25)) + (b * 114)) / 1000 : // Fine tuned\n                ((r * 299) + (g * 587) + (b * 114)) / 1000; // Standard color space formula\n\n        // Web standard of color space threshold is 128\n        return (yiq >= (fineTuned ? 188 : 128));\n    }\n\n    _luminance(color_arg = this.color) {\n        let rgb = this.rgba(1, color_arg);\n        let a = [rgb.r, rgb.g, rgb.b].map(function (v) {\n            v /= 255;\n            return v <= 0.03928\n                ? v / 12.92\n                : Math.pow((v + 0.055) / 1.055, 2.4);\n        });\n\n        return a[0] * 0.2126 + a[1] * 0.7152 + a[2] * 0.0722;\n    }\n\n    _toString(col) {\n        let numberOrNot = (n, def = 100) => {\n            return typeof n === 'number' ? n : def;\n        };\n        if (typeof col === 'string')\n            return col;\n\n        if (col.hasOwnProperty('h'))\n            return 'hsla(' + (col.h || 0) + ', ' + numberOrNot(col.s) + '%, ' + numberOrNot(col.l) + '%, ' + numberOrNot(col.a, 1) + ')';\n\n        if (col.hasOwnProperty('r'))\n            return 'rgba(' + numberOrNot(col.r) + ', ' + numberOrNot(col.g) + ', ' + numberOrNot(col.b) + ', ' + numberOrNot(col.a, 1) + ')';\n        throw col;\n    }\n\n    /**\n     * Returns contrast ratio between the given color.\n     * Useful to determine if the given color is suitable for text with the constructed color as a background.\n     * @param {string} color_arg1 - Color string you want to compare luminance ratio.\n     * @param {string} [color_arg2=this.color] - Color string you want to compare with color_arg1\n     * @return {number} - Contrast ratio\n     */\n    contrastRatio(color_arg1, color_arg2 = this.color) {\n        let lum1 = this._luminance(color_arg2) + 0.05;\n        let lum2 = this._luminance(color_arg1) + 0.05;\n\n        return lum1 > lum2 ? lum1 / lum2 : lum2 / lum1;\n    }\n\n    /**\n     * Returns suitable text color (Black / White).\n     * @param {(number | Object)} opacity - Can set returning color values opacity.\n     * @param {number} opacity.black - Set returning color values opacity when the result color is black.\n     * @param {number} opacity.white - Set returning color values opacity when the result color is white.\n     * @param {(string|Object)} [option=this.color] - Background color of text\n     * @param {(string|Object)} [option.color=this.color] - Background color of text\n     * @param {(string|Object)} [option.fineTuned=true] - Follows standard color space calculation when false\n     * @return {string | null} - HTML color string\n     */\n    textColor(opacity = 1, option = this.color) {\n\n        if (typeof option === 'string')\n            option = { color: option };\n\n        let { color = this.color, fineTuned = true } = option;\n\n        color = this._colorType(color).color;\n\n        // returns null if color opacity is below 0.5\n        if (this.getAlpha(color) < 0.5)\n            return \"\";\n\n        let blackOpacity, whiteOpacity;\n\n        if (typeof opacity === 'number' && opacity < 1) {\n            blackOpacity = opacity;\n            whiteOpacity = opacity;\n        } else if (opacity && typeof opacity === 'object') {\n            for (let k of ['black', 'white']) {\n                let opa = opacity[k];\n                if (typeof opa === 'number' && opa < 1) {\n                    if (k === 'black')\n                        blackOpacity = opa;\n                    else if (k === 'white')\n                        whiteOpacity = opa;\n                }\n            }\n        }\n\n        const opa = (v) => {\n            if (typeof v === 'number') {\n                if (v < 1 && v > 0) return v;\n                else if (v > 1) return 1;\n                else return 0;\n            } else return 1;\n        };\n\n        if (this.isHighLuminance(color, fineTuned))\n            return blackOpacity ? `rgba(0, 0, 0, ${opa(blackOpacity)})` : 'black';\n\n        return whiteOpacity ? `rgba(255, 255, 255, ${opa(whiteOpacity)})` : 'white';\n    }\n\n    /**\n     * Returns hsla color\n     * @param {number} [opacity] - Set opacity for returning color value.\n     * @param {string} [color_arg=this.color] - Color to convert to hsla string\n     * @return {Object} - { h: &lt;number&gt;, s: &lt;number&gt;, l: &lt;number&gt;, r: &lt;number&gt;, g: &lt;number&gt;, b: &lt;number&gt;, a: &lt;number&gt;, string: &lt;string | rgba color string&gt; }\n     */\n    hsla(opacity, color_arg = this.color) {\n        const { type = this.type, color = this.color } = this._colorType(color_arg);\n\n        const hsl = (r, g, b) => {\n            r /= 255;\n            g /= 255;\n            b /= 255;\n\n            let c_min = Math.min(r, g, b),\n                c_max = Math.max(r, g, b),\n                delta = c_max - c_min,\n                h = 0,\n                s = 0,\n                l = 0;\n\n            if (delta === 0)\n                h = 0;\n            else if (c_max === r)\n                h = ((g - b) / delta) % 6;\n            else if (c_max === g)\n                h = (b - r) / delta + 2;\n            else\n                h = (r - g) / delta + 4;\n\n            h = Math.round(h * 60);\n\n            if (h < 0) h += 360;\n\n            l = (c_max + c_min) / 2;\n            s = delta === 0 ? 0 : delta / (1 - Math.abs(2 * l - 1));\n            s = +(s * 100).toFixed(1);\n            l = +(l * 100).toFixed(1);\n            return { h, s, l };\n        };\n\n        if (type === 'hex') {\n            opacity = typeof opacity === 'number' ? opacity : 1;\n            const rgba = this.rgba(opacity, color);\n            const { r, g, b, a } = rgba;\n            const { h, s, l } = hsl(r, g, b);\n\n            return {\n                r, g, b, a,\n                h: h,\n                s: s,\n                l: l,\n                string: this._toString({ h, s, l, a: opacity })\n            };\n\n        } else {\n\n            const digit = this._extractDigit(color);\n            opacity = typeof opacity === 'number' ? opacity : digit[3] || 1;\n\n            if (type.includes('hsl')) {\n                const { r, g, b, a } = this.rgba(opacity, color);\n\n                return {\n                    r, g, b, a,\n                    h: digit[0],\n                    s: digit[1],\n                    l: digit[2],\n                    string: this._toString({\n                        h: digit[0],\n                        s: digit[1],\n                        l: digit[2],\n                        a\n                    })\n                };\n\n            } else if (type.includes('rgb')) {\n                const value = {\n                    r: digit[0],\n                    g: digit[1],\n                    b: digit[2],\n                    a: opacity\n                };\n                const { h, s, l } = hsl(value.r, value.g, value.b);\n\n                return Object.assign(value, {\n                    r: value.r,\n                    g: value.g,\n                    b: value.b,\n                    h: h,\n                    s: s,\n                    l: l,\n                    a: value.a,\n                    string: this._toString({ h, s, l, a: value.a })\n                });\n\n            }\n        }\n    }\n\n    /**\n     * Returns hex color string\n     * @param {string} [color_arg=this.color] - Color to convert to hex string\n     * @return {string} - HEX color string\n     */\n    hex(color_arg = this.color) {\n        const { type = this.type, color = this.color } = this._colorType(color_arg);\n\n        if (type.includes('rgb') || type.includes('hsl')) {\n            const rgba = this.rgba(1, color);\n            return '#' + ((1 << 24) + (rgba.r << 16) + (rgba.g << 8) + rgba.b).toString(16).slice(1);\n        }\n\n        return color;\n    }\n\n    /**\n     * Returns rgba color\n     * @param {number} [opacity] - Set opacity of returning color\n     * @param {string} [color_arg=this.color] - Color to convert to rgba string\n     * @return {Object} - { r: &lt;number&gt;, g: &lt;number&gt;, b: &lt;number&gt;, a: &lt;number&gt;, string: &lt;string | HTML color string&gt; }\n     */\n    rgba(opacity, color_arg = this.color) {\n        const { type = this.type, color = this.color } = this._colorType(color_arg);\n\n        if (type === 'hex') {\n            const hex = color;\n            let rgbObject = { r: null, g: null, b: null };\n            let hexValues = hex.match(/[a-fA-F0-9]{2}/g);\n\n            if (hex.length === 4) {\n                hexValues = hex.match(/[a-fA-F0-9]{1}/g);\n                hexValues = hexValues.map(hex => \"\" + hex + hex);\n            }\n            let count = 0;\n            for (const key in rgbObject) {\n                rgbObject[key] = parseInt(hexValues[count], 16);\n                count++;\n            }\n\n            const opacity_value = typeof opacity === 'number' ? opacity : 1;\n            let { r, g, b } = rgbObject;\n\n            return {\n                ...rgbObject,\n                a: opacity_value,\n                string: this._toString({\n                    r: +r, g: +g, b: +b, a: opacity_value\n                })\n            };\n\n        } else {\n            const digit = this._extractDigit(color);\n            const a = typeof opacity === 'number' ? opacity : digit[3] || 1;\n\n            if (type.includes('rgb')) {\n\n                let value = {\n                    r: digit[0],\n                    g: digit[1],\n                    b: digit[2],\n                    a\n                };\n\n                return Object.assign({\n                    string: this._toString(value)\n                }, value);\n\n            } else if (type.includes('hsl')) {\n\n                let h = digit[0];\n                let s = digit[1];\n                let l = digit[2];\n\n                s /= 100;\n                l /= 100;\n\n                let c = (1 - Math.abs(2 * l - 1)) * s,\n                    x = c * (1 - Math.abs((h / 60) % 2 - 1)),\n                    m = l - c / 2,\n                    r = 0,\n                    g = 0,\n                    b = 0;\n                if (0 <= h && h < 60) {\n                    r = c;\n                    g = x;\n                    b = 0;\n                } else if (60 <= h && h < 120) {\n                    r = x;\n                    g = c;\n                    b = 0;\n                } else if (120 <= h && h < 180) {\n                    r = 0;\n                    g = c;\n                    b = x;\n                } else if (180 <= h && h < 240) {\n                    r = 0;\n                    g = x;\n                    b = c;\n                } else if (240 <= h && h < 300) {\n                    r = x;\n                    g = 0;\n                    b = c;\n                } else if (300 <= h && h < 360) {\n                    r = c;\n                    g = 0;\n                    b = x;\n                }\n                r = Math.round((r + m) * 255);\n                g = Math.round((g + m) * 255);\n                b = Math.round((b + m) * 255);\n\n                return {\n                    r, g, b, a,\n                    string: this._toString({ r, g, b, a })\n                };\n\n            }\n        }\n    }\n\n    /**\n     * @param {number} value - Adjust value by percent. range: -100 ~ 100\n     * @param {(string|Object)} [option=this.color] - Color to adjust || additional option.\n     * @param {(string|Object)} [option.color_arg=this.color] - Color to adjust.\n     * @param {(string|Object)} [option.legacy=false] - Legacy adjust mode. Adjust brightness by saturation and luminance.\n     * @return {string} - Brightness adjusted HTML color string\n     */\n    adjustBrightness(value = 0, option = this.color) {\n        let color_arg, legacy = false;\n        if (typeof option === 'string')\n            color_arg = option || this.color;\n        else {\n            color_arg = option.color || this.color;\n            legacy = option.legacy || false;\n        }\n\n        if (legacy) {\n            let { color } = this._colorType(color_arg);\n            let col = this.hsla(this.getAlpha(color), color);\n\n            let limit = (v, limit = 100) => {\n                return v > limit ? limit : v < 0 ? 0 : v;\n            };\n\n            col.s += ((value > 0 ? (100 - col.s) : col.s) / 100) * value;\n            col.s = limit(col.s);\n            col.l += ((value > 0 ? (100 - col.l) : col.l) / 100) * value;\n            col.l = limit(col.l);\n\n            return this._toString(col);\n        }\n\n        let { type = this.type, color = this.color } = this._colorType(color_arg);\n\n        if (value === 0)\n            return color;\n\n        const opacity = type === 'hex' ? 1 : this._extractDigit(color)[3] || 1;\n        const rgb = this.rgba(opacity, color);\n\n        let rgbRange = {\n            r: 0 - rgb['r'],\n            g: 0 - rgb['g'],\n            b: 0 - rgb['b']\n        };\n\n        if (value > 0) {\n            Object.keys(rgbRange).map(function (key) {\n                rgbRange[key] = 255 - rgb[key];\n            });\n        }\n\n        ['r', 'g', 'b'].map(function (key) {\n            rgb[key] += parseInt(rgbRange[key] / 100 * Math.abs(value));\n        });\n\n        const result = 'rgb(' + rgb.r + ', ' + rgb.g + ', ' + rgb.b + ')';\n\n        if (type === 'hex')\n            return this.hex(result);\n\n        else if (type.includes('rgb'))\n            return this.rgba(rgb.a, result).string;\n\n        else if (type.includes('hsl'))\n            return this.hsla(rgb.a, result).string;\n    }\n\n    /**\n     * @param {number} value - Adjust value by percent. range: -100 ~ 100\n     * @param {string} [color_arg=this.color] - Color to adjust.\n     * @return {string} - Luminance adjusted hsla color string\n     */\n    adjustLuminance(value = 0, color_arg = this.color) {\n        let { color } = this._colorType(color_arg);\n        let col = this.hsla(this.getAlpha(color), color);\n\n        let limit = (v, limit = 100) => {\n            return v > limit ? limit : v < 0 ? 0 : v;\n        };\n\n        col.l += ((value > 0 ? (100 - col.l) : col.l) / 100) * value;\n        col.l = limit(col.l);\n\n        return this._toString(col);\n    }\n\n    /**\n     * @param {number} value - Adjust value by percent. range: -100 ~ 100\n     * @param {string} [color_arg=this.color] - Color to adjust.\n     * @return {string} - Saturation adjusted hsla color string\n     */\n    adjustSaturation(value = 0, color_arg = this.color) {\n        let { color } = this._colorType(color_arg);\n        let col = this.hsla(this.getAlpha(color), color);\n\n        let limit = (v, limit = 100) => {\n            return v > limit ? limit : v < 0 ? 0 : v;\n        };\n\n        col.s += ((value > 0 ? (100 - col.s) : col.s) / 100) * value;\n        col.s = limit(col.s);\n\n        return this._toString(col);\n    }\n}\n\nexport { ColorMangle };","function adjustSelection(\n    target,\n    ceilingElement_query\n) {\n    // Adjusts the selection range in the document\n    // target: { node: [Node], position: [number] }\n    // ceilingElement_query: [string] (CSS selector)\n    // Returns: { startLine: Node, endLine: Node }\n    // If target is null, it will not set the selection range\n    // If ceilingElement_query is null, it will not set the startLine and endLine\n\n    let toArray = (v, allowObject = false) => {\n        if (Array.isArray(v)) return v;\n        else if (\n            (typeof v === \"string\" && v) ||\n            typeof v === \"number\" ||\n            typeof v === \"boolean\" ||\n            (allowObject && typeof v === \"object\")\n        )\n            return [v];\n        else return [];\n    };\n\n    let setRange = !!target;\n\n    let { node = null, position = true } = target || {};\n\n    let sel = window.getSelection();\n    if (!sel) return null;\n\n    let range = null;\n    try {\n        range = sel.getRangeAt(0);\n    } catch (err) {\n        if (setRange) range = document.createRange();\n    }\n\n    if (setRange) {\n        node = toArray(node, true);\n        position = toArray(position, true);\n\n        for (let p of position)\n            if (typeof p !== \"number\" && typeof p !== \"boolean\" && p !== null)\n                throw \"INVALID_POSITION\";\n\n        for (let n of node) {\n            if (!(n instanceof Node) && n !== null) {\n                if (n === false) return;\n                throw \"INVALID_NODE\";\n            }\n        }\n\n        const setTarget = (node, position) => {\n            if (node instanceof Node) {\n                if (node.nodeType === 1) {\n                    if (typeof position === \"boolean\")\n                        while (position === false ? node.lastChild : node.firstChild)\n                            node = position === false ? node.lastChild : node.firstChild;\n                    else if (typeof position === \"number\") {\n                        let textLength = 0;\n                        nodeCrawler(\n                            (n) => {\n                                if (n.nodeType === 3 && n.textContent.length) {\n                                    let length = n.textContent.length;\n                                    if (\n                                        n.parentNode.getAttribute(\"contenteditable\") === \"false\"\n                                    ) {\n                                        if (position - (textLength + length) >= 0)\n                                            textLength += length;\n                                        else {\n                                            position = length;\n                                            return \"BREAK\";\n                                        }\n                                        return n;\n                                    } else {\n                                        node = n;\n\n                                        if (position - (textLength + length) >= 0) {\n                                            textLength += length;\n                                        } else {\n                                            position -= textLength;\n                                            return \"BREAK\";\n                                        }\n                                    }\n                                }\n                                return n;\n                            },\n                            {\n                                node,\n                            }\n                        );\n                        if (node.nodeType === 1) {\n                            let text = document.createTextNode(\"\\u200B\");\n                            node.insertBefore(text, node.childNodes[0]);\n                            node = text;\n                            position = 0;\n                        }\n                    }\n\n                    if (node.nodeName === \"BR\" && node.parentNode.childNodes.length > 1)\n                        node = node.previousSibling || node;\n                }\n                if (typeof position === \"boolean\")\n                    position = position ? 0 : node.textContent.length;\n                else\n                    position =\n                        position > node.textContent.length\n                            ? node.textContent.length\n                            : position;\n\n                return { node, position };\n            }\n        };\n\n        let doCollapse = false,\n            setEnd,\n            setStart = (() => {\n                node[0] = node[0] === null ? range.startContainer : node[0];\n                position[0] = position[0] === null ? range.startOffset : position[0];\n                return setTarget(node[0], position[0]);\n            })();\n        range.setStart(setStart.node, setStart.position);\n\n        if (position.length > 1)\n            setEnd = setTarget(\n                (node[1] === null ? range.endContainer : node[1]) || node[0],\n                position[1] === null ? range.endOffset : position[1]\n            );\n        else {\n            setEnd = setStart;\n            doCollapse = true;\n        }\n\n        range.setEnd(setEnd.node, setEnd.position);\n\n        if (doCollapse) range.collapse(true);\n\n        sel.removeAllRanges();\n        sel.addRange(range);\n    }\n\n    if (ceilingElement_query && range) {\n        let startLine, endLine;\n        for (let q of ceilingElement_query) {\n            let e =\n                range.endContainer.nodeType === 3\n                    ? range.endContainer.parentNode\n                    : range.endContainer;\n            let s =\n                range.startContainer.nodeType === 3\n                    ? range.startContainer.parentNode\n                    : range.startContainer;\n\n            if (!startLine && s?.closest(q))\n                startLine = climbUpToEldestParent(s, s.closest(q));\n            if (!endLine && e?.closest(q))\n                endLine = climbUpToEldestParent(e, e.closest(q));\n\n            if (startLine && endLine) break;\n        }\n\n        range.startLine = startLine;\n        range.endLine = endLine;\n    }\n\n    return range;\n}\n\nfunction nodeCrawler(run, option) {\n    const { parentNode, node, startFromEldestChild, startNode } = option;\n    // const options = {\n    //   node: document.getElementById('content'),\n    //   parentNode: document.body,\n    //   startFromEldestChild: true\n    //   startNode: document.getElementById('start') // optional\n    // };\n\n    if (startFromEldestChild && !parentNode)\n        throw new Error(\"Need parentNode to crawl up single child\");\n\n    if (!node || !(node instanceof Node || node?.commonAncestorContainer))\n        throw new Error(\"No node to crawl\");\n\n    let outputNodes = [],\n        nodeIsRange = !!node.commonAncestorContainer,\n        commonContainer = null,\n        parentAnchor;\n\n    if (parentNode && parentNode instanceof Node && parentNode?.nodeType === 1)\n        parentAnchor = parentNode;\n\n    if (nodeIsRange) {\n        commonContainer = node.commonAncestorContainer;\n    } else commonContainer = node;\n\n    commonContainer =\n        commonContainer.nodeType === 3\n            ? commonContainer?.parentNode || commonContainer\n            : commonContainer;\n\n    if (startFromEldestChild)\n        commonContainer = climbUpToEldestParent(\n            commonContainer,\n            parentNode,\n            true\n        );\n\n    if (parentAnchor) {\n        while (\n            commonContainer.nodeType === 3 ||\n            (commonContainer !== parentAnchor &&\n                commonContainer.parentNode &&\n                commonContainer.parentNode !== parentAnchor)\n        )\n            commonContainer = commonContainer.parentNode;\n    }\n\n    /** crawl order below (outputs node on the way)\n     *  If 'BREAK' is returned, the node is not saved in outputNode\n     *\n     *  start   ->  [                   end\n     *                  |               ^ (finish)\n     *                  v               | (outputNode)\n     *              outputNode  ->  outputNode\n     *\n     *  NOTE: Will not crawl when node is textNode\n     */\n\n    if (commonContainer.nodeType === 3) {\n        outputNodes.push(run(commonContainer));\n\n        return { nodes: outputNodes, commonContainer };\n    }\n\n    let id, uniqueId;\n    if (commonContainer.nodeType === 1) {\n        uniqueId =\n            commonContainer.id ||\n            (() => {\n                id = generateId(\"crawl\");\n                commonContainer.id = id;\n                return id;\n            })();\n    }\n\n    let crawl =\n        (startNode instanceof Node ? startNode : null) ||\n        (nodeIsRange ? node.startContainer : commonContainer.childNodes[0]);\n    let endNode = nodeIsRange\n        ? node.endContainer\n        : commonContainer.childNodes[\n        commonContainer.childNodes.length\n            ? commonContainer.childNodes.length - 1\n            : 0\n        ];\n\n    let withInRange = (cwl) => {\n        if (!cwl || !(cwl instanceof Node)) return false;\n        if (cwl.nodeType === 1)\n            return cwl.id !== uniqueId && cwl.parentNode?.closest(\"#\" + uniqueId);\n        else if (cwl.nodeType === 3)\n            return cwl.parentNode && cwl.parentNode?.closest(\"#\" + uniqueId);\n        else return false;\n    };\n    let diving = false;\n    while (withInRange(crawl)) {\n        if (!diving && crawl.nodeType === 1 && crawl.childNodes.length) {\n            // dive down to deepest child's first crawl\n            crawl = crawl.childNodes[0];\n        } else if (crawl) {\n            diving = true;\n            // entering the deepest elements first child.\n\n            if (crawl.nodeType === 3) {\n                crawl = crawl.nextSibling || crawl.parentNode;\n                continue;\n            }\n\n            if (typeof run === \"function\") crawl = run(crawl);\n            if (crawl === \"BREAK\") break;\n\n            if (withInRange(crawl))\n                outputNodes.push(crawl);\n\n            /**\n             * Climb up the node if the node doesn't have any next siblings\n             * Stop when it hits the commonContainer\n             */\n            if (\n                crawl.nextSibling\n            ) {\n                crawl = crawl.nextSibling;\n            } else if (crawl.parentNode) {\n                if (crawl.parentNode === commonContainer) {\n                    crawl = crawl.nextSibling;\n                    diving = false;\n                }\n                else {\n                    crawl = crawl.parentNode;\n                }\n            }\n            else {\n                break;\n            }\n        }\n    }\n\n    if (id) commonContainer.removeAttribute(\"id\");\n\n    return { node: outputNodes, commonContainer };\n}\n\nfunction generateId(option) {\n    let limit = 12;\n    let prefix = \"\";\n\n    if (typeof option === \"number\") limit = option;\n    else if (typeof option === \"string\") prefix = `${option}_`;\n\n    const possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\n\n    let text = \"\";\n    for (let i = 0; i < limit - 6; i++)\n        text += possible.charAt(\n            Math.floor(Math.random() * (possible.length - 1))\n        );\n\n    const numb = new Date().getTime().toString().substring(7, 13); // SECOND, MILLISECOND\n\n    return prefix + numb + text;\n}\n\nfunction climbUpToEldestParent(node, wrapper, singleChildParent = false, callback) {\n    callback =\n        callback ||\n        ((n) => {\n            return n;\n        });\n\n    if (!(wrapper instanceof Node) || wrapper?.nodeType === 3)\n        throw new Error(\"invalid wrapper node\");\n\n    let id;\n    let uniqueId =\n        wrapper.id ||\n        (() => {\n            id = generateId(\"eldest\");\n            wrapper.id = id;\n            return id;\n        })();\n    // on single parent mode climb up if parent has only 1 child or 2 child with zero space text\n    function isSingleChildParent(n) {\n        if (!n || n.nodeType === 3) return false;\n\n        let childrenCount = n?.children?.length;\n        return (\n            childrenCount === 0 ||\n            (() => {\n                let sweep = n.childNodes.length;\n                let divCount = 0;\n                let iHaveText = false;\n\n                while (sweep--) {\n                    let s = n.childNodes[sweep];\n\n                    if (\n                        s.nodeType === 3 &&\n                        s.textContent.length > 0 &&\n                        s.textContent !== \"\\u200B\"\n                    )\n                        iHaveText = true;\n                    else if (s.nodeType === 1 && s.nodeName !== \"BR\") divCount++;\n\n                    // if (divCount > 1 || divCount && iHaveText)\n                    if ((divCount > 1 && !iHaveText) || (divCount && iHaveText))\n                        return false;\n                }\n\n                return true;\n            })()\n        );\n    }\n    while (\n        node?.id !== uniqueId &&\n        node.parentNode &&\n        node.parentNode.closest(\"#\" + uniqueId) &&\n        node.parentNode.id !== uniqueId &&\n        (singleChildParent ? isSingleChildParent(node?.parentNode) : true)\n    ) {\n        let cb = callback(node.parentNode);\n\n        if (!cb || cb === \"BREAK\") break;\n\n        node = cb;\n    }\n\n    if (id) wrapper.removeAttribute(\"id\");\n\n    return node;\n}\n\nfunction prepareSelection() {\n    let sel = window.getSelection();\n    if (!sel) {\n        this.range = null;\n        this.commandTracker = {};\n        return;\n    }\n    let anchorElement =\n        sel.anchorNode?.nodeType === 3\n            ? sel.anchorNode.parentNode\n            : sel.anchorNode;\n\n    let focusElement =\n        sel.focusNode?.nodeType === 3\n            ? sel.focusNode.parentNode\n            : sel.focusNode;\n\n    if (anchorElement?.closest(`#${this.elementId}`) && focusElement?.closest(`#${this.elementId}`)) {\n        let lastChild = this.element.lastChild;\n        if (!lastChild) {\n            // Wysiwyg is empty\n            lastChild = this._createEmptyParagraph();\n            this.element.appendChild(lastChild);\n\n            // Adjust selection\n            this.range = adjustSelection({\n                node: lastChild,\n                position: true,\n            }, this.ceilingElement_queryArray);\n        }\n        else {\n            this.range = adjustSelection(null);\n        }\n    }\n    else {\n        this.range = null;\n        this.commandTracker = {};\n        return;\n    }\n}\n\nfunction selectionChange() {\n    prepareSelection.bind(this)();\n\n    if(!this.range) {\n        return;\n    }\n\n    //  track commandTracker\n    let ct = {};\n    for (let style in this.styleTagOfCommand) {\n        ct[style] = false;\n    }\n\n    let [startLine, endLine, inBetween] = this._getStartEndLine(\n        this.range,\n        this.element,\n        true\n    );\n    this.range.startLine = startLine;\n    this.range.endLine = endLine;\n    this.range.inBetween = inBetween;\n\n    let restricted = this.restrictedElement_queryArray.concat(\n        this.specialTextElement_queryArray\n    );\n\n    let crawlResult = nodeCrawler(\n        (node) => {\n            if (\n                (node.nodeType === 1 && node.closest(\"blockquote\")) ||\n                (node.nodeType === 3 && node.parentNode.closest(\"blockquote\"))\n            )\n                ct.quote = true;\n\n\n            for (let c of restricted) {\n                if (node.nodeType === 3\n                    ? node.parentNode.closest(c)\n                    : node.nodeType === 1\n                        ? node.closest(c)\n                        : !(node instanceof Node)) {\n                    return node;\n                }\n            }\n\n            if (\n                node.nodeType === 3 ||\n                node.nodeName === \"BR\" ||\n                (node.nodeType === 1 &&\n                    node.childNodes.length === 1 &&\n                    (node.childNodes[0].nodeName === \"BR\" ||\n                        node.childNodes[0].nodeType === 3))\n            ) {\n                let n =\n                    node.nodeType === 3 || node.nodeName === \"BR\"\n                        ? node.parentNode\n                        : node;\n\n                let comm = this._trackStyle(n);\n                for (let c in comm) ct[c] = comm[c];\n            }\n            return node;\n        },\n        { node: this.range, parentNode: this.element }\n    );\n\n    if (!crawlResult.node.length) {\n        let comm = this._trackStyle(this.range.startContainer);\n        for (let c in comm) ct[c] = comm[c];\n    }\n\n    this.commandTracker = ct;\n    let caratPosition;\n    let caratEl = this.range.endContainer || this.range.startContainer;\n\n    if (caratEl.nodeType === 3)\n        caratPosition = this.range.getBoundingClientRect();\n    else if (caratEl.nodeType === 1)\n        caratPosition = caratEl.getBoundingClientRect();\n\n    this._callback({\n        commandTracker: ct,\n        range: this.range,\n        caratPosition,\n    }).catch((err) => console.error(err));\n    this._lastLineBlank();\n}\n\nexport { adjustSelection, nodeCrawler, generateId, climbUpToEldestParent, selectionChange, prepareSelection };\n\n\n// let sel = window.getSelection();\n// if (sel) {\n//     let anchorElement = sel.anchorNode?.nodeType === 3 ? sel.anchorNode.parentNode : sel.anchorNode;\n//     if (anchorElement && anchorElement.closest(`#${this.elementId}`)) {\n//         if (anchorElement.id === this.elementId) {\n//             // if (this._isCeilingElement(anchorElement)) {\n//             // In case selection is the wysiwyg element itself\n//             let lastChild = this.element.lastChild;\n//             if (!lastChild) {\n//                 // Wysiwyg is empty\n//                 lastChild = this._createEmptyParagraph();\n//                 this.element.appendChild(lastChild);\n\n//                 // Adjust selection\n//                 this.range = this._adjustSelection({ node: lastChild, position: true });\n//             }\n\n//         } else\n//             this.range = this._adjustSelection(null);\n\n//         if (typeof run === 'function') run();\n//         return;\n//     }\n// }\n\n// this.range = null;\n// this.commandTracker = {};\n\n// this._modifySelection(() => {\n//     let isForward = !(this.lastKey === 'DELETE' || this.lastKey === 'BACKSPACE') || this.isRangeDirectionForward;\n\n//     let rangeHeader = isForward ? this.range.endContainer : this.range.startContainer;\n//     this.lastKey = null;\n\n//     //  nudge range in-case carat is within non selectables\n//     let unSel = this._isUnSelectableElement(rangeHeader);\n//     if (unSel) {\n//         let selNext = isForward ? unSel.nextSibling : unSel.previousSibling;\n\n//         if (!selNext && !isForward) {\n//             selNext = document.createTextNode('\\u200B');\n//             unSel.parentNode.insertBefore(selNext, isForward ? unSel.nextSibling : unSel);\n//         }\n//         if (selNext)\n//             this.range = this._adjustSelection({\n//                 node: this.range.collapsed ? selNext : isForward ? [null, selNext] : [selNext, null],\n//                 position: this.range.collapsed ? isForward ? 0 : selNext.textContent.length : isForward ? [null, 0] : [0, null],\n//             });\n//     }\n\n//     //  track commandTracker\n//     let commandTracker = {};\n//     for (let style in this.styleTagOfCommand) {\n//         commandTracker[style] = false;\n//     }\n\n//     if (this._isSelectionWithinRestrictedRange()) {\n//         this.commandTracker = commandTracker;\n//         return;\n//     }\n\n//     let skipTrack = this.restrictedElement_queryArray.concat(this.specialTextElement_queryArray);\n//     let crawlResult = this._nodeCrawler((node) => {\n//         if (node.nodeType === 1 && node.closest('blockquote') || node.nodeType === 3 && node.parentNode.closest('blockquote'))\n//             commandTracker.quote = true;\n\n//         let styleRestrictedParents = (c) => {\n//             return node.nodeType === 3 ? node.parentNode.closest(c) : node.nodeType === 1 ? node.closest(c) : !(node instanceof Node);\n//         };\n\n//         for (let p of skipTrack) {\n//             let chk = styleRestrictedParents(p);\n//             if (chk)\n//                 return node;\n//         }\n\n//         if (\n//             node.nodeType === 3 ||\n//             node.nodeName === 'BR' ||\n//             node.nodeType === 1 &&\n//             node.childNodes.length === 1 &&\n//             (\n//                 node.childNodes[0].nodeName === 'BR' ||\n//                 node.childNodes[0].nodeType === 3\n//             )\n//         ) {\n\n//             let n = node.nodeType === 3 || node.nodeName === 'BR' ? node.parentNode : node;\n\n//             let comm = this._trackStyle(n);\n//             for (let c in comm)\n//                 commandTracker[c] = comm[c];\n\n//         }\n//         return node;\n//     }, { node: this.range, parentNode: this.element });\n\n//     if (!crawlResult.node.length) {\n//         let comm = this._trackStyle(this.range.startContainer);\n//         for (let c in comm)\n//             commandTracker[c] = comm[c];\n//     }\n\n//     this.commandTracker = commandTracker;\n//     let caratPosition;\n//     let caratEl = this.isRangeDirectionForward ? this.range.endContainer : this.range.startContainer;\n\n//     if (caratEl.nodeType === 3)\n//         caratPosition = this.range.getBoundingClientRect();\n//     else if (caratEl.nodeType === 1)\n//         caratPosition = caratEl.getBoundingClientRect();\n\n//     this._callback({ commandTracker, range: this.range, caratPosition }).catch(err => err);\n//     this._lastLineBlank();\n// });","const hashtag_regex =\n    /#[\\u0041-\\u005A\\u0061-\\u007A\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0\\u08A2-\\u08AC\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097F\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA697\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA80-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC\\w-]+(?:\\+[\\w-]+)*/g;\nconst hashtag_stopper_regex =\n    /[^\\u0041-\\u005A\\u0061-\\u007A\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0\\u08A2-\\u08AC\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097F\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA697\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA80-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC\\w-]/g;\nconst urllink_regex =\n    /(https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|www\\.[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9]+\\.[^\\s]{2,}|www\\.[a-zA-Z0-9]+\\.[^\\s]{2,})/gi;\n\nconst regexr = {\n    hashtag: hashtag_regex,\n    hashtag_stopper: hashtag_stopper_regex,\n    urllink: urllink_regex,\n};\n\nfunction generateId(option) {\n    let limit = 12;\n    let prefix = \"\";\n\n    if (typeof option === \"number\") limit = option;\n    else if (typeof option === \"string\") prefix = `${option}_`;\n\n    const possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\n\n    let text = \"\";\n    for (let i = 0; i < limit - 6; i++)\n        text += possible.charAt(\n            Math.floor(Math.random() * (possible.length - 1))\n        );\n\n    const numb = new Date().getTime().toString().substring(7, 13); // SECOND, MILLISECOND\n\n    return prefix + numb + text;\n}\n\nexport { regexr, generateId };","import { ColorMangle } from \"colormangle\";\nimport { adjustSelection, nodeCrawler, climbUpToEldestParent, selectionChange, prepareSelection } from \"./selectors.js\";\nimport { regexr, generateId } from \"./util.js\";\n// Add debouncing for frequent operations like selection changes\nclass Wysiwyg4All {\n    constructor(option) {\n        let {\n            elementId = \"\",\n            editable = true,\n            placeholder = \"\",\n            spellcheck = false,\n            highlightColor = \"teal\",\n            html = \"\",\n            callback,\n            fontSize = {\n                desktop: \"18px\",\n                tablet: \"16px\",\n                phone: \"14px\",\n\n                h1: 4.2,\n                h2: 3.56,\n                h3: 2.92,\n                h4: 2.28,\n                h5: 1.64,\n                h6: 1.15,\n                small: 0.8,\n            },\n            lastLineBlank = false,\n            hashtag = false,\n            urllink = false,\n            logMutation = false,\n            logExecution = false,\n        } = option;\n        // this.restoreWhenFocus = false;\n        this.hashtag = hashtag;\n        this.urllink = urllink;\n        this.logMutation = logMutation;\n        this.logExecution = logExecution;\n        this.fontSizeCssVariable = {};\n\n        if (typeof fontSize === \"number\")\n            this.fontSizeCssVariable = {\n                \"--wysiwyg-font-desktop\": `${fontSize}`,\n                \"--wysiwyg-font-tablet\": `${fontSize}`,\n                \"--wysiwyg-font-phone\": `${fontSize}`,\n            };\n        else if (typeof fontSize === \"object\" && Object.keys(fontSize).length) {\n            let hold;\n            let keyArr = [\"desktop\", \"tablet\", \"phone\"];\n\n            for (let k of keyArr) {\n                if (fontSize[k]) {\n                    hold = fontSize[k];\n                    if (typeof hold === \"number\") hold = `${hold}px`;\n                }\n                this.fontSizeCssVariable[`--wysiwyg-font-${k}`] = `${hold}`;\n            }\n        }\n\n        if (!elementId || typeof elementId !== \"string\")\n            throw new Error(\"The wysiwyg element should have an ID\");\n        elementId = elementId[0] === \"#\" ? elementId.substring(1) : elementId;\n\n        this.html = html;\n        this.elementId = elementId[0] === \"#\" ? elementId.substring(1) : elementId;\n        this.placeholder = placeholder;\n        this.spellcheck = spellcheck;\n        this.lastLineBlank = lastLineBlank;\n\n        if (typeof highlightColor === \"string\")\n            highlightColor = new ColorMangle(highlightColor).color;\n\n        this.colorScheme = highlightColor;\n        this.callback = callback || null;\n\n        this.image_array = [];\n        this.hashtag_array = [];\n        this.urllink_array = [];\n        this.custom_array = [];\n\n        this.blockElement_queryArray = [\n            \"HR\",\n            \"BLOCKQUOTE\",\n            \"UL\",\n            \"OL\",\n            \"._media_\",\n            \"._custom_\",\n        ];\n        this.specialTextElement_queryArray = [\"._hashtag_\", \"._urllink_\"];\n        this.restrictedElement_queryArray = [\"._media_\", \"._custom_\"];\n        this.textAreaElement_queryArray = [\"BLOCKQUOTE\", \"LI\"];\n        this.textBlockElement_queryArray = [\"P\", \"LI\", \"TD\", \"TH\"]; //, \"TD\", \"TH\", '._color', '._small', '._h1`', '._h2', '._h3', '._h4', '._h5', '._h6', '._b', '._i', '._u', '._del'\n        this.ceilingElement_queryArray = [\n            \"UL\",\n            \"OL\",\n            \"BLOCKQUOTE\",\n            `#${elementId}`,\n            \"TD\",\n            \"TH\",\n        ];\n        this.unSelectable_queryArray = [\n            \"._media_\",\n            \"._custom_\",\n            \"._hashtag_\",\n            \"._urllink_\",\n            \"HR\",\n        ];\n        this.styleAllowedElement_queryArray = [\n            \"._color\",\n            `#${elementId}`,\n            \"._hashtag_\",\n            \"._urllink_\",\n            \"TD\",\n            \"TH\",\n        ]; // ALLOWED ELEMENTS FOR STYLE ATTRIBUTE <... style=\"...\">\n        this.alignClass = [\"_alignCenter_\", \"_alignRight_\"];\n\n        this.hashtag_flag = false;\n        this.urllink_flag = false;\n        this.range_backup = null;\n\n        this.commandTracker = {};\n        this.range = null;\n        this.isRangeDirectionForward = true;\n        this.insertTabPending_tabString = \"\";\n        this.removeSandwichedLine_array = [];\n        this.lastKey = null;\n\n        //  setup div\n        this.element = document.getElementById(this.elementId);\n        if (!this.element) throw `element #${this.elementId} is null`;\n\n        this.element.innerHTML = \"\";\n\n        this.cssVariable = new ColorMangle().colorScheme(this.colorScheme);\n        Object.assign(this.cssVariable, this.fontSizeCssVariable);\n\n        for (const v in this.cssVariable)\n            this.element.style.setProperty(v, this.cssVariable[v]);\n\n        this.elementComputedStyle = window.getComputedStyle(this.element);\n        this.defaultFontColor = new ColorMangle(\n            this.cssVariable[\"--content-text\"]\n        ).hex();\n        this.highlightColor = new ColorMangle(\n            this.cssVariable[\"--content-focus\"]\n        ).hex();\n\n        if (!this.element.classList.contains(\"_wysiwyg4all\"))\n            this.element.classList.add(\"_wysiwyg4all\");\n\n        this.setPlaceholder(this.placeholder);\n        this.setSpellcheck(this.spellcheck);\n\n        //  re-adjust min-height depending on padding\n        let paddingB = this.elementComputedStyle.paddingBottom;\n        let paddingT = this.elementComputedStyle.paddingTop;\n        let borderT = this.elementComputedStyle.borderTopWidth;\n        let borderB = this.elementComputedStyle.borderBottomWidth;\n\n        this.element.style.minHeight = `calc(${paddingB} + ${paddingT} + ${borderT} + ${borderB} + 1.6em)`;\n\n        //  command style tag\n        const command = {\n            //  [<targetClassName>, <cssProperty>, [<string: counter tag | class name>]]\n            h1: [\"_h1\", \"fontSize\", [\"_small\", \"_h2\", \"_h3\", \"_h4\", \"_h5\", \"_h6\"]],\n            h2: [\"_h2\", \"fontSize\", [\"_small\", \"_h1\", \"_h3\", \"_h4\", \"_h5\", \"_h6\"]],\n            h3: [\"_h3\", \"fontSize\", [\"_small\", \"_h1\", \"_h2\", \"_h4\", \"_h5\", \"_h6\"]],\n            h4: [\"_h4\", \"fontSize\", [\"_small\", \"_h1\", \"_h2\", \"_h3\", \"_h5\", \"_h6\"]],\n            h5: [\"_h5\", \"fontSize\", [\"_small\", \"_h1\", \"_h2\", \"_h3\", \"_h4\", \"_h6\"]],\n            h6: [\"_h6\", \"fontSize\", [\"_small\", \"_h1\", \"_h2\", \"_h3\", \"_h4\", \"_h5\"]],\n            italic: [\"_i\", \"fontStyle\"],\n            small: [\n                \"_small\",\n                \"fontSize\",\n                [\"_h1\", \"_h2\", \"_h3\", \"_h4\", \"_h5\", \"_h6\", \"_b\"],\n            ],\n            bold: [\"_b\", \"fontWeight\", [\"_small\"]],\n            underline: [\"_u\", \"textDecoration\", [\"_del\"]],\n            strike: [\"_del\", \"textDecoration\", [\"_u\"]],\n            color: [\"_color\", \"color\"],\n        };\n\n        const fontSizeRatio = {\n            //  should always be the same em value as css\n            h1: fontSize.h1 || 4.2,\n            h2: fontSize.h2 || 3.56,\n            h3: fontSize.h3 || 2.92,\n            h4: fontSize.h4 || 2.28,\n            h5: fontSize.h5 || 1.64,\n            h6: fontSize.h6 || 1.15,\n            small: fontSize.small || 0.8,\n        };\n\n        // // font size variables\n        // --wysiwyg-h1: calc(var(--wysiwyg-font) * 4.2);\n        // --wysiwyg-h2: calc(var(--wysiwyg-font) * 3.56);\n        // --wysiwyg-h3: calc(var(--wysiwyg-font) * 2.92);\n        // --wysiwyg-h4: calc(var(--wysiwyg-font) * 2.28);\n        // --wysiwyg-h5: calc(var(--wysiwyg-font) * 1.64);\n        // --wysiwyg-h6: calc(var(--wysiwyg-font) * 1.15);\n        // --wysiwyg-small: calc(var(--wysiwyg-font) * 0.8);\n        for (const [tag, ratio] of Object.entries(fontSizeRatio)) {\n            if (typeof ratio === \"number\") {\n                this.element.style.setProperty(\n                    `--wysiwyg-${tag}`,\n                    `calc(var(--wysiwyg-font) * ${ratio})`\n                );\n            } else if (typeof ratio === \"string\") {\n                if (ratio.includes(\"px\")) {\n                    this.element.style.setProperty(`--wysiwyg-${tag}`, ratio);\n                } else if (ratio.includes(\"em\") || ratio.includes(\"rem\")) {\n                    let emSize = parseFloat(ratio);\n                    if (emSize > 0) {\n                        this.element.style.setProperty(\n                            `--wysiwyg-${tag}`,\n                            `calc(var(--wysiwyg-font) * ${emSize})`\n                        );\n                    }\n                }\n            }\n        }\n\n        this.styleTagOfCommand = {};\n        this.counterTagOf = {};\n        this.cssPropertyOf = {};\n        this.cssPropertyChecker = {\n            textDecoration: (v) => {\n                //  v = <string: value from computedStyle>\n                if (v.includes(\"underline\")) return \"underline\";\n                else if (v.includes(\"line-through\")) return \"strike\";\n\n                return false;\n            },\n            fontSize: (v) => {\n                //  v = <string: value from computedStyle>\n                let documentFontSize = parseFloat(this.elementComputedStyle.fontSize);\n                let nodeFontSize = parseFloat(v);\n                for (let tag in fontSizeRatio) {\n                    let f_size = fontSizeRatio[tag];\n\n                    if (typeof f_size === \"number\") {\n                        //  precision\n                        let compare_size = documentFontSize * f_size;\n                        let f_size_high = compare_size + 0.01;\n                        let f_size_low = compare_size - 0.01;\n                        if (f_size_high > nodeFontSize && f_size_low < nodeFontSize)\n                            return tag;\n                    } else if (typeof f_size === \"string\") {\n                        if (f_size.includes(\"px\")) {\n                            if (v === f_size) return tag;\n                        } else if (f_size.includes(\"em\") || f_size.includes(\"rem\")) {\n                            let emSize = parseFloat(f_size);\n                            if (emSize > 0) {\n                                let compare_size = documentFontSize * emSize;\n                                let f_size_high = compare_size + 0.01;\n                                let f_size_low = compare_size - 0.01;\n                                if (f_size_high > nodeFontSize && f_size_low < nodeFontSize)\n                                    return tag;\n                            }\n                        }\n                    }\n                }\n                return false;\n            },\n            fontStyle: (v) => {\n                //  v = <string: value from computedStyle>\n                if (v.includes(\"italic\")) return \"italic\";\n                return false;\n            },\n        };\n\n        for (let c in command) {\n            this.commandTracker[c] = false;\n            this.styleTagOfCommand[c] = command[c][0];\n            this.cssPropertyOf[command[c][0]] = command[c][1];\n            if (!this.cssPropertyChecker.hasOwnProperty(command[c][1]))\n                this.cssPropertyChecker[command[c][1]] = c;\n            if (command[c][2]) this.counterTagOf[command[c][0]] = command[c][2];\n        }\n\n        /**\n             this.styleTagOfCommand = {\n                [commandKey]: <targetClassName>\n             };\n    \n             this.cssPropertyChecker = {\n                [cssPropertyKey]: <commandKey | function(<cssValue>)>\n             };\n    \n             this.cssPropertyOf = {\n                [targetClassName]: <cssPropertyKey>\n             };\n    \n             this.counterTagOf = {\n                [targetClassName]: [<counterClassName>]\n             };\n    \n             this.commandTracker = {\n                [commandKey]: <boolean>\n             };\n    \n             console.log({\n                styleTagOfCommand: this.styleTagOfCommand,\n                cssPropertyChecker: this.cssPropertyChecker,\n                cssPropertyOf: this.cssPropertyOf,\n                counterTagOf: this.counterTagOf,\n                commandTracker: this.commandTracker\n             });\n             */\n\n        this.loadHTML(this.html, editable).catch((err) => {\n            throw err;\n        });\n    }\n\n    _wrapNode(node, wrapper, appendWhole = false) {\n        if (this.logExecution)\n            console.log(\"_wrapNode()\", { node, wrapper, appendWhole });\n        if (!(node instanceof Node)) return;\n\n        if (!node.parentNode) throw new Error(\"can't unwrap document fragment\");\n\n        // save current range\n        let sel = window.getSelection();\n        let range = sel.getRangeAt(0);\n        let start = null;\n        let startOffset = range.startOffset;\n        let end = null;\n        let endOffset = range.endOffset;\n\n        const withinRange = (n) => {\n            if (range.startContainer === n) {\n                start = n;\n            }\n            if (range.endContainer === n) {\n                end = n;\n            }\n        };\n\n        if (node.nodeType === 1) {\n            nodeCrawler(\n                (n) => {\n                    withinRange(n);\n                    return n;\n                },\n                { node }\n            );\n        } else withinRange(node);\n\n        if (wrapper) {\n            // place the wrapper\n            node.parentNode.insertBefore(wrapper, node);\n        }\n\n        // append node\n        if (node.nodeType === 3) {\n            if (wrapper) wrapper.append(node);\n            else throw new Error(\"no wrapper for text content\");\n        } else if (appendWhole) wrapper.append(node);\n        else\n            while (node.childNodes[0]) {\n                let child = node.childNodes[0];\n                if (wrapper) wrapper.append(child);\n                else node.parentNode.insertBefore(child, node);\n            }\n\n        let stripped;\n        if (node.nodeType === 1 && !appendWhole) {\n            let n = wrapper || node;\n            let p = n.parentNode;\n            stripped = node.previousSibling;\n            p.removeChild(node);\n        }\n\n        // restore range\n        if ((stripped || node).textContent && (start || end)) {\n            if (start && start === end && startOffset === endOffset)\n                range = adjustSelection({\n                    node: stripped || node,\n                    position: startOffset,\n                }, this.ceilingElement_queryArray);\n            else\n                range = adjustSelection({\n                    node: [start, end],\n                    position: [startOffset, endOffset],\n                }, this.ceilingElement_queryArray);\n        }\n\n        this.range = range;\n        return { node: stripped || node, range };\n    }\n\n    _getStartEndLine(\n        range = this.range,\n        element = this.element,\n        getInbetween = false\n    ) {\n        if (this.logExecution)\n            console.log(\"_getStartEndLine()\", { range, element });\n        if (!range) return [null, null, null];\n\n        let startLine = climbUpToEldestParent(range.startContainer, element);\n        let endLine = climbUpToEldestParent(range.endContainer, element);\n\n        let inBetween = [];\n        if (getInbetween) {\n            // collect all the lines in between startLine and endLine. line is a block element\n            let currentLine = startLine.nextSibling;\n            while (currentLine && currentLine !== endLine) {\n                if (\n                    currentLine.nodeType === 1 &&\n                    this.blockElement_queryArray.some((q) =>\n                        currentLine.matches(this._classNameToQuery(q))\n                    )\n                ) {\n                    inBetween.push(currentLine);\n                }\n                currentLine = currentLine.nextSibling;\n            }\n        }\n\n        return [startLine, endLine, inBetween];\n    }\n\n    _isThereContentEditableOverMyHead(node, element = this.element) {\n        if (node && node !== this.element) {\n            let flyup = node;\n            while (flyup && this.element !== flyup) {\n                if (flyup.getAttribute(\"contenteditable\") === \"true\") return true;\n\n                flyup = flyup.parentNode;\n            }\n        }\n        return false;\n    }\n\n    // Add browser-specific normalization\n    _normalizeBrowserQuirks() {\n        // Handle Firefox's extra <br> tags\n        if (navigator.userAgent.toLowerCase().indexOf('firefox') > -1) {\n            nodeCrawler((node) => {\n                if (node.nodeName === 'BR' &&\n                    (!node.nextSibling || node.nextSibling.nodeName === 'BR')) {\n                    node.remove();\n                }\n                return node;\n            }, { node: this.element });\n        }\n\n        // Handle Safari's selection quirks\n        if (navigator.userAgent.toLowerCase().indexOf('safari') > -1) {\n            // Safari-specific fixes\n        }\n    }\n\n    _isSelectionTrespassRestrictedRange(\n        range = this.range,\n        element = this.element\n    ) {\n        if (!range) {\n            if (this.logExecution)\n                console.log(\"_isSelectionTrespassRestrictedRange():true\", {\n                    range,\n                    element,\n                });\n            return true;\n        }\n\n        let { commonAncestorContainer, startContainer, endContainer, startLine, endLine, inBetween } = range;\n        let restrict = this.restrictedElement_queryArray;\n\n        if (startLine === endLine) {\n            commonAncestorContainer =\n                commonAncestorContainer.nodeType === 3\n                    ? commonAncestorContainer.parentNode\n                    : commonAncestorContainer;\n            for (let r of restrict) {\n                let cl = commonAncestorContainer.closest(this._classNameToQuery(r));\n                if (cl) {\n                    let isThere = this._isThereContentEditableOverMyHead(\n                        commonAncestorContainer,\n                        element\n                    );\n                    if (!isThere) {\n                        return true;\n                    }\n                }\n            }\n        } else if (inBetween?.length) {\n            for (let i = 0; i < inBetween.length; i++) {\n                for (let r of restrict) {\n                    if (inBetween[i].closest(this._classNameToQuery(r))) {\n                        let isThere = this._isThereContentEditableOverMyHead(inBetween[i]);\n                        if (!isThere) {\n                            return true;\n                        }\n                    }\n                }\n            }\n        }\n\n        return false;\n    }\n\n    _classNameToQuery(q) {\n        if (this.logExecution) console.log(\"_classNameToQuery()\", { q });\n        if (q.includes(\"_stop\") && q[0] !== \".\") return \".\" + q;\n        return q[0] === \"_\" ? \".\" + q : q;\n    }\n\n    _createEmptyParagraph(append) {\n        if (this.logExecution) console.log(\"_createEmptyParagraph()\", { append });\n        let p = document.createElement(\"p\");\n\n        if (append && typeof append === \"string\")\n            append = document.createTextNode(append);\n\n        p.append(append || document.createTextNode(\"\"));\n\n        if (!append) p.append(document.createElement(\"br\"));\n\n        return p;\n    }\n\n    _trackStyle(n, cls) {\n        if (this.logExecution) console.log(\"_trackStyle()\", { n, cls });\n        if (n.nodeType === 3) n = n.parentNode;\n\n        let commandTracker = {};\n        let style = window.getComputedStyle(n);\n\n        for (let c of this.alignClass) {\n            if (n.closest(\".\" + c))\n                commandTracker[c.substring(1, c.length - 1)] = true;\n        }\n\n        let checker = (sp) => {\n            let key = this.cssPropertyChecker[sp];\n            if (typeof key === \"function\") {\n                key = key(style[sp]);\n                if (key) {\n                    if (cls) return key;\n                    commandTracker[key] = true;\n                }\n            } else if (sp === \"color\" && style[sp]) {\n                let col =\n                    style[sp][0] === \"#\" ? style[sp] : new ColorMangle(style[sp]).hex();\n\n                if (col !== this.defaultFontColor) {\n                    if (cls) return col;\n                    commandTracker[key] = col;\n                }\n            } else if (\n                style[sp] !== this.elementComputedStyle[sp] &&\n                this._isTextElement(n)\n            ) {\n                if (cls) return true;\n                commandTracker[key] = true;\n            }\n            return false;\n        };\n\n        if (cls) return checker(this.cssPropertyOf[cls.toLowerCase()]);\n\n        for (let sp in this.cssPropertyChecker) {\n            checker(sp);\n        }\n\n        return commandTracker;\n    }\n\n    _lastLineBlank(force) {\n        if (this.logExecution) console.log(\"_lastLineBlank()\", { force });\n        if (this.lastLineBlank || force) {\n            let lastLine = this.element.lastChild;\n            if (\n                lastLine.nodeName !== \"P\" ||\n                (lastLine.nodeName === \"P\" &&\n                    lastLine.textContent &&\n                    lastLine.textContent !== \"\\u200B\")\n            ) {\n                this.element.append(this._createEmptyParagraph());\n            }\n        }\n    }\n\n    _keydown = (e) => {\n        if (this._isSelectionTrespassRestrictedRange()) {\n            e.preventDefault();\n            return;\n        };\n\n        prepareSelection.bind(this)();\n        if (!this.range) return;\n        let { startContainer, startOffset, collapsed, startLine, endLine, inBetween } =\n            this.range;\n\n        let key = e.key.toUpperCase();\n        let shift = e.shiftKey;\n\n        this.lastKey = key;\n\n        if (key === \"ENTER\" && e.shiftKey) {\n            // prevent shift+enter\n            if (!this.range.endLine.closest(\"LI\")) e.preventDefault();\n            return;\n        }\n\n        // delete key\n        if ([\"BACKSPACE\", \"DELETE\"].includes(key)) {\n            if (\n                (!this.element.textContent &&\n                    this.element.childNodes.length <= 1 &&\n                    this._isTextElement(this.element.childNodes[0]) &&\n                    this.element.childNodes[0] === startLine)\n                ||\n                this.element.childNodes.length === 0\n            ) {\n                if (this.logExecution) console.log(\"nothing to delete\");\n                // there is nothing to delete\n                e.preventDefault();\n                return;\n            }\n\n            if (startLine === this.element || endLine === this.element) {\n                e.preventDefault();\n                return;\n            }\n\n            let stc = this.range.startContainer;\n            if (this.range.collapsed) {\n                if (this.logExecution) console.log(\"range is collapsed\");\n                let block = (stc.nodeType === 3 ? stc.parentNode : stc).closest(\n                    \"blockquote\"\n                );\n                if (\n                    block &&\n                    block.childNodes[0] === climbUpToEldestParent(stc, block) &&\n                    this.range.startOffset === 0\n                ) {\n                    // if the block is empty and the cursor is on the first offset position within the blockquote\n                    // cursor is on the first offset position within the blockquote\n\n                    if (this.logExecution)\n                        console.log(\n                            \"block is empty and the cursor is on the first offset position within the blockquote\"\n                        );\n                    e.preventDefault();\n\n                    this.command(\"quote\");\n                    return;\n                }\n\n                if (this.range.startOffset === 0 || this.range.startOffset === 1 && (stc.textContent[0] === \"\\u200B\" || stc.textContent.length === 0)) {\n                    let prevsib = this.range.startLine.previousSibling;\n                    for (let cl of this.unSelectable_queryArray) {\n                        // check if startLine element has a class name cl\n                        // if cl starts with . then it's a class name\n                        if (cl[0] === \".\") {\n                            cl = cl.substring(1);\n                            if (prevsib && prevsib.classList.contains(cl))\n                                prevsib.remove();\n                        }\n                        else {\n                            if (prevsib && prevsib.tagName === cl)\n                                prevsib.remove();\n                        }\n                    }\n                }\n            }\n            if (startLine !== endLine) {\n                for (let cl of this.unSelectable_queryArray) {\n                    // check if startLine element has a class name cl\n                    // if cl starts with . then it's a class name\n                    if (cl[0] === \".\") {\n                        cl = cl.substring(1);\n                        if (startLine.classList.contains(cl))\n                            startLine.remove();\n                        if (endLine.classList.contains(cl))\n                            endLine.remove();\n                    }\n                    else {\n                        if (startLine.tagName === cl)\n                            startLine.remove();\n                        if (endLine.tagName === cl)\n                            endLine.remove();\n                    }\n                }\n            }\n            return;\n        }\n\n        //  hashtag flag\n        if (key === \"#\" && !this.hashtag_flag) {\n            this.hashtag_flag = true;\n            return;\n        }\n\n        //  url flag\n        if ([\":\", \"/\", \".\"].includes(key) && !this.urllink_flag) {\n            this.urllink_flag = true;\n            return;\n        }\n\n        // insert hashtag | urllink\n        if (\n            (this.hashtag_flag || this.urllink_flag) &&\n            ([\" \", \"ENTER\", \"TAB\"].includes(key) || key.includes(\"ARROW\"))\n        ) {\n            this._replaceText();\n            // return;\n        }\n\n        if (key === \"TAB\") {\n            e.preventDefault();\n            let sweep_array = [];\n\n            if (!collapsed) {\n                let sweep = startLine;\n                while (sweep && sweep !== endLine) {\n                    sweep_array.push(sweep);\n                    sweep = sweep.nextSibling;\n                }\n                sweep_array.push(endLine);\n            }\n\n            if (shift) {\n                // delete indent\n                let hasIndent = false;\n                let diveAndRemoveTab = (n) => {\n                    while (n.childNodes[0]) {\n                        n = n.childNodes[0];\n\n                        while (n.nodeType === 3 && !n.textContent) n = n.nextSibling;\n\n                        if (n.nodeType === 3 && n.textContent[0] === \"\\t\") {\n                            hasIndent = true;\n                            n.textContent = n.textContent.substring(1);\n                            break;\n                        }\n                    }\n                };\n                if (sweep_array.length) {\n                    for (let n of sweep_array) {\n                        if (n.textContent[0] === \"\\t\") diveAndRemoveTab(n);\n                    }\n                    if (hasIndent)\n                        adjustSelection({\n                            node: [startLine, endLine],\n                            position: [true, false],\n                        }, this.ceilingElement_queryArray);\n                } else if (startLine.textContent[0] === \"\\t\") {\n                    let lineOffset = (line, container, containerOffset) => {\n                        if (line === container) return containerOffset;\n\n                        nodeCrawler(\n                            (n) => {\n                                if (container === n) return \"BREAK\";\n\n                                if (n.nodeType === 3 && n.textContent.length)\n                                    containerOffset += n.textContent.length;\n\n                                return n;\n                            },\n                            { node: line }\n                        );\n                        return containerOffset;\n                    };\n\n                    let offset =\n                        lineOffset(startLine, startContainer, startOffset) - 1;\n                    offset = offset < 0 ? 0 : offset;\n\n                    diveAndRemoveTab(startLine);\n                    if (hasIndent)\n                        adjustSelection({ node: startLine, position: offset }, this.ceilingElement_queryArray);\n                }\n            } else {\n                // indent\n                if (sweep_array.length) {\n                    let hasIndent = false;\n                    for (let n of sweep_array) {\n                        hasIndent = true;\n                        let tab = document.createTextNode(\"\\t\");\n                        n.insertBefore(tab, n.childNodes[0]);\n                    }\n                    if (hasIndent)\n                        adjustSelection({\n                            node: [startLine, endLine],\n                            position: [true, false],\n                        }, this.ceilingElement_queryArray);\n                } else {\n                    let tab = document.createTextNode(\"\\t\");\n                    this.range.insertNode(tab);\n                    adjustSelection({ node: tab, position: false }, this.ceilingElement_queryArray);\n                }\n            }\n            return;\n        }\n\n        if (key === \"ENTER\") {\n            //  remove zero space\n            if (\n                collapsed &&\n                (startContainer.textContent.includes(\"\\u200B\") ||\n                    !startContainer.textContent)\n            ) {\n                nodeCrawler(\n                    (n) => {\n                        if (\n                            n.nodeType === 3 &&\n                            (n.textContent === \"\\u200B\" || !n.textContent)\n                        ) {\n                            n.remove();\n                        }\n\n                        return n;\n                    },\n                    {\n                        node:\n                            startContainer.nodeType === 3\n                                ? startContainer.parentNode\n                                : startContainer,\n                    }\n                );\n            }\n\n            if (endLine.textContent[0] === \"\\t\") {\n                for (let s of endLine.textContent) {\n                    if (s === \"\\t\") this.insertTabPending_tabString += \"\\t\";\n                    else break;\n                }\n            }\n        }\n    }\n\n    _normalize = (e) => {\n        // e.stopPropagation();\n        prepareSelection.bind(this)();\n        if (!this.range) return;\n\n        if (this._isSelectionTrespassRestrictedRange())\n            return;\n\n        this._normalizeDocument(true);\n        this.range_backup = this.range.cloneRange();\n        this._replaceText(true);\n    }\n\n    _paste = async (e) => {\n        e.preventDefault();\n        if (this._isSelectionTrespassRestrictedRange()) return;\n\n        prepareSelection.bind(this)();\n        if (!this.range) return;\n\n        let doc = await this._callback({ paste: e });\n        if (!doc) {\n            doc = document.createDocumentFragment();\n            doc.textContent = e.clipboardData\n                .getData(\"text/plain\")\n                .replace(/\\n\\n/g, \"\\n\");\n\n            if (doc.textContent.includes(\"#\")) {\n                this.hashtag_flag = true;\n            }\n\n            //  url flag\n            for (let u of [\":\", \"/\", \".\"]) {\n                doc.textContent.includes(u);\n                this.urllink_flag = true;\n            }\n        }\n        if (!(doc instanceof DocumentFragment)) {\n            throw new Error(\"Content to paste should be DocumentFragment\");\n        }\n\n        if (!this.range.collapsed) this.range.extractContents();\n        this.range.insertNode(doc);\n    }\n\n    _keyup = () => {\n        if (this.removeSandwichedLine_array.length)\n            while (this.removeSandwichedLine_array.length)\n                this.removeSandwichedLine_array.pop().remove();\n    }\n\n    _setEventListener(listen) {\n        if (this.logExecution) console.log(\"_setEventListener()\", { listen });\n        /**\n         * keydown -> observer(dom change) -> selection change -> click | keyup\n         */\n\n        this.imgInput = null;\n\n        if (!listen) return;\n\n        //  image selector\n        let imgInput = document.createElement(\"input\");\n        for (const [key, value] of Object.entries({\n            id: generateId(\"imageInput\"),\n            type: \"file\",\n            accept: \"image/gif,image/png,image/jpeg,image/webp\",\n            hidden: true,\n            multiple: true,\n        })) {\n            imgInput.setAttribute(key, value);\n        }\n\n        this.imgInput = imgInput;\n        this.imgInput.addEventListener(\"change\", (e) => {\n            this._imageSelected(e).catch((err) => {\n                console.error(err);\n            });\n        });\n\n        document.addEventListener(\"selectionchange\", selectionChange.bind(this));\n        this.element.addEventListener(\"keydown\", this._keydown);\n        // this.element.addEventListener(\"mousedown\", this._normalize);\n        // this.element.addEventListener('blur', this._normalize);\n        // fuck safari, firefox\n        window.addEventListener(\"mousedown\", this._normalize);\n        this.element.addEventListener(\"paste\", this._paste);\n        this.element.addEventListener(\"keyup\", this._keyup);\n    }\n\n    // Current code doesn't properly clean up event listeners\n    destroy() {\n        this.observer.disconnect();\n        document.removeEventListener(\"selectionchange\", selectionChange.bind(this));\n        this.element.removeEventListener(\"keydown\", this._keydown);\n        // this.element.removeEventListener(\"mousedown\", this._normalize);\n        window.removeEventListener(\"mousedown\", this._normalize);\n        this.element.removeEventListener(\"paste\", this._paste);\n        this.element.removeEventListener(\"keyup\", this._keyup);\n    }\n\n    _observeMutation(track) {\n        if (this.observer) this.observer.disconnect();\n\n        this.observer = null;\n\n        if (!track) return;\n\n        this._elementRemovalObserver = new MutationObserver((mutations) => {\n            for (const mutation of mutations) {\n                for (const removedNode of mutation.removedNodes) {\n                    if (removedNode === this.element) {\n                        // Element was removed from DOM\n                        if (this.logExecution) console.log(\"wysiwyg element removed from DOM\");\n                        this.destroy(); // Clean up listeners, observers, etc.\n                        // Optionally, emit a callback or event here\n                    }\n                }\n            }\n        });\n\n        this._elementRemovalObserver.observe(this.element.parentNode, {\n            childList: true,\n        });\n\n        // this.observer = new MutationObserver((mutation_array) => {\n        //     if (this.logMutation) {\n        //         let monitor = mutation_array.map((m) => {\n        //             return {\n        //                 target: m.target.cloneNode(true),\n        //                 type: m.type,\n        //                 name: m.attributeName,\n        //                 added: (() => {\n        //                     let clones = [];\n        //                     for (let a of m.addedNodes) {\n        //                         if (a.nodeType === 3) clones.push(a.textContent);\n        //                         else clones.push(a.cloneNode(true));\n        //                     }\n        //                     return clones;\n        //                 })(),\n        //                 removed: (() => {\n        //                     let clones = [];\n        //                     for (let r of m.removedNodes) {\n        //                         if (r.nodeType === 3) clones.push(r.textContent);\n        //                         else clones.push(r.cloneNode(true));\n        //                     }\n        //                     return clones;\n        //                 })(),\n        //             };\n        //         });\n\n        //         let mutate = [];\n        //         for (let m of monitor) {\n        //             if (m.type === \"childList\" || m.attributeName === \"class\")\n        //                 mutate.push(m);\n        //         }\n\n        //         if (mutate.length)\n        //             this._callback({ mutation: mutate }).catch((err) => err);\n        //     }\n\n        //     for (const mutation of mutation_array) {\n        //         /** changes in attributes */\n        //         if (mutation.type === \"attributes\") {\n        //             const { target, attributeName } = mutation;\n        //             if (attributeName === \"class\") {\n        //                 if (\n        //                     target.parentNode &&\n        //                     !target.classList.length &&\n        //                     !(\n        //                         this._isTextBlockElement(target) ||\n        //                         this._isBlockElement(target) ||\n        //                         target.nodeName === \"P\"\n        //                     )\n        //                 ) {\n        //                     // this._unwrapElement(target);\n        //                     this._wrapNode(target);\n        //                 }\n        //                 if (!target.classList.length) target.removeAttribute(\"class\");\n        //             }\n        //             //  prevent style attributes\n        //             if (attributeName === \"style\" && !this._isStyleAllowedElement(target))\n        //                 target.removeAttribute(\"style\");\n        //             continue;\n        //         }\n\n        //         /** changes in node */\n        //         if (mutation.type === \"childList\") {\n        //             let mutationTarget = mutation.target;\n\n        //             /** removed nodes */\n        //             if (mutation.removedNodes.length) {\n        //                 for (let m of mutation.removedNodes) {\n        //                     /**\n        //                      *  CAUTION!\n        //                      *  changing the order of if statements below can lead to critical flaw\n        //                      *  _custom_ class should always be checked after _urllink_ and _hashtag_\n        //                      */\n\n        //                     let callbackRemoved = (what, m) => {\n        //                         if (!m.id) return;\n\n        //                         let arrIdx = this[`${what}_array`].length;\n        //                         let removed;\n\n        //                         while (arrIdx--) {\n        //                             let got = this[`${what}_array`][arrIdx];\n        //                             if (got.elementId === m.id) {\n        //                                 removed = this[`${what}_array`].splice(arrIdx, 1);\n        //                                 break;\n        //                             }\n        //                         }\n\n        //                         if (removed) {\n        //                             this._callback({ removed: { [what]: removed } });\n        //                         }\n        //                     };\n\n        //                     if (m?.classList?.contains(\"_media_\")) {\n        //                         // let child = m.childNodes;\n        //                         // let childIdx = child.length;\n        //                         // while (childIdx--) {\n        //                         // let c = child[childIdx];\n\n        //                         // switch (c.nodeName) {\n        //                         switch (m.nodeName) {\n        //                             case \"IMG\":\n        //                                 // callbackRemoved(\"image\", c);\n        //                                 callbackRemoved(\"image\", m);\n        //                                 break;\n        //                         }\n        //                         // }\n        //                         continue;\n        //                     }\n\n        //                     let toBreak = false;\n        //                     for (let t of [\"hashtag\", \"urllink\", \"custom\"]) {\n        //                         if (m?.id?.includes(t)) {\n        //                             callbackRemoved(t, m);\n        //                             toBreak = true;\n        //                             break;\n        //                         }\n        //                     }\n\n        //                     toBreak = false;\n\n        //                     if (\n        //                         this._isCeilingElement(mutationTarget) &&\n        //                         (() => {\n        //                             let idx = mutationTarget.childNodes.length;\n        //                             if (idx)\n        //                                 while (idx--) {\n        //                                     let node = mutationTarget.childNodes[idx];\n        //                                     if (node.nodeType === 1 || node.textContent) {\n        //                                         return false;\n        //                                     }\n        //                                 }\n        //                             return true;\n        //                         })()\n        //                     ) {\n        //                         mutationTarget.remove();\n        //                         continue;\n        //                     }\n\n        //                     if (\n        //                         this._isTextBlockElement(mutationTarget) &&\n        //                         mutationTarget.childNodes.length === 1 &&\n        //                         this._isUnSelectableElement(mutationTarget.childNodes[0])\n        //                     )\n        //                         mutationTarget.append(document.createTextNode(\"\"));\n        //                 }\n        //             }\n\n        //             /** added nodes */\n        //             if (mutation.addedNodes.length)\n        //                 for (let i of mutation.addedNodes) {\n        //                     let getBr = (n) => {\n        //                         let idx = n?.childNodes?.length;\n        //                         let br = [];\n        //                         while (idx--) {\n        //                             let c = n.childNodes[idx];\n        //                             if (c.nodeName === \"BR\") br.push(c);\n        //                         }\n        //                         return br;\n        //                     };\n\n        //                     if (i.nodeType === 3) {\n        //                         // wrap all eldest text node\n        //                         if (this._isCeilingElement(mutationTarget))\n        //                             this._wrapNode(i, document.createElement(\"p\"));\n        //                         // remove <br> when there is text\n        //                         else if (i.textContent && i.textContent !== \"\\u200B\") {\n        //                             // prevent br added to line\n        //                             let br = getBr(mutationTarget);\n        //                             if (br.length) for (let b of br) b.remove();\n        //                         }\n\n        //                         continue;\n        //                     }\n\n        //                     if (i.nodeType === 1) {\n        //                         if (i.childNodes.length > 0 && i.firstChild.tagName !== \"BR\") {\n        //                             let br = getBr(mutationTarget);\n        //                             if (br.length) for (let b of br) b.remove();\n        //                         }\n\n        //                         let node = (() => {\n        //                             let isWysiwygChild =\n        //                                 i.closest(`#${this.elementId}`) && i.id !== this.elementId;\n        //                             let isWysiwygEldestChild = (() => {\n        //                                 if (!isWysiwygChild) return false;\n\n        //                                 return this._isCeilingElement(mutationTarget);\n        //                             })();\n\n        //                             let ceiling = (() => {\n        //                                 for (let c of this.ceilingElement_queryArray) {\n        //                                     let clo = i.closest(c);\n        //                                     if (clo) return clo;\n        //                                 }\n        //                                 return null;\n        //                             })();\n\n        //                             let line = isWysiwygEldestChild\n        //                                 ? i\n        //                                 : isWysiwygChild &&\n        //                                 (() => {\n        //                                     let m = i;\n        //                                     while (m && !this._isCeilingElement(m.parentNode)) {\n        //                                         m = m.parentNode;\n        //                                     }\n        //                                     return m;\n        //                                 })();\n\n        //                             return {\n        //                                 isWysiwygChild,\n        //                                 isWysiwygEldestChild,\n        //                                 isMediaElement: i.closest(\"._media_\"),\n        //                                 isBlockQuoteElement: i.closest(\"blockquote\"),\n        //                                 isCustomElement: i.closest(\"._custom_\"),\n        //                                 isHashtagElement: i.closest(\"._hashtag_\"),\n        //                                 isUrlLinkElement: i.closest(\"._urllink_\"),\n        //                                 ceiling,\n        //                                 line,\n        //                             };\n        //                         })();\n\n        //                         if (!node.isWysiwygChild) continue; // bypass\n\n        //                         if (\n        //                             node.isCustomElement ||\n        //                             node.isMediaElement ||\n        //                             node.isHashtagElement ||\n        //                             node.isUrlLinkElement\n        //                         ) {\n        //                             // // make sure un-editable element is secure\n        //                             // let el =\n        //                             //   node.isCustomElement ||\n        //                             //   node.isMediaElement ||\n        //                             //   node.isHashtagElement ||\n        //                             //   node.isUrlLinkElement;\n\n        //                             // // check if el has a value of contenteditable\n        //                             // if (el.getAttribute(\"contenteditable\") !== \"true\")\n        //                             //   el.setAttribute(\"contenteditable\", \"false\");\n\n        //                             continue;\n        //                         }\n\n        //                         if (\n        //                             !(\n        //                                 node.isWysiwygEldestChild &&\n        //                                 (this._isBlockElement(i) || this._isTextBlockElement(i))\n        //                             ) &&\n        //                             i.nodeName !== \"BR\" &&\n        //                             !i.classList.length\n        //                         ) {\n        //                             // unwrap anything that does not have class and is not block level text\n        //                             this._wrapNode(i);\n        //                             continue;\n        //                         }\n\n        //                         if (\n        //                             (() => {\n        //                                 if (this._isStyleAllowedElement(i)) return false;\n\n        //                                 for (let sa of this.restrictedElement_queryArray) {\n        //                                     if (i.closest(sa)) return false;\n        //                                 }\n\n        //                                 return true;\n        //                             })()\n        //                         )\n        //                             //  remove style attribute if not allowed\n        //                             i.removeAttribute(\"style\");\n\n        //                         if (\n        //                             node.isWysiwygEldestChild &&\n        //                             !(this._isBlockElement(i) || this._isTextBlockElement(i))\n        //                         ) {\n        //                             //  wrap eldest non text block element to p\n        //                             if (i.nodeName === \"BR\") i.remove();\n        //                             else this._wrapNode(i, document.createElement(\"p\"), true);\n        //                             continue;\n        //                         }\n\n        //                         if (\n        //                             mutationTarget.textContent &&\n        //                             mutationTarget.textContent !== \"\\u200B\"\n        //                         ) {\n        //                             // prevent br added to line\n        //                             let br = getBr(mutationTarget);\n        //                             let doContinue = false;\n        //                             if (br.length)\n        //                                 for (let b of br) {\n        //                                     if (b === i) doContinue = true;\n        //                                     b.remove();\n        //                                 }\n        //                             if (doContinue) continue;\n        //                         }\n\n        //                         if (node.isWysiwygEldestChild && !this._isCeilingElement(i)) {\n        //                             // add tab on new line created by pressing enter\n        //                             if (this.insertTabPending_tabString) {\n        //                                 let tab = document.createTextNode(\n        //                                     this.insertTabPending_tabString\n        //                                 );\n        //                                 node.line.insertBefore(tab, node.line.childNodes[0]);\n        //                                 this.insertTabPending_tabString = \"\";\n        //                                 adjustSelection({ node: tab, position: false }, this.ceilingElement_queryArray);\n        //                             }\n\n        //                             // if empty text block is added add br\n        //                             if (\n        //                                 !node.line.textContent ||\n        //                                 node.line.textContent === \"\\u200B\"\n        //                             ) {\n        //                                 let addBr = true;\n        //                                 nodeCrawler(\n        //                                     (n) => {\n        //                                         if (n.nodeName === \"BR\") {\n        //                                             addBr = false;\n        //                                             return \"BREAK\";\n        //                                         }\n        //                                         return n;\n        //                                     },\n        //                                     { node: node.line }\n        //                                 );\n\n        //                                 if (addBr) node.line.append(document.createElement(\"br\"));\n        //                             }\n\n        //                             continue;\n        //                         }\n\n        //                         let classSet = (c) => {\n        //                             let counter = this.counterTagOf[c] || [];\n\n        //                             if (counter.length)\n        //                                 counter = counter.concat(\n        //                                     counter.map((m) => {\n        //                                         return m + \"_stop\";\n        //                                     })\n        //                                 );\n\n        //                             return [\n        //                                 c,\n        //                                 c.includes(\"_stop\") ? c.replace(\"_stop\", \"\") : c + \"_stop\",\n        //                             ].concat(counter);\n        //                         };\n\n        //                         let toUnwrap = [];\n\n        //                         if (i.classList.length) {\n        //                             climbUpToEldestParent(i, node.ceiling, true, (n) => {\n        //                                 let cIdx = i.classList.length;\n        //                                 while (cIdx--) {\n        //                                     if (\n        //                                         (() => {\n        //                                             let set = classSet(i.classList[cIdx]);\n        //                                             for (let s of set) {\n        //                                                 if (n.classList.contains(s)) return true;\n        //                                             }\n        //                                             return false;\n        //                                         })()\n        //                                     )\n        //                                         toUnwrap.push(n);\n        //                                 }\n\n        //                                 return n;\n        //                             });\n        //                         }\n\n        //                         let idx = toUnwrap.length;\n\n        //                         while (idx--) {\n        //                             // unwrap unnecessary counter parents\n        //                             this._wrapNode(toUnwrap[idx]);\n        //                         }\n\n        //                         let class_idx = i.classList.length;\n        //                         while (class_idx--) {\n        //                             let className = i.classList[class_idx];\n        //                             let curSt = this._trackStyle(\n        //                                 i,\n        //                                 className.replace(\"_stop\", \"\")\n        //                             );\n        //                             let parSt = this._trackStyle(\n        //                                 i.parentNode,\n        //                                 className.replace(\"_stop\", \"\")\n        //                             );\n\n        //                             if (curSt === parSt)\n        //                                 // remove style class if parent shares the same style\n        //                                 i.classList.remove(className);\n        //                         }\n\n        //                         if (!i.classList.length) {\n        //                             // remove style attribute if there is no class\n        //                             i.removeAttribute(\"class\");\n        //                         }\n\n        //                         if (\n        //                             this._isTextBlockElement(mutationTarget) &&\n        //                             mutationTarget.childNodes.length === 1 &&\n        //                             this._isUnSelectableElement(mutationTarget.childNodes[0])\n        //                         )\n        //                             mutationTarget.append(document.createTextNode(\"\"));\n        //                     }\n        //                 }\n        //         }\n        //     }\n        // });\n\n        this.observer = new MutationObserver(mutation_array => {\n\n            if (this.logMutation) {\n                let monitor = mutation_array.map(m => {\n                    return {\n                        target: m.target.cloneNode(true),\n                        type: m.type,\n                        name: m.attributeName,\n                        added: (() => {\n                            let clones = [];\n                            for (let a of m.addedNodes) {\n                                if (a.nodeType === 3)\n                                    clones.push(a.textContent);\n                                else\n                                    clones.push(a.cloneNode(true));\n                            }\n                            return clones;\n                        })(),\n                        removed: (() => {\n                            let clones = [];\n                            for (let r of m.removedNodes) {\n                                if (r.nodeType === 3)\n                                    clones.push(r.textContent);\n                                else\n                                    clones.push(r.cloneNode(true));\n                            }\n                            return clones;\n                        })()\n                    };\n                });\n\n                let mutate = [];\n                for (let m of monitor) {\n                    if (m.type === 'childList' || m.attributeName === 'class')\n                        mutate.push(m);\n                }\n\n                if (mutate.length)\n                    this._callback({ mutation: mutate }).catch(_ => {\n                    });\n            }\n\n            for (const mutation of mutation_array) {\n\n                /** changes in attributes */\n                if (mutation.type === 'attributes') {\n                    const { target, attributeName } = mutation;\n                    if (attributeName === 'class') {\n                        if (target.parentNode && !target.classList.length && !(this._isTextBlockElement(target) || this._isBlockElement(target) || target.nodeName === 'P')) {\n                            // this._unwrapElement(target);\n                            this._wrapNode(target);\n                        }\n                        if (!target.classList.length)\n                            target.removeAttribute('class');\n                    }\n                    //  prevent style attributes\n                    if (attributeName === 'style' && !this._isStyleAllowedElement(target))\n                        target.removeAttribute('style');\n                    continue;\n                }\n\n                /** changes in node */\n                if (mutation.type === 'childList') {\n                    let mutationTarget = mutation.target;\n\n                    /** removed nodes */\n                    if (mutation.removedNodes.length) {\n                        for (let m of mutation.removedNodes) {\n\n                            /**\n                             *  CAUTION!\n                             *  changing the order of if statements below can lead to critical flaw\n                             *  _custom_ class should always be checked after _urllink_ and _hashtag_\n                             */\n\n                            let callbackRemoved = (what, m) => {\n                                if (!m.id)\n                                    return;\n\n                                let arrIdx = this[`${what}_array`].length;\n                                let removed;\n\n                                while (arrIdx--) {\n                                    let got = this[`${what}_array`][arrIdx];\n                                    if (got.elementId === m.id) {\n                                        removed = this[`${what}_array`].splice(arrIdx, 1);\n                                        break;\n                                    }\n                                }\n\n                                if (removed) {\n                                    this._callback({ removed: { [what]: removed } }).catch(err => {\n                                        throw err;\n                                    });\n                                }\n                            };\n\n                            if (m?.classList?.contains('_media_')) {\n                                let child = m.childNodes;\n                                let childIdx = child.length;\n                                while (childIdx--) {\n                                    let c = child[childIdx];\n                                    switch (c.nodeName) {\n                                        case 'IMG':\n                                            callbackRemoved('image', c);\n                                            break;\n                                    }\n                                }\n                                continue;\n                            }\n\n                            let toBreak = false;\n                            for (let t of ['hashtag', 'urllink', 'custom']) {\n                                if (m?.id?.includes(t)) {\n                                    callbackRemoved(t, m);\n                                    toBreak = true;\n                                    break;\n                                }\n                            }\n\n                            toBreak = false;\n\n                            //this._isCeilingElement(mutationTarget) &&\n                            if ((() => {\n                                let idx = mutationTarget.childNodes.length;\n                                if (idx)\n                                    while (idx--) {\n                                        let node = mutationTarget.childNodes[idx];\n                                        if (node.nodeType === 1 || node.textContent) {\n                                            return false;\n                                        }\n                                    }\n                                return true;\n                            })()) {\n                                mutationTarget.remove();\n                                continue;\n                            }\n\n                            if (this._isTextBlockElement(mutationTarget) && mutationTarget.childNodes.length === 1\n                                && this._isUnSelectableElement(mutationTarget.childNodes[0]))\n                                mutationTarget.append(document.createTextNode(''));\n                        }\n                    }\n\n                    /** added nodes */\n                    if (mutation.addedNodes.length)\n                        for (let i of mutation.addedNodes) {\n\n                            let getBr = (n) => {\n                                let idx = n?.childNodes?.length;\n                                let br = [];\n                                while (idx--) {\n                                    let c = n.childNodes[idx];\n                                    if (c.nodeName === 'BR')\n                                        br.push(c);\n                                }\n                                return br;\n                            };\n\n                            if (i.nodeType === 3) {\n                                // wrap all eldest text node\n                                if (this._isCeilingElement(mutationTarget))\n                                    this._wrapNode(i, document.createElement('p'));\n\n                                // remove <br> when there is text\n                                else if (i.textContent && i.textContent !== '\\u200B') {\n                                    // prevent br added to line\n                                    let br = getBr(mutationTarget);\n                                    if (br.length)\n                                        for (let b of br)\n                                            b.remove();\n                                }\n\n                                continue;\n                            }\n\n                            if (i.nodeType === 1) {\n\n                                let node = (() => {\n                                    let isWysiwygChild = i.closest(`#${this.elementId}`) && i.id !== this.elementId;\n                                    let isWysiwygEldestChild = (() => {\n                                        if (!isWysiwygChild)\n                                            return false;\n\n                                        return this._isCeilingElement(mutationTarget);\n                                    })();\n\n                                    let ceiling = (() => {\n                                        for (let c of this.ceilingElement_queryArray) {\n                                            let clo = i.closest(c);\n                                            if (clo)\n                                                return clo;\n                                        }\n                                        return null;\n                                    })();\n\n                                    let line = isWysiwygEldestChild ? i : isWysiwygChild && (() => {\n                                        let m = i;\n                                        while (m && !this._isCeilingElement(m.parentNode)) {\n                                            m = m.parentNode;\n                                        }\n                                        return m;\n                                    })();\n\n                                    return {\n                                        isWysiwygChild,\n                                        isWysiwygEldestChild,\n                                        isMediaElement: i.closest('._media_'),\n                                        isBlockQuoteElement: i.closest('blockquote'),\n                                        isCustomElement: i.closest('._custom_'),\n                                        isHashtagElement: i.closest('._hashtag_'),\n                                        isUrlLinkElement: i.closest('._urllink_'),\n                                        ceiling,\n                                        line\n                                    };\n                                })();\n\n                                if (!node.isWysiwygChild)\n                                    continue; // bypass\n\n                                if (\n                                    node.isCustomElement ||\n                                    node.isMediaElement ||\n                                    node.isHashtagElement ||\n                                    node.isUrlLinkElement\n                                ) {\n                                    // make sure un-editable element is secure\n                                    (node.isCustomElement ||\n                                        node.isMediaElement ||\n                                        node.isHashtagElement ||\n                                        node.isUrlLinkElement).setAttribute('contenteditable', 'false');\n                                    continue;\n                                }\n\n                                if (!(node.isWysiwygEldestChild && (this._isBlockElement(i) || this._isTextBlockElement(i))) &&\n                                    i.nodeName !== 'BR' &&\n                                    !i.classList.length) {\n                                    // unwrap anything that does not have class and is not block level text\n                                    this._wrapNode(i);\n                                    continue;\n                                }\n\n                                if ((() => {\n                                    if (this._isStyleAllowedElement(i))\n                                        return false;\n\n                                    for (let sa of this.restrictedElement_queryArray) {\n                                        if (i.closest(sa))\n                                            return false;\n                                    }\n\n                                    return true;\n                                })())\n                                    //  remove style attribute if not allowed\n                                    i.removeAttribute('style');\n\n                                if (node.isWysiwygEldestChild && !(this._isBlockElement(i) || this._isTextBlockElement(i))) {\n                                    //  wrap eldest non text block element to p\n                                    if (i.nodeName === 'BR')\n                                        i.remove();\n                                    else\n                                        this._wrapNode(i, document.createElement('p'), true);\n                                    continue;\n                                }\n\n                                if (mutationTarget.textContent && mutationTarget.textContent !== '\\u200B') {\n                                    // prevent br added to line\n                                    let br = getBr(mutationTarget);\n                                    let doContinue = false;\n                                    if (br.length)\n                                        for (let b of br) {\n                                            if (b === i)\n                                                doContinue = true;\n                                            b.remove();\n                                        }\n                                    if (doContinue)\n                                        continue;\n                                }\n\n                                if (node.isWysiwygEldestChild && !this._isCeilingElement(i)) {\n                                    // add tab on new line created by pressing enter\n                                    if (this.insertTabPending_tabString) {\n                                        let tab = document.createTextNode(this.insertTabPending_tabString);\n                                        node.line.insertBefore(tab, node.line.childNodes[0]);\n                                        this.insertTabPending_tabString = '';\n                                        this._adjustSelection({ node: tab, position: false });\n                                    }\n\n                                    // if empty text block is added add br\n                                    if (!node.line.textContent || node.line.textContent === '\\u200B') {\n                                        let addBr = true;\n                                        nodeCrawler(n => {\n                                            if (n.nodeName === 'BR') {\n                                                addBr = false;\n                                                return 'BREAK';\n                                            }\n                                            return n;\n                                        }, { node: node.line });\n\n                                        if (addBr)\n                                            node.line.append(document.createElement('br'));\n                                    }\n\n                                    continue;\n                                }\n\n                                let classSet = (c) => {\n                                    let counter = this.counterTagOf[c] || [];\n\n                                    if (counter.length)\n                                        counter = counter.concat(counter.map(m => {\n                                            return m + '_stop';\n                                        }));\n\n                                    return [\n                                        c,\n                                        c.includes('_stop') ? c.replace('_stop', '') : c + '_stop'\n                                    ].concat(counter);\n                                };\n\n                                let toUnwrap = [];\n\n                                if (i.classList.length) {\n\n                                    climbUpToEldestParent(i, node.ceiling, true, n => {\n\n                                        let cIdx = i.classList.length;\n                                        while (cIdx--) {\n                                            if (\n                                                (() => {\n                                                    let set = classSet(i.classList[cIdx]);\n                                                    for (let s of set) {\n                                                        if (n.classList.contains(s))\n                                                            return true;\n                                                    }\n                                                    return false;\n                                                })()\n                                            )\n                                                toUnwrap.push(n);\n                                        }\n\n                                        return n;\n                                    });\n\n                                }\n\n                                let idx = toUnwrap.length;\n\n                                while (idx--) {\n                                    // unwrap unnecessary counter parents\n                                    this._wrapNode(toUnwrap[idx]);\n                                }\n\n                                let class_idx = i.classList.length;\n                                while (class_idx--) {\n                                    let className = i.classList[class_idx];\n                                    let curSt = this._trackStyle(i, className.replace('_stop', ''));\n                                    let parSt = this._trackStyle(i.parentNode, className.replace('_stop', ''));\n\n                                    if (curSt === parSt)\n                                        // remove style class if parent shares the same style\n                                        i.classList.remove(className);\n                                }\n\n                                if (!i.classList.length) {\n                                    // remove style attribute if there is no class\n                                    i.removeAttribute('class');\n                                }\n\n                                if (this._isTextBlockElement(mutationTarget) && mutationTarget.childNodes.length === 1\n                                    && this._isUnSelectableElement(mutationTarget.childNodes[0]))\n                                    mutationTarget.append(document.createTextNode(''));\n                            }\n                        }\n                }\n            }\n        });\n        this.observer.observe(this.element, {\n            attributes: true,\n            childList: true,\n            subtree: true,\n        });\n    }\n\n    _append(i, insertAfter, wrap = false, focusElement) {\n        if (this.logExecution)\n            console.log(\"_append\", { i, insertAfter, wrap, focusElement });\n\n        if (!this.range) {\n            this.restoreLastSelection();\n            if (!this.range) return;\n        }\n\n        let common = climbUpToEldestParent(\n            this.range.commonAncestorContainer,\n            this.element\n        );\n        let startLine = this.range.startLine;\n        let endLine = this.range.endLine;\n        let insertRestricted = [\"HR\", \"UL\", \"LI\"]; //[\"HR\", \"UL\", \"LI\", \"._media_\", \"._custom_\"];\n\n        let append = (node) => {\n            if (node === this.element)\n                node = this.element.childNodes[this.element.childNodes.length - 1];\n\n            let next = node.nextSibling;\n            if (insertAfter) node.parentNode.insertBefore(insertAfter, next);\n\n            node.parentNode.insertBefore(i, insertAfter || next);\n            if (\n                this._isTextElement(node) &&\n                !node.textContent &&\n                this.element.lastChild !== node\n            )\n                node.remove();\n        };\n\n        if (wrap) {\n            let nodeToUnwrap = {};\n            let restricted = false;\n\n            let checker = (tag, el) => {\n                if (\n                    el &&\n                    (!nodeToUnwrap[tag] ||\n                        (() => {\n                            for (let u in nodeToUnwrap) {\n                                if (nodeToUnwrap[u] === el) return false;\n                            }\n                            return true;\n                        })())\n                )\n                    nodeToUnwrap[tag] = el;\n            };\n\n            if (this.range.collapsed) {\n                checker(i.nodeName, startLine.closest(i.nodeName));\n\n                let idx = i.classList.length;\n                while (idx--) {\n                    let className = i.classList[idx];\n                    checker(className, startLine.closest(\".\" + className));\n                }\n            } else\n                nodeCrawler(\n                    (n) => {\n                        let chk = n.nodeType === 3 ? n.parentNode : n;\n                        if (chk.nodeType !== 1) {\n                            restricted = true;\n                            return \"BREAK\";\n                        }\n\n                        if (n.nodeType === 1) {\n                            for (let notAllowed of insertRestricted)\n                                if (n.nodeName === notAllowed || n.closest(notAllowed)) {\n                                    restricted = true;\n                                    return \"BREAK\";\n                                }\n                        }\n\n                        checker(i.nodeName, chk.closest(i.nodeName));\n\n                        let idx = i.classList.length;\n                        while (idx--) {\n                            let className = i.classList[idx];\n                            checker(className, chk.closest(\".\" + className));\n                        }\n\n                        if (n === this.range.endContainer) return \"BREAK\";\n\n                        return n;\n                    },\n                    { node: common, startNode: this.range.startContainer }\n                );\n\n            if (restricted) return;\n\n            if (Object.keys(nodeToUnwrap).length) {\n                for (let u in nodeToUnwrap) this._wrapNode(nodeToUnwrap[u]);\n            } else {\n                append(endLine);\n\n                let extract = this.range.extractContents();\n\n                if (extract.childNodes[0]) {\n                    while (extract.childNodes[0]) {\n                        let t = extract.childNodes[0];\n                        if (!t.textContent) t.remove();\n                        else i.append(t);\n                    }\n                } else i.append(this._createEmptyParagraph());\n\n                this.range = adjustSelection({\n                    node: focusElement || i,\n                    position: false,\n                }, this.ceilingElement_queryArray);\n\n                let fc = i.previousSibling;\n\n                if (fc) {\n                    fc = fc.nodeType === 3 ? fc.parentNode : fc;\n\n                    if (\n                        this._isTextElement(fc) &&\n                        (!fc.textContent || fc.textContent === \"\\u200B\")\n                    )\n                        fc.remove();\n                }\n            }\n\n            return;\n        }\n\n        for (let r of insertRestricted) {\n            if (endLine.closest(r)) endLine = endLine.closest(r);\n        }\n\n        append(endLine);\n\n        if (insertAfter)\n            this.range = adjustSelection({ node: focusElement || insertAfter }, this.ceilingElement_queryArray);\n    }\n\n    async _callback(data) {\n        if (typeof this.callback === \"function\") {\n            let cb = this.callback(data) || data;\n            if (cb instanceof Promise) {\n                cb = await cb;\n            }\n            return cb || data;\n        }\n        return data;\n    }\n\n    async _imageSelected(e) {\n        if (this.logExecution) console.log(\"_imageSelected\", { e });\n        let files = e.target.files;\n\n        const prepareForCallback = { image: [] };\n        let readFile = new FileReader();\n\n        const load = (file) => {\n            return new Promise((res) => {\n                readFile.onload = (f) => {\n                    const { lastModified, name, size, type } = file;\n                    const source = f.target.result;\n\n                    let img = new Image();\n                    img.onload = () => {\n                        res({\n                            dimension: {\n                                width: img.width,\n                                height: img.height,\n                            },\n                            lastModified,\n                            filename: name,\n                            fileSize: size,\n                            fileType: type,\n                            source,\n                            elementId: generateId(\"img\"),\n                        });\n                    };\n                    img.src = source;\n                };\n                readFile.readAsDataURL(file);\n            });\n        };\n\n        this.callback({ loading: true });\n        for (let idx = 0; files.length > idx; idx++) {\n            prepareForCallback.image[idx] = await load(files[idx]);\n        }\n        this.callback({ loading: false });\n\n        //  reset image input\n        this.imgInput.value = \"\";\n\n        let feedback = await this._callback(prepareForCallback);\n\n        if (!this.range) {\n            this.restoreLastSelection();\n        }\n\n        if (feedback.image.length === 0) return;\n\n        if (\n            !this.range ||\n            (() => {\n                let c = this.range.commonAncestorContainer;\n                c = c.nodeType === 3 ? c.parentNode : c;\n                return !c.closest(\"#\" + this.elementId);\n            })()\n        )\n            this.element.focus();\n\n        prepareSelection.bind(this)();\n        if (!this.range) return;\n\n        // reverse the order of images\n        feedback.image.reverse();\n        let lasttxt = this._createEmptyParagraph();\n        this.element.insertBefore(lasttxt, this.range.endLine.nextSibling);\n        for (let i = 0; i < feedback.image.length; i++) {\n            let img = feedback.image[i];\n            let media = this._loadImage(img);\n            this.range.insertNode(media);\n            if (i === feedback.image.length - 1) {\n                this.range = adjustSelection({ node: lasttxt, position: true }, this.ceilingElement_queryArray);\n            }\n        }\n\n        this.setSafeLine();\n    }\n\n    _loadImage(i) {\n        /**\n             elementId: \"img_uniqueId\"\n             element: HTML\n             fileSize: 0\n             fileType: \"image/jpeg\"\n             source: \"file.jpg | http://url.com/file.jpg | s3 filename | base 64 string\"\n             lastModified: 0000000000000\n             filename: \"selectedLocalFilename.jpg\"\n             */\n\n        let image = i?.element instanceof Node ? i.element : null;\n\n        if (image) {\n            if (image.id) i.elementId = image.id;\n            else image.id = i.elementId;\n        }\n\n        if (!image) {\n            image = document.createElement(\"img\");\n            i.element = image;\n\n            let classname =\n                \"_img_\" +\n                i.source\n                    .substring(i.source.length - 128)\n                    .replace(/[/:.\"'\\\\@#$%\\?= \\{\\}\\|&*`!<>+]/g, \"\");\n            if (image.classList.contains(classname)) image.classList.add(classname);\n\n            if (Array.isArray(i.class)) {\n                for (let cl of i.class) image.classList.add(cl);\n            }\n\n            if (image.tagName === \"IMG\") image.setAttribute(\"src\", i.source);\n\n            if (typeof i.onclick === \"function\") {\n                image.addEventListener(\"click\", i.onclick);\n                image.classList.add(\"_hover_\");\n            }\n\n            if (\n                i.style &&\n                typeof i.style === \"object\" &&\n                Object.keys(i.style).length\n            ) {\n                for (let st in i.style) {\n                    image.style.setProperty(st, i.style[st]);\n                }\n            }\n        }\n\n        // wrapper.setAttribute(\"contenteditable\", \"false\");\n        // wrapper.append(image);\n\n        if (!image.classList.contains(\"_media_\"))\n            image.classList.add(\"_media_\");\n\n\n        let pushArray = true;\n\n        for (let chk of this.image_array)\n            if (chk.elementId === i.elementId) {\n                pushArray = false;\n                break;\n            }\n\n        if (pushArray) this.image_array.push(i);\n\n\n        // return wrapper;\n        return image;\n    }\n\n    _getAnchorOffsetFromLine(line) {\n        const sel = window.getSelection();\n        if (!sel || !sel.anchorNode) return 0;\n\n        let anchorNode = sel.anchorNode;\n        let anchorOffset = sel.anchorOffset;\n\n        // If anchorNode is not inside line, return 0\n        if (!line.contains(anchorNode) && line !== anchorNode) return 0;\n\n        let offset = 0;\n        let found = false;\n\n        function traverse(node) {\n            if (found) return;\n            if (node === anchorNode) {\n                offset += anchorOffset;\n                found = true;\n                return;\n            }\n            if (node.nodeType === 3) {\n                offset += node.textContent.length;\n            } else {\n                for (let child of node.childNodes) {\n                    traverse(child);\n                    if (found) break;\n                }\n            }\n        }\n\n        traverse(line);\n        return offset;\n    }\n\n    _getFocusOffsetFromLine(line) {\n        const sel = window.getSelection();\n        if (!sel || !sel.focusNode) return 0;\n\n        let focusNode = sel.focusNode;\n        let focusOffset = sel.focusOffset;\n\n        // If focusNode is not inside line, return 0\n        if (!line.contains(focusNode) && line !== focusNode) return 0;\n\n        let offset = 0;\n        let found = false;\n\n        function traverse(node) {\n            if (found) return;\n            if (node === focusNode) {\n                offset += focusOffset;\n                found = true;\n                return;\n            }\n            if (node.nodeType === 3) {\n                offset += node.textContent.length;\n            } else {\n                for (let child of node.childNodes) {\n                    traverse(child);\n                    if (found) break;\n                }\n            }\n        }\n\n        traverse(line);\n        return offset;\n    }\n\n    _normalizeDocument() {\n        let toRemove = [];\n        nodeCrawler(\n            (n) => {\n                if (n.nodeType === 1 && n.nodeName !== \"BR\") {\n\n                    if (n.childNodes.length === 0 || n.childNodes.length === 1 && n.childNodes[0].nodeType === 3 && n.childNodes[0].textContent === \"\") {\n                        let st = this.range?.startContainer;\n                        if (st && st.nodeType === 3) {\n                            st = st.parentNode;\n                        }\n\n                        if (n === st) {\n                            n.normalize();\n                            return n;\n                        }\n\n                        if (n.tagName === 'SPAN') {\n                            // n.remove();\n                            toRemove.push(n);\n                            return n;\n                        }\n                    }\n                    n.normalize();\n                }\n\n                return n;\n            },\n            { node: this.element }\n        );\n        if (toRemove.length) {\n            for (let r of toRemove) {\n                r.remove();\n            }\n        }\n    }\n\n    _replaceText(wholeDocument = false) {\n        if (this.logExecution) console.log(\"_replaceText\", { wholeDocument });\n        const process = (typeName, setData) => {\n            if (!this[typeName]) return;\n\n            let regex = regexr[typeName] || null;\n\n            if (regex === null) throw new Error(\"no regex to process\");\n\n            if (typeof setData !== \"function\")\n                throw new Error(\"setData should be returning function\");\n\n            let node = wholeDocument\n                ? this.element\n                : this.range?.commonAncestorContainer;\n\n            if (!node) return;\n\n            if (node.nodeType === 3) node = node.parentNode;\n\n            let res = (() => {\n                let className = `_${typeName}_`;\n                let element = [];\n                let collected = [];\n\n                let textNodes = [];\n                nodeCrawler(\n                    (n) => {\n                        if (n.nodeType === 3 && n.textContent) {\n                            if (\n                                n.nextSibling?.nodeType === 3 &&\n                                n.nextSibling.textContent &&\n                                n.nextSibling.textContent !== \"\\u200B\"\n                            ) {\n                                let par = n.parentNode;\n                                par.normalize();\n                                n = par;\n                            } else if (\n                                n.textContent !== \"\\u200B\" &&\n                                !n.parentNode.closest(\".\" + className)\n                            )\n                                textNodes.push(n);\n                        }\n\n                        return n;\n                    },\n                    { node }\n                );\n\n                textNodes.forEach((node) => {\n                    replaceTextNode(node, regex, function (matched) {\n                        if (matched.length > 1) {\n                            return {\n                                name: \"span\",\n                                attrs: { class: `${className} ${className}${matched}` },\n                                content: matched,\n                            };\n                        }\n                    });\n                });\n\n                function replaceTextNode(node, regex, handler) {\n                    let par = node.parentNode,\n                        nxt = node.nextSibling,\n                        doc = node.ownerDocument,\n                        hits;\n\n                    if (regex.global) {\n                        while (node && (hits = regex.exec(node.nodeValue))) {\n                            regex.lastIndex = 0;\n                            node = handleResult(node, hits, handler.apply(this, hits));\n                        }\n                    } else if ((hits = regex.exec(node.nodeValue)))\n                        handleResult(node, hits, handler.apply(this, hits));\n\n                    function handleResult(node, hits, results) {\n                        let orig = node.nodeValue;\n                        node.nodeValue = orig.slice(0, hits.index);\n                        [].concat(create(par, results)).forEach(function (n) {\n                            let res = par.insertBefore(n, nxt);\n                            element.push(res);\n                        });\n                        let rest = orig.slice(hits.index + hits[0].length);\n                        if (rest) {\n                            let text = doc.createTextNode(rest);\n                            return par.insertBefore(text, nxt);\n                        }\n                    }\n\n                    function create(el, o) {\n                        if (o.map)\n                            return o.map(function (v) {\n                                return create(el, v);\n                            });\n                        else if (typeof o === \"object\") {\n                            let e = doc.createElementNS(\n                                o.namespaceURI || el.namespaceURI,\n                                o.name\n                            );\n                            if (o.attrs) for (let a in o.attrs) e.setAttribute(a, o.attrs[a]);\n                            if (o.content)\n                                [].concat(create(e, o.content)).forEach(e.appendChild, e);\n                            if (typeof o.content === \"string\") collected.push(o.content);\n                            e.contentEditable = \"false\";\n                            return e;\n                        } else return doc.createTextNode(o + \"\");\n                    }\n                }\n\n                let anchorText;\n                if (element.length) {\n                    for (let el of element) {\n                        anchorText = node.ownerDocument.createTextNode(\"\");\n                        el.parentNode.insertBefore(anchorText, el.nextSibling);\n                    }\n                }\n                return { collected, element, anchorText };\n            })();\n\n            let textEl = res.element;\n\n            if (!wholeDocument) {\n                this.range = adjustSelection({\n                    node: res.anchorText,\n                    position: false,\n                }, this.ceilingElement_queryArray);\n            }\n\n            let toCallback = [];\n            let collectId = [];\n\n            if (textEl[0])\n                for (let el of textEl) {\n                    let elementId = generateId(typeName);\n                    el.setAttribute(\"id\", elementId);\n                    let tc = setData(el) || {};\n                    tc.elementId = el.id;\n                    tc.element = el;\n\n                    el.removeAttribute(\"style\");\n                    collectId.push(el.id);\n                    toCallback.push(tc);\n                }\n\n            if (toCallback.length) {\n                this._callback({ [typeName]: toCallback })\n                    .then((e) => {\n                        for (let idx = 0; collectId.length > idx; idx++) {\n                            //  elementId is read only\n                            e[typeName][idx].elementId = collectId[idx];\n                        }\n\n                        if (Array.isArray(e[typeName]) && e[typeName].length)\n                            for (let h of e[typeName]) {\n                                let dom = document.getElementById(h.elementId);\n\n                                dom.setAttribute(\"id\", h.elementId);\n                                dom.setAttribute(\"contenteditable\", \"false\");\n\n                                if (typeof h.onclick === \"function\") {\n                                    dom.addEventListener(\"click\", h.onclick);\n                                    dom.classList.add(\"_hover_\");\n                                }\n\n                                if (\n                                    h.style &&\n                                    typeof h.style === \"object\" &&\n                                    Object.keys(h.style).length\n                                ) {\n                                    for (let s in h.style) dom.style.setProperty(s, h.style[s]);\n                                }\n\n                                this[`${typeName}_array`].push(h);\n                            }\n                    })\n                    .catch((err) => {\n                        console.error(err);\n                    });\n            }\n        };\n\n        if (this.urllink_flag) {\n            process(\"urllink\", (url) => {\n                let u = url.textContent;\n                url.addEventListener(\"click\", function () {\n                    if (!u.match(/^https?:\\/\\//i)) {\n                        u = \"http://\" + u;\n                    }\n                    window.open(u, \"_blank\");\n                });\n\n                return { url: u };\n            });\n        }\n\n        if (this.hashtag_flag) {\n            process(\"hashtag\", (tag) => {\n                let t = tag.textContent;\n                return { tag: t[0] === \"#\" ? t.substring(1) : t };\n            });\n        }\n\n        this.hashtag_flag = false;\n        this.urllink_flag = false;\n    }\n\n    _checkElement(node, chkArr, closest, exp) {\n        /**\n         * parentNode when node is a text node\n         * chkArr is an array of class names or tag names\n         * closest is a boolean to check if the element is closest to the node\n         */\n        if (node && node.nodeType === 1)\n            for (let c of chkArr) {\n                if (closest) {\n                    let clo = node.closest(c);\n                    if (clo) {\n                        if (exp && exp[c]) {\n                            if (c === \"._custom_\") {\n                                let flyup = node;\n                                let gotTheMatch = false;\n                                if (node !== this.element) {\n                                    while ((flyup && this.element !== flyup) || !gotTheMatch) {\n                                        gotTheMatch =\n                                            flyup.getAttribute(exp[c].attr) === exp[c].value;\n                                        if (gotTheMatch) return false;\n\n                                        flyup = flyup.parentNode;\n                                    }\n                                }\n                            } else\n                                return clo.getAttribute(exp[c].attr) === exp[c].value\n                                    ? false\n                                    : clo;\n                        }\n\n                        return clo;\n                    }\n                } else if (\n                    c[0] === \"#\"\n                        ? node.id === c.substring(1)\n                        : c[0] === \".\"\n                            ? node.classList.contains(c.substring(1))\n                            : node.nodeName === c\n                )\n                    return true;\n            }\n        return false;\n    }\n\n    _isUnSelectableElement(node) {\n        if (this.logExecution) console.log(\"_isUnSelectableElement\", { node });\n        node = node?.nodeType === 3 ? node.parentNode : node;\n        let exceptions = {\n            \"._custom_\": { attr: \"contenteditable\", value: \"true\" },\n        };\n        return this._checkElement(\n            node,\n            this.unSelectable_queryArray,\n            true,\n            exceptions\n        );\n    }\n\n    _isStyleAllowedElement(node) {\n        if (this.logExecution) console.log(\"_isStyleAllowedElement\", { node });\n        return this._checkElement(node, this.styleAllowedElement_queryArray);\n    }\n\n    _isCeilingElement(node) {\n        if (this.logExecution) console.log(\"_isCeilingElement\", { node });\n        return this._checkElement(node, this.ceilingElement_queryArray);\n    }\n\n    _isBlockElement(node) {\n        if (this.logExecution) console.log(\"_isBlockElement\", { node });\n        return this._checkElement(node, this.blockElement_queryArray);\n    }\n\n    _isTextAreaElement(node) {\n        if (this.logExecution) console.log(\"_isTextAreaElement\", { node });\n        return this._checkElement(node, this.textAreaElement_queryArray);\n    }\n\n    _isTextBlockElement(node) {\n        if (this.logExecution) console.log(\"_isTextBlockElement\", { node });\n        node = node?.nodeType === 3 ? node.parentNode : node;\n        return this._checkElement(node, this.textBlockElement_queryArray);\n    }\n\n    _isSpecialTextElement(node) {\n        if (this.logExecution) console.log(\"_isSpecialTextElement\", { node });\n        node = node?.nodeType === 3 ? node.parentNode : node;\n        return this._checkElement(node, this.specialTextElement_queryArray);\n    }\n\n    _isTextElement(node) {\n        if (this.logExecution) console.log(\"_isTextElement\", { node });\n        node = node?.nodeType === 3 ? node.parentNode : node;\n        return (\n            (this._isTextBlockElement(node) || node.nodeName === \"SPAN\") &&\n            !this._isSpecialTextElement(node)\n        );\n    }\n\n    setSafeLine() {\n        let firstChild = this.element.firstChild;\n        let lastChild = this.element.lastChild;\n        this.unSelectable_queryArray.forEach((cl) => {\n            if (cl[0] === \".\") {\n                cl = cl.substring(1);\n                if (firstChild && firstChild.nodeType === 1 && firstChild.classList.contains(cl))\n                    this.element.insertBefore(\n                        this._createEmptyParagraph(),\n                        firstChild\n                    );\n                if (lastChild && lastChild.nodeType === 1 && lastChild.classList.contains(cl))\n                    this.element.appendChild(this._createEmptyParagraph());\n            }\n            else {\n                if (firstChild && firstChild?.tagName === cl)\n                    this.element.insertBefore(\n                        this._createEmptyParagraph(),\n                        firstChild\n                    );\n                if (lastChild && lastChild?.tagName === cl)\n                    this.element.appendChild(this._createEmptyParagraph());\n            }\n        });\n    }\n    /**\n     * List of command for editing wysiwyg text.\n     * @param {'quote'} action - Add blockquote below selected line.\n     * @also\n     * @param {'unorderedList'} action - Add unordered list below selected line.\n     * @also\n     * @param {'orderedList'} action - Add ordered list below selected line.\n     * @also\n     * @param {'divider'} action - Add HR below selected line.\n     * @also\n     * @param {'image'} action - Add image below selected line.\n     * @also\n     * @param {'alignLeft'} action - Align selected line to left.\n     * @also\n     * @param {'alignCenter'} action - Align selected line to center.\n     * @also\n     * @param {'alignRight'} action - Align selected line to right.\n     * @also\n     * @param {'color' | 'hex | rgb string | hsl string'} action - Apply color to selected text. If 'color' is given, the default focus color is applied to the text.\n     * @also\n     * @param {'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'small' | 'bold' | 'italic' | 'underline' | 'strike'} action - Apply style to selection.\n     * @also\n     * @param {object} action - Custom element object\n     * @param {object | string} action.element - Custom element can be node objects | html string | string\n     * @param {string} action.elementId - Set custom elements parent id. Otherwise auto generated\n     * @param {object} action.style - Set custom elements parent css style\n     * @param {boolean} action.insert - Set custom element insert mode. If true, inserts element at carat position, otherwise appends on next line\n     */\n    command(action) {\n        if (!action) return;\n\n        if (!this.range) this.restoreLastSelection();\n\n        prepareSelection.bind(this)();\n        if (!this.range) return;\n\n        switch (action) {\n            case \"quote\": {\n                if (\n                    !this.range ||\n                    (() => {\n                        let c = this.range.commonAncestorContainer;\n                        c = c.nodeType === 3 ? c.parentNode : c;\n                        return !c.closest(\"#\" + this.elementId);\n                    })()\n                )\n                    this.element.focus();\n\n                let p = this._createEmptyParagraph();\n                let bq = document.createElement(\"blockquote\");\n                this._append(bq, p, true);\n                break;\n            }\n            case \"unorderedList\": {\n                if (\n                    !this.range ||\n                    (() => {\n                        let c = this.range.commonAncestorContainer;\n                        c = c.nodeType === 3 ? c.parentNode : c;\n                        return !c.closest(\"#\" + this.elementId);\n                    })()\n                )\n                    this.element.focus();\n\n                let p = this._createEmptyParagraph();\n                let li = document.createElement(\"li\"),\n                    ul = document.createElement(\"ul\");\n                ul.append(li);\n                this._append(ul, p, false, li);\n                break;\n            }\n            case \"orderedList\": {\n                if (\n                    !this.range ||\n                    (() => {\n                        let c = this.range.commonAncestorContainer;\n                        c = c.nodeType === 3 ? c.parentNode : c;\n                        return !c.closest(\"#\" + this.elementId);\n                    })()\n                )\n                    this.element.focus();\n\n                let p = this._createEmptyParagraph();\n                let li = document.createElement(\"li\"),\n                    ul = document.createElement(\"ol\");\n                ul.append(li);\n                this._append(ul, p, false, li);\n                break;\n            }\n            case \"divider\": {\n                if (\n                    !this.range ||\n                    (() => {\n                        let c = this.range.commonAncestorContainer;\n                        c = c.nodeType === 3 ? c.parentNode : c;\n                        return !c.closest(\"#\" + this.elementId);\n                    })()\n                )\n                    this.element.focus();\n\n                // let p = this._createEmptyParagraph(),\n                let hr = document.createElement(\"hr\");\n                hr.setAttribute(\"contenteditable\", \"false\");\n                // this._append(hr, p, false);\n                this._append(hr, null, false);\n                this.setSafeLine();\n                break;\n            }\n            case \"image\":\n                this.imgInput.click();\n                break;\n            case \"alignLeft\":\n            case \"alignCenter\":\n            case \"alignRight\":\n                if (!this.range) return;\n                let startLine = this.range.startLine;\n                let endLine = this.range.endLine;\n\n                let collectLines = [];\n                collectLines.push(startLine);\n\n                while (collectLines[collectLines.length - 1] !== endLine) {\n                    let nextLine = collectLines[collectLines.length - 1].nextSibling;\n\n                    while (nextLine && !this._isTextBlockElement(nextLine)) {\n                        if (\n                            this._isCeilingElement(nextLine) &&\n                            nextLine.firstChild &&\n                            this._isTextBlockElement(nextLine.firstChild)\n                        ) {\n                            nextLine = nextLine.firstChild;\n                            break;\n                        }\n                        nextLine = nextLine.nextSibling;\n                    }\n\n                    if (\n                        !nextLine &&\n                        this._isCeilingElement(\n                            collectLines[collectLines.length - 1].parentNode\n                        )\n                    )\n                        nextLine =\n                            collectLines[collectLines.length - 1].parentNode.nextSibling;\n\n                    if (nextLine) collectLines.push(nextLine);\n                    else break;\n                }\n\n                let commandTracker = Object.assign({}, this.commandTracker);\n\n                for (let l of collectLines) {\n                    for (let c of this.alignClass) {\n                        if (l.classList.contains(c)) l.classList.remove(c);\n                        commandTracker[c.substring(1, c.length - 1)] = false;\n                    }\n\n                    if (action !== \"alignLeft\" && !this.commandTracker[action]) {\n                        for (let c of this.alignClass) {\n                            if (c.includes(action)) l.classList.add(c);\n                        }\n                        commandTracker[action] = true;\n                    }\n                }\n\n                this.commandTracker = commandTracker;\n\n                this._callback({\n                    commandTracker,\n                    range: this.range,\n                }).catch((err) => err);\n                break;\n        }\n\n        let isColor;\n        try {\n            isColor = new ColorMangle(action).hex();\n            action = \"color\";\n        } catch { }\n\n        //  style command\n        if (this.styleTagOfCommand[action]) {\n            let wrapper,\n                query = this.styleTagOfCommand[action],\n                stopperMode = false;\n\n            let counter = this.counterTagOf[query]\n                ? this.counterTagOf[query].map((c) => this._classNameToQuery(c))\n                : [];\n            if (counter.length)\n                counter = counter.concat(counter.map((c) => c + \"_stop\"));\n\n            //  setup query\n            query = this._classNameToQuery(query);\n\n            if (this.commandTracker[action]) {\n                let pass;\n\n                if (action === \"color\") {\n                    pass =\n                        isColor === this.commandTracker[action] ||\n                        (isColor === undefined &&\n                            this.commandTracker[action] ===\n                            this.cssVariable[\"--content-text_focus\"]);\n                } else pass = true;\n\n                if (pass) {\n                    query = this._classNameToQuery(query + \"_stop\");\n                    stopperMode = true;\n                }\n            }\n\n            //  setup wrapper element\n            if (query[0] === \".\") {\n                wrapper = document.createElement(\"SPAN\");\n                wrapper.classList.add(query.substring(1));\n            } else wrapper = document.createElement(query);\n\n            if (isColor && !stopperMode) wrapper.style.color = isColor;\n\n            let restrictedClass = this._isSelectionTrespassRestrictedRange();\n            if (this.range.collapsed) {\n                if (restrictedClass) return;\n\n                // let text = document.createTextNode(\" \");\n                let text = document.createTextNode(\"\\u200B\");\n                wrapper.append(text);\n\n                if (this.range.startContainer.nodeName === \"BR\")\n                    this.range.startContainer.parentNode.insertBefore(\n                        wrapper,\n                        this.range.startContainer\n                    );\n                else this.range.insertNode(wrapper);\n\n                this.range = adjustSelection({ node: text, position: [true, false] }, this.ceilingElement_queryArray);\n            }\n            else {\n                if (restrictedClass) {\n                    this.range = adjustSelection({\n                        node: this.range.endContainer,\n                        position: this.range.endOffset,\n                    }, this.ceilingElement_queryArray);\n                    return;\n                }\n                //  selection has range\n                let extract = this.range.extractContents();\n                let span = document.createElement(\"span\");\n\n                while (extract.childNodes[0]) span.append(extract.childNodes[0]);\n\n                nodeCrawler(\n                    (n) => {\n                        let res = restrictedClass\n                            ? this._classNameToQuery(restrictedClass)\n                            : null;\n                        let par = n.nodeType === 3 ? n.parentNode : n;\n                        let restricted =\n                            res && par.hasOwnProperty(\"closest\") ? par.closest(res) : false;\n\n                        if (n.nodeType === 3 && !restricted)\n                            n.textContent = n.textContent.replaceAll(\"\\t\", \"\");\n\n                        return n;\n                    },\n                    { node: span, startFromEldestChild: true, parentNode: this.element }\n                );\n\n                while (span.childNodes[0]) extract.append(span.childNodes[0]);\n\n                //  unwrap duplicates and stopper | counter\n                let unwrapTarget = [query];\n\n                //  add countering | opposite tag to unwrap\n                if (stopperMode) {\n                    let rev = query.replace(\"_stop\", \"\").substring(1);\n                    rev = rev[0] === \"_\" ? \".\" + rev : rev;\n                    unwrapTarget.push(rev);\n                } else {\n                    let rev = query + \"_stop\";\n                    rev = rev[0] === \".\" ? rev : \".\" + rev;\n                    unwrapTarget.push(rev);\n                }\n\n                unwrapTarget = unwrapTarget.concat(counter);\n                let del = extract.querySelectorAll(unwrapTarget.join());\n                let idx = del.length;\n                if (idx) while (idx--) this._wrapNode(del[idx]);\n\n                //  split wrapper\n                let wrapperSplit = [wrapper.cloneNode(true)];\n\n                while (extract.childNodes[0]) {\n                    let child = extract.childNodes[0];\n\n                    if (child.nodeType === 1 && this._isBlockElement(child)) {\n                        let nest = this._isTextAreaElement(child);\n\n                        if (nest) {\n                            for (let idx = 0; child.childNodes.length > idx; idx++) {\n                                let text = child.childNodes[idx];\n\n                                if (this._isTextElement(text)) {\n                                    let nestedWrapper = wrapper.cloneNode(true);\n                                    while (text.childNodes[0]) {\n                                        if (text.childNodes[0].textContent)\n                                            nestedWrapper.append(text.childNodes[0]);\n                                        else text.childNodes[0].remove();\n                                    }\n                                    text.append(nestedWrapper);\n                                }\n                            }\n\n                            if (!child.textContent) {\n                                child.remove();\n                                continue;\n                            }\n                        }\n\n                        let doc = document.createDocumentFragment();\n                        doc.append(child);\n                        wrapperSplit.push(doc);\n                    } else {\n                        if (child.nodeType === 1 && this._isTextBlockElement(child)) {\n                            let nestedWrapper = wrapper.cloneNode(true);\n\n                            while (child.childNodes[0])\n                                nestedWrapper.append(child.childNodes[0]);\n\n                            if (\n                                nestedWrapper.childNodes.length === 1 &&\n                                nestedWrapper.childNodes[0].nodeName !== \"BR\" &&\n                                !nestedWrapper.textContent.length\n                            ) {\n                                child.remove();\n                                continue;\n                            }\n\n                            child.append(nestedWrapper);\n                            let doc = document.createDocumentFragment();\n                            doc.append(child);\n                            wrapperSplit.push(doc);\n                        } else wrapperSplit[wrapperSplit.length - 1].append(child);\n                    }\n                }\n\n                let output = document.createDocumentFragment();\n                for (let ws of wrapperSplit) output.append(ws);\n\n                let fc = output.firstChild;\n                let lc = output.lastChild;\n\n                if (this._isTextElement(fc) && !fc.textContent) {\n                    let fn = fc.nextSibling;\n                    fc.remove();\n                    fc = fn;\n                }\n                if (this._isTextElement(lc) && !fc.textContent) {\n                    let lp = lc.nextSibling;\n                    lc.remove();\n                    lc = lp;\n                }\n\n                this.range.insertNode(output);\n                this.range = adjustSelection({\n                    node: [fc, lc],\n                    position: [true, false],\n                }, this.ceilingElement_queryArray);\n\n                //  remove garbage node\n                fc = fc.nodeType === 3 ? fc.parentNode : fc;\n                lc = lc.nodeType === 3 ? lc.parentNode : lc;\n\n                let next = lc.nextSibling;\n                if (\n                    this._isTextElement(next) &&\n                    (!next.textContent || next.textContent === \"\\u200B\")\n                )\n                    next.remove();\n\n                let prev = fc.previousSibling;\n                if (\n                    (this._isTextElement(prev) && !prev.textContent) ||\n                    prev.textContent === \"\\u200B\"\n                )\n                    prev.remove();\n            }\n            // this._normalizeDocument();\n            // this.restoreLastSelection();\n            // this.restoreWhenFocus = true;\n            // this._backupSelection();\n            return;\n        }\n\n        //  custom component\n        if (typeof action === \"object\") {\n            /**\n              action = {\n                elementId: <string: generated parent element id>,\n                element: <HTMLElement>,\n                style: {<css style object for parent element>},\n                insert: true | false,\n                contenteditable: false,\n              }\n            */\n\n            //  setup wrapper\n            let custom = null;\n\n            if (action.style)\n                for (let s in action.style) custom.style[s] = action.style[s];\n\n            action.elementId = action.elementId || generateId(\"custom\");\n\n            if (typeof action.element === \"string\") {\n                custom = document.createTextNode(action.element);\n                action.insert = true;\n            }\n            else if (action.element instanceof HTMLElement) {\n                custom = action.element;\n                custom.id = action.elementId;\n                custom.classList.add(\"_custom_\");\n            }\n            if (!this.range) this.element.focus();\n\n            this.custom_array.push(action);\n\n            this._callback({ custom: action }).then((_) => {\n\n                let txt = document.createTextNode(\"\");\n                if (action.insert) {\n                    this.range.insertNode(txt); // when inserted in range, it will push the next el back\n                    this.range.insertNode(custom);\n                } else {\n                    this._append(custom, txt, false);\n                }\n                this.range = adjustSelection({\n                    node: txt,\n                    position: false,\n                }, this.ceilingElement_queryArray);\n\n                this.setSafeLine();\n            });\n        }\n\n    }\n\n    /**\n     * Restores the last selection range\n     */\n    restoreLastSelection() {\n        if (this.logExecution)\n            console.log(\"restoreLastSelection\", { range_backup: this.range_backup });\n        if (this.range_backup) {\n            this.range = adjustSelection({\n                node: [\n                    this.range_backup.startContainer,\n                    this.range_backup.endContainer,\n                ],\n                position: [this.range_backup.startOffset, this.range_backup.endOffset],\n            }, this.ceilingElement_queryArray);\n            let sel = window.getSelection();\n            let range = document.createRange();\n            range.setStart(this.range.startContainer, this.range.startOffset);\n            range.setEnd(this.range.endContainer, this.range.endOffset);\n            sel.removeAllRanges();\n            sel.addRange(range);\n        }\n    }\n\n    /**\n     * Load html string to wysiwyg\n     * @param {string} html - HTML string to load.\n     * @param {boolean} [editable=false] - Set editable mode.\n     */\n    async loadHTML(html = this.html, editable = false) {\n        if (typeof html !== \"string\") {\n            throw new Error(\"html should be a string\");\n        }\n\n        this.setEditable(false);\n        this.html = html || \"\";\n        const div = document.createElement(\"div\");\n        div.innerHTML = html;\n\n        // image\n        const img = div.querySelectorAll(\"img\");\n        const imgCallback = [];\n        if (img.length)\n            for (let i of img) {\n                // const imageParent = i.closest(\"._media_\");\n\n                // if (imageParent) {\n                const source = i.getAttribute(\"src\");\n                let imgId = i.id || generateId(\"img\");\n                i.setAttribute(\"id\", imgId);\n\n                imgCallback.push({\n                    source,\n                    elementId: imgId,\n                    element: i,\n                });\n                // }\n\n                this.image_array = JSON.parse(JSON.stringify(imgCallback));\n            }\n\n        // hashtag\n        const hashtag = div.querySelectorAll(\"._hashtag_\");\n        const hashtagCallback = [];\n        if (hashtag.length)\n            for (let i of hashtag) {\n                let clIdx = i.classList.length;\n                let tag,\n                    elementId = i.id || generateId(\"hashtag\");\n                while (clIdx--) {\n                    let cls = i.classList[clIdx];\n                    if (cls.replace(\"_hashtag_\", \"\")[0] === \"#\") {\n                        tag = cls.replace(\"_hashtag_\", \"\");\n                    }\n                }\n                tag = tag?.[0] === \"#\" ? tag.substring(1) : tag;\n                if (tag) hashtagCallback.push({ tag, elementId, element: i });\n            }\n\n        // urllink\n        const urllink = div.querySelectorAll(\"._urllink_\");\n        const urllinkCallback = [];\n        if (urllink.length)\n            for (let i of urllink) {\n                let elementId = i.id || generateId(\"urllink\");\n                let url;\n\n                let clIdx = i.classList.length;\n                while (clIdx--) {\n                    let cls = i.classList[clIdx];\n                    if (cls.includes(\"_urllink_\").length) {\n                        url = cls.replace(\"_urllink_\", \"\");\n                    }\n                }\n                if (url) urllinkCallback.push({ url, elementId, element: i });\n            }\n\n        const custom = div.querySelectorAll(\"._custom_\");\n        const customCallback = [];\n        if (custom.length)\n            for (let i of custom) {\n                let elementId = i.id || generateId(\"custom\");\n                customCallback.push({ elementId, element: i });\n            }\n\n        let fb = await this._callback({\n            image: imgCallback,\n            hashtag: hashtagCallback,\n            urllink: urllinkCallback,\n            custom: customCallback,\n        });\n\n        // callback\n        for (let f in fb) {\n            if (f === \"image\") {\n                let img = fb[f];\n                for (let i of img) {\n                    // let imgEl = div.querySelector(\"#\" + i.elementId);\n                    // const imageParent = imgEl.closest(\"._media_\");\n                    this._loadImage(i);\n                }\n            } else this[f + \"_array\"] = fb[f];\n        }\n\n        this.element.innerHTML = \"\";\n\n        while (div.childNodes[0]) this.element.append(div.childNodes[0]);\n\n        if (editable) this.setEditable(true);\n    }\n\n    /**\n     * Load html string to wysiwyg\n     * @param {function} [pre=(p)=>{return p}] - Pre processing callback before export.\n     * @return {object} - Exported wysiwyg data object\n     */\n    async export(pre) {\n        this._normalizeDocument();\n        const dom = this.element.cloneNode(true);\n\n        const { hashtag_array, image_array, urllink_array, custom_array } = this;\n        let title = \"\";\n        let text = \"\";\n\n        let setup = {\n            dom,\n            urllink: this.urllink ? urllink_array : undefined,\n            hashtag: this.hashtag ? hashtag_array : undefined,\n            image: image_array,\n            custom: custom_array,\n        };\n\n        if (typeof pre === \"function\") {\n            let promiseOrNot = pre(setup);\n\n            if (promiseOrNot instanceof Promise)\n                setup = (await promiseOrNot) || setup;\n            else setup = promiseOrNot || setup;\n\n            if (this.hashtag) this.hashtag_array = setup.hashtag;\n            if (this.urllink) this.urllink_array = setup.urllink;\n\n            this.image_array = setup.image;\n            this.custom_array = setup.custom;\n            title = setup.title || \"\";\n        }\n\n        const strip = setup.dom.querySelectorAll(\":scope > *\");\n\n        //  Loop through eldest child element in document\n        for (let sid = 0; sid < strip.length; sid++) {\n            let child = strip[sid];\n            if (child.textContent.length) {\n                //  set title and text information\n                let inputText = child.textContent;\n                if (!title) {\n                    let titleSearchRegex = /([^\\s^.]{2,}[^\\s]+[.][^\\s^.]{2,})/g;\n                    let urlArray = inputText.match(titleSearchRegex);\n\n                    // We are replacing the urls with a special text here.\n                    // Then we split the sentences by the dots.\n                    // Then we replace the url with the special text and identify the title and body text\n\n                    let split;\n                    if (urlArray) {\n                        for (let i = 0; i < urlArray.length; i++) {\n                            inputText = inputText.replace(\n                                urlArray[i].replace(/\\.+$/, \"\"),\n                                \"[§url§]\" + i + \"[/§url§]\"\n                            );\n                        }\n\n                        split = inputText.split(\".\");\n\n                        for (let i = 0; i < split.length; i++) {\n                            for (let j = 0; j < urlArray.length; j++) {\n                                split[i] = split[i].replace(\n                                    \"[§url§]\" + j + \"[/§url§]\",\n                                    urlArray[j].replace(/\\.+$/, \"\")\n                                );\n                            }\n                        }\n                    } else split = inputText.split(\".\");\n\n                    title = split[0];\n                    if (title.length > 200) {\n                        text += title.substring(200) + \".\";\n                        title = title.substring(0, 200);\n                    }\n\n                    split.shift();\n                    inputText = split.join(\".\").replace(/\\s\\s+/g, \" \");\n                    text += inputText + \" \";\n                } else text += `${inputText}\\n`;\n            }\n\n            if (child.classList.contains(\"_media_\")) {\n                let idx = child.childNodes.length;\n                while (idx--) {\n                    let c = child.childNodes[idx];\n                    if (c.nodeName === \"IMG\") {\n                        for (const f of this.image_array) {\n                            if (f.elementId === c.id && f.source !== c.getAttribute(\"src\")) {\n                                c.setAttribute(\"src\", f.source);\n                                let cIdx = c.classList.length;\n                                while (cIdx--) {\n                                    if (\n                                        c.classList[cIdx].includes(\"_img_\") &&\n                                        c.classList[cIdx].length > 5\n                                    ) {\n                                        c.classList.remove(c.classList[cIdx]);\n                                        let splitUrl = f.source.split(\"/\");\n                                        let splitTail = splitUrl[splitUrl.length - 1];\n                                        let splitTail_length = splitTail.length - 64;\n                                        const sourceClip = splitUrl[splitUrl.length - 1].substring(\n                                            splitTail_length > 0 ? splitTail : 0\n                                        );\n                                        c.classList.add(\"_img_\" + sourceClip);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return {\n            html: setup.dom.innerHTML,\n            title: title.trim(),\n            text: text.trim(),\n            urllink: this.urllink ? this.urllink_array : undefined,\n            hashtag: this.hashtag ? this.hashtag_array : undefined,\n            image: this.image_array,\n            custom: this.custom_array,\n        };\n    }\n\n    /**\n     * Set placeholder string\n     * @param {string} p - Set placeholder string.\n     */\n    setPlaceholder(p) {\n        if (this.logExecution) console.log(\"setPlaceholder\", { p });\n        if (this.element) {\n            if (p && typeof p === \"string\")\n                this.element.setAttribute(\"placeholder\", p);\n            else this.element.removeAttribute(\"placeholder\");\n        }\n    }\n\n    /**\n     * Set spellcheck mode\n     * @param {boolean} bool - Set spellcheck mode.\n     */\n    setSpellcheck(bool) {\n        if (this.logExecution) console.log(\"setSpellcheck\", { bool });\n        if (this.element)\n            this.element.setAttribute(\"spellcheck\", bool ? \"on\" : \"off\");\n    }\n\n    /**\n     * Set edit mode\n     * @param {boolean} bool - Set wysiwyg to editable when true.\n     */\n    setEditable(bool) {\n        if (this.logExecution) console.log(\"setEditable\", { bool });\n        bool = this.element ? bool : false;\n\n        if (this.element)\n            this.element.setAttribute(\"contenteditable\", bool ? \"true\" : \"false\");\n\n        this._setEventListener(bool);\n        this._observeMutation(bool);\n    }\n}\n\nexport { Wysiwyg4All };\n"],"names":["root","factory","exports","module","define","amd","a","i","self","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","colorNames","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","goldenrod","gold","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavenderblush","lavender","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","ColorMangle","constructor","color","fineTuned","this","format","_colorType","type","throwErr","chkType","string","toLowerCase","match","Array","isArray","length","exec","err","_extractDigit","color_arg","rgba","push","parseFloat","getAlpha","extract","colorScheme","darkMode","focusOriginal","focusSat","opacity","template","content_isHighLuminance","isHighLuminance","focus","includes","matchLuminance","compDir","analogous","focusHSL","hsla","h","an1HSL","an2HSL","Math","abs","complementary","fixedValue","darkModeAnalogous","analogousNude","k","textColor","assign","contrastRatio","unordered","keys","sort","reduce","target_color","target_ratio","direction","method","target","adj","m","dir","count","adj_set","adjustBrightness","adjustLuminance","legacy","hex","main_lum","_luminance","lum","currDir","lum_pre","deg","spin","v","val","hsl","plus","s","l","minus","add","_toString","r","g","b","rgb","map","pow","col","numberOrNot","n","def","color_arg1","color_arg2","lum1","lum2","option","blackOpacity","whiteOpacity","opa","c_min","min","c_max","max","delta","round","toFixed","digit","toString","slice","rgbObject","hexValues","parseInt","opacity_value","c","x","limit","rgbRange","result","adjustSaturation","adjustSelection","ceilingElement_query","toArray","allowObject","setRange","node","position","sel","window","getSelection","range","getRangeAt","document","createRange","p","Node","setTarget","nodeType","lastChild","firstChild","textLength","nodeCrawler","textContent","parentNode","getAttribute","text","createTextNode","insertBefore","childNodes","nodeName","previousSibling","setEnd","doCollapse","setStart","startContainer","startOffset","endContainer","endOffset","collapse","removeAllRanges","addRange","startLine","endLine","q","e","closest","climbUpToEldestParent","run","startFromEldestChild","startNode","Error","commonAncestorContainer","parentAnchor","id","uniqueId","outputNodes","nodeIsRange","commonContainer","nodes","generateId","crawl","withInRange","cwl","diving","nextSibling","removeAttribute","prefix","charAt","floor","random","Date","getTime","substring","wrapper","singleChildParent","callback","isSingleChildParent","childrenCount","children","sweep","divCount","iHaveText","cb","prepareSelection","commandTracker","anchorElement","anchorNode","focusElement","focusNode","elementId","element","_createEmptyParagraph","appendChild","ceilingElement_queryArray","selectionChange","bind","ct","style","styleTagOfCommand","inBetween","_getStartEndLine","caratPosition","restricted","restrictedElement_queryArray","concat","specialTextElement_queryArray","quote","comm","_trackStyle","caratEl","getBoundingClientRect","_callback","catch","console","error","_lastLineBlank","regexr","hashtag","hashtag_stopper","urllink","Wysiwyg4All","editable","placeholder","spellcheck","highlightColor","html","fontSize","desktop","tablet","phone","h1","h2","h3","h4","h5","h6","small","lastLineBlank","logMutation","logExecution","fontSizeCssVariable","hold","keyArr","image_array","hashtag_array","urllink_array","custom_array","blockElement_queryArray","textAreaElement_queryArray","textBlockElement_queryArray","unSelectable_queryArray","styleAllowedElement_queryArray","alignClass","hashtag_flag","urllink_flag","range_backup","isRangeDirectionForward","insertTabPending_tabString","removeSandwichedLine_array","lastKey","getElementById","innerHTML","cssVariable","setProperty","elementComputedStyle","getComputedStyle","defaultFontColor","classList","contains","setPlaceholder","setSpellcheck","paddingB","paddingBottom","paddingT","paddingTop","borderT","borderTopWidth","borderB","borderBottomWidth","minHeight","command","italic","bold","underline","strike","fontSizeRatio","tag","ratio","entries","emSize","counterTagOf","cssPropertyOf","cssPropertyChecker","textDecoration","documentFontSize","nodeFontSize","f_size","compare_size","fontStyle","loadHTML","_wrapNode","appendWhole","log","start","end","withinRange","append","child","stripped","removeChild","getInbetween","currentLine","some","matches","_classNameToQuery","_isThereContentEditableOverMyHead","flyup","_normalizeBrowserQuirks","navigator","userAgent","indexOf","remove","_isSelectionTrespassRestrictedRange","restrict","createElement","cls","checker","sp","_isTextElement","force","lastLine","_keydown","preventDefault","collapsed","toUpperCase","shift","shiftKey","stc","block","prevsib","cl","tagName","_replaceText","sweep_array","hasIndent","diveAndRemoveTab","offset","containerOffset","line","container","tab","insertNode","_normalize","_normalizeDocument","cloneRange","_paste","async","doc","paste","createDocumentFragment","clipboardData","getData","replace","u","DocumentFragment","extractContents","_keyup","pop","_setEventListener","listen","imgInput","accept","hidden","multiple","setAttribute","addEventListener","_imageSelected","destroy","observer","disconnect","removeEventListener","_observeMutation","track","_elementRemovalObserver","MutationObserver","mutations","mutation","removedNode","removedNodes","observe","childList","mutation_array","monitor","cloneNode","name","attributeName","added","clones","addedNodes","removed","mutate","_","mutationTarget","callbackRemoved","what","arrIdx","splice","childIdx","toBreak","t","idx","_isTextBlockElement","_isUnSelectableElement","getBr","br","isWysiwygChild","isWysiwygEldestChild","_isCeilingElement","ceiling","clo","isMediaElement","isBlockQuoteElement","isCustomElement","isHashtagElement","isUrlLinkElement","_isBlockElement","_isStyleAllowedElement","sa","doContinue","_adjustSelection","addBr","classSet","counter","toUnwrap","cIdx","set","class_idx","className","attributes","subtree","_append","insertAfter","wrap","restoreLastSelection","common","insertRestricted","next","nodeToUnwrap","el","chk","notAllowed","fc","data","Promise","files","prepareForCallback","image","readFile","FileReader","load","file","res","onload","f","lastModified","size","source","img","Image","dimension","width","height","filename","fileSize","fileType","src","readAsDataURL","loading","feedback","reverse","lasttxt","media","_loadImage","setSafeLine","classname","class","onclick","st","pushArray","_getAnchorOffsetFromLine","anchorOffset","found","traverse","_getFocusOffsetFromLine","focusOffset","toRemove","normalize","wholeDocument","process","typeName","setData","regex","anchorText","collected","textNodes","par","forEach","handler","hits","nxt","ownerDocument","global","nodeValue","lastIndex","handleResult","apply","results","orig","index","create","rest","createElementNS","namespaceURI","attrs","content","contentEditable","replaceTextNode","matched","textEl","toCallback","collectId","tc","then","dom","url","open","_checkElement","chkArr","exp","attr","gotTheMatch","_isTextAreaElement","_isSpecialTextElement","action","bq","li","ul","hr","click","collectLines","nextLine","isColor","query","stopperMode","pass","undefined","restrictedClass","span","replaceAll","unwrapTarget","rev","del","querySelectorAll","join","wrapperSplit","nestedWrapper","output","ws","lc","fn","lp","prev","custom","insert","HTMLElement","txt","setEditable","div","imgCallback","imgId","JSON","parse","stringify","hashtagCallback","clIdx","urllinkCallback","customCallback","fb","pre","title","setup","promiseOrNot","strip","sid","inputText","split","titleSearchRegex","urlArray","j","splitUrl","splitTail","splitTail_length","sourceClip","trim","bool"],"sourceRoot":""}