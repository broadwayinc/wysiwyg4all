{"version":3,"file":"wysiwyg4all.cjs","mappings":"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","sources":["webpack://wysiwyg4all/webpack/bootstrap","webpack://wysiwyg4all/webpack/runtime/define property getters","webpack://wysiwyg4all/webpack/runtime/hasOwnProperty shorthand","webpack://wysiwyg4all/webpack/runtime/make namespace object","webpack://wysiwyg4all/./node_modules/colormangle/colormangle.js","webpack://wysiwyg4all/./wysiwyg4all.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const colorNames = {\n    aliceblue: \"#f0f8ff\",\n    antiquewhite: \"#faebd7\",\n    aqua: \"#00ffff\",\n    aquamarine: \"#7fffd4\",\n    azure: \"#f0ffff\",\n    beige: \"#f5f5dc\",\n    bisque: \"#ffe4c4\",\n    black: \"#000000\",\n    blanchedalmond: \"#ffebcd\",\n    blue: \"#0000ff\",\n    blueviolet: \"#8a2be2\",\n    brown: \"#a52a2a\",\n    burlywood: \"#deb887\",\n    cadetblue: \"#5f9ea0\",\n    chartreuse: \"#7fff00\",\n    chocolate: \"#d2691e\",\n    coral: \"#ff7f50\",\n    cornflowerblue: \"#6495ed\",\n    cornsilk: \"#fff8dc\",\n    crimson: \"#dc143c\",\n    cyan: \"#00ffff\",\n    darkblue: \"#00008b\",\n    darkcyan: \"#008b8b\",\n    darkgoldenrod: \"#b8860b\",\n    darkgray: \"#a9a9a9\",\n    darkgreen: \"#006400\",\n    darkgrey: \"#a9a9a9\",\n    darkkhaki: \"#bdb76b\",\n    darkmagenta: \"#8b008b\",\n    darkolivegreen: \"#556b2f\",\n    darkorange: \"#ff8c00\",\n    darkorchid: \"#9932cc\",\n    darkred: \"#8b0000\",\n    darksalmon: \"#e9967a\",\n    darkseagreen: \"#8fbc8f\",\n    darkslateblue: \"#483d8b\",\n    darkslategray: \"#2f4f4f\",\n    darkslategrey: \"#2f4f4f\",\n    darkturquoise: \"#00ced1\",\n    darkviolet: \"#9400d3\",\n    deeppink: \"#ff1493\",\n    deepskyblue: \"#00bfff\",\n    dimgray: \"#696969\",\n    dimgrey: \"#696969\",\n    dodgerblue: \"#1e90ff\",\n    firebrick: \"#b22222\",\n    floralwhite: \"#fffaf0\",\n    forestgreen: \"#228b22\",\n    fuchsia: \"#ff00ff\",\n    gainsboro: \"#dcdcdc\",\n    ghostwhite: \"#f8f8ff\",\n    goldenrod: \"#daa520\",\n    gold: \"#ffd700\",\n    gray: \"#808080\",\n    green: \"#008000\",\n    greenyellow: \"#adff2f\",\n    grey: \"#808080\",\n    honeydew: \"#f0fff0\",\n    hotpink: \"#ff69b4\",\n    indianred: \"#cd5c5c\",\n    indigo: \"#4b0082\",\n    ivory: \"#fffff0\",\n    khaki: \"#f0e68c\",\n    lavenderblush: \"#fff0f5\",\n    lavender: \"#e6e6fa\",\n    lawngreen: \"#7cfc00\",\n    lemonchiffon: \"#fffacd\",\n    lightblue: \"#add8e6\",\n    lightcoral: \"#f08080\",\n    lightcyan: \"#e0ffff\",\n    lightgoldenrodyellow: \"#fafad2\",\n    lightgray: \"#d3d3d3\",\n    lightgreen: \"#90ee90\",\n    lightgrey: \"#d3d3d3\",\n    lightpink: \"#ffb6c1\",\n    lightsalmon: \"#ffa07a\",\n    lightseagreen: \"#20b2aa\",\n    lightskyblue: \"#87cefa\",\n    lightslategray: \"#778899\",\n    lightslategrey: \"#778899\",\n    lightsteelblue: \"#b0c4de\",\n    lightyellow: \"#ffffe0\",\n    lime: \"#00ff00\",\n    limegreen: \"#32cd32\",\n    linen: \"#faf0e6\",\n    magenta: \"#ff00ff\",\n    maroon: \"#800000\",\n    mediumaquamarine: \"#66cdaa\",\n    mediumblue: \"#0000cd\",\n    mediumorchid: \"#ba55d3\",\n    mediumpurple: \"#9370db\",\n    mediumseagreen: \"#3cb371\",\n    mediumslateblue: \"#7b68ee\",\n    mediumspringgreen: \"#00fa9a\",\n    mediumturquoise: \"#48d1cc\",\n    mediumvioletred: \"#c71585\",\n    midnightblue: \"#191970\",\n    mintcream: \"#f5fffa\",\n    mistyrose: \"#ffe4e1\",\n    moccasin: \"#ffe4b5\",\n    navajowhite: \"#ffdead\",\n    navy: \"#000080\",\n    oldlace: \"#fdf5e6\",\n    olive: \"#808000\",\n    olivedrab: \"#6b8e23\",\n    orange: \"#ffa500\",\n    orangered: \"#ff4500\",\n    orchid: \"#da70d6\",\n    palegoldenrod: \"#eee8aa\",\n    palegreen: \"#98fb98\",\n    paleturquoise: \"#afeeee\",\n    palevioletred: \"#db7093\",\n    papayawhip: \"#ffefd5\",\n    peachpuff: \"#ffdab9\",\n    peru: \"#cd853f\",\n    pink: \"#ffc0cb\",\n    plum: \"#dda0dd\",\n    powderblue: \"#b0e0e6\",\n    purple: \"#800080\",\n    rebeccapurple: \"#663399\",\n    red: \"#ff0000\",\n    rosybrown: \"#bc8f8f\",\n    royalblue: \"#4169e1\",\n    saddlebrown: \"#8b4513\",\n    salmon: \"#fa8072\",\n    sandybrown: \"#f4a460\",\n    seagreen: \"#2e8b57\",\n    seashell: \"#fff5ee\",\n    sienna: \"#a0522d\",\n    silver: \"#c0c0c0\",\n    skyblue: \"#87ceeb\",\n    slateblue: \"#6a5acd\",\n    slategray: \"#708090\",\n    slategrey: \"#708090\",\n    snow: \"#fffafa\",\n    springgreen: \"#00ff7f\",\n    steelblue: \"#4682b4\",\n    tan: \"#d2b48c\",\n    teal: \"#008080\",\n    thistle: \"#d8bfd8\",\n    tomato: \"#ff6347\",\n    turquoise: \"#40e0d0\",\n    violet: \"#ee82ee\",\n    wheat: \"#f5deb3\",\n    white: \"#ffffff\",\n    whitesmoke: \"#f5f5f5\",\n    yellow: \"#ffff00\",\n    yellowgreen: \"#9acd32\",\n};\n\nclass ColorMangle {\n    /**\n     * @param {string} [color='#4848db'] - Argument string can be either color name string or any type of HTML color codes (hex, rgb, hsl).\n     */\n    constructor(color = '#4848db', fineTuned = true) {\n        this.fineTuned = fineTuned;\n\n        let format = this._colorType(color);\n        this.type = format.type;\n        this.color = format.color;\n    }\n\n    _colorType(color = this.color, throwErr = true) {\n        let chkType, type;\n\n        try {\n            if (!color)\n                throw 'invalid color';\n\n            if (typeof color === 'object' && color.string)\n                color = color.string;\n\n            if (typeof color === 'string')\n                color = color.toLowerCase();\n            else\n                throw 'invalid color';\n\n            if (color === this.color)\n                return { type: this.type, color: this.color };\n\n            if (colorNames[color])\n                return { type: 'hex', color: colorNames[color] };\n\n            chkType = color.match(/^(rgba?|rgb?|hsla?|#)/g);\n\n            if (Array.isArray(chkType)) {\n\n                if (chkType[0] === '#') {\n\n                    if (color.length === 4)\n                        // convert shorthand hex\n                        color = color[0] + color[1] + color[1] + color[2] + color[2] + color[3] + color[3];\n\n                    if (/^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(color))\n                        // is valid hex\n                        type = 'hex';\n\n                    else\n                        throw 'invalid hex';\n\n                } else if (color[color.length - 1] === ')')\n                    // hex, rgb, rgba, hsl, hsla\n                    type = chkType[0];\n\n                return { type, color };\n\n            }\n\n        } catch (err) {\n            if (throwErr)\n                throw err + ':' + color;\n        }\n\n        return {};\n    }\n\n    _extractDigit(color_arg = this.color) {\n        let { type = this.type, color = this.color } = this._colorType(color_arg);\n\n        if (type === 'hex')\n            color = this.rgba(1, color).string;\n\n        const value = [];\n\n        for (const i of color.match(/\\d+(\\.\\d+)?/g))\n            value.push(parseFloat(i));\n\n        if (value.length < 4) value.push(1);\n\n        return value;\n    }\n\n    /**\n     * @return {number} - Retrieves color alpha value (range 0 ~ 1)\n     */\n    getAlpha(color_arg = this.color) {\n        let extract = this._extractDigit(color_arg);\n        return extract ? extract[3] || 1 : 1;\n    }\n\n    /**\n     * Generates color scheme object.\n     * @typedef {Object} colorScheme\n     * @property {string} --alert\n     * @property {string} --alert-text\n     * @property {string} --analogous\n     * @property {string} --analogous-text\n     * @property {string} --background\n     * @property {string} --background-focus\n     * @property {string} --background-focus-text\n     * @property {string} --background-text\n     * @property {string} --background-text_focus\n     * @property {string} --button\n     * @property {string} --button-text\n     * @property {string} --complementary\n     * @property {string} --complementary-text\n     * @property {string} --content\n     * @property {string} --content-focus\n     * @property {string} --content-focus-text\n     * @property {string} --content-text\n     * @property {string} --content-text_focus\n     * @property {string} --focus\n     * @property {string} --focus-text\n     * @property {string} --placeholder\n     * @property {string} --saturate\n     * @property {string} --saturate-text\n     * @property {string} --success\n     * @property {string} --success-text\n     * @property {string} --text-button\n     * @param {string} [color=this.color] - Focus color for color scheme\n     * @param {boolean} [darkMode=false] - Dark mode when true\n     * @return {colorScheme} - { [&lt;CSS Variable names&gt;] : &lt;string | HTML color string&gt; }\n     */\n    colorScheme(color = this.color, darkMode = false) {\n\n        let opacity = {\n            text: { black: 0.88, white: 1 },\n            // soft: { black: 0.66, white: 0.88 },\n            placeholder: { black: 0.44, white: 0.55 },\n            // transparent: { black: 0.22, white: 0.33 },\n            // shade: { black: 0.066, white: 0.11 },\n            // shadow: { black: 0.033, white: 0.066 }\n        };\n\n        let template = {\n            '--background': darkMode ? '#121212' : '#f7f7f7',\n            '--content': darkMode ? '#2b2b2b' : '#ffffff',\n            // '--toolbar': darkMode ? '#2b2b2b' : '#ffffff'\n        };\n\n        let focusOriginal;\n        let focusSat;\n        let content_isHighLuminance = this.isHighLuminance(template['--content']);\n        let focus = (() => {\n            if (color && typeof color === 'object') {\n                if (color['--button']) {\n                    focusOriginal = color['--button'];\n                    return focusOriginal;\n                }\n                for (let key of color)\n                    if (key.includes('focus')) {\n                        focusOriginal = color[key];\n                        return focusOriginal;\n                    }\n            }\n\n            focusOriginal = color;\n            focusSat = this.matchLuminance(color, template['--content'], content_isHighLuminance ? 1.5 : 4.5);\n            return darkMode ? focusSat : color;\n        })();\n\n        let compDir = 1;\n        let analogous = (() => {\n            let deg = 30;\n            let analogous = this.analogous(focusOriginal, deg);\n            let focusHSL = this.hsla(1, focusOriginal).h;\n            let an1HSL = this.hsla(1, analogous[0]).h;\n            let an2HSL = this.hsla(1, analogous[1]).h;\n\n            if (focusHSL + deg > 360)\n                an1HSL = an1HSL + 360;\n            if (focusHSL - deg < 0)\n                an2HSL = 360 - an2HSL;\n\n            if (Math.abs(focusHSL - an1HSL) > Math.abs(focusHSL - an2HSL)) {\n                compDir = -1;\n                return analogous[1];\n            }\n\n            return analogous[0];\n        })();\n\n        let complementary = this.matchLuminance(this.complementary(focus, 60 * compDir), template['--background'], 3.1);\n        let fixedValue = {\n            // '--shadow': 'rgba(0, 0, 0, 0.033)',\n            // '--shade': 'rgba(0, 0, 0, 0.066)',\n            // '--transparent': 'rgba(0, 0, 0, 0.22)',\n            '--placeholder': darkMode ? 'rgba(255, 255, 255, 0.55)' : 'rgba(0, 0, 0, 0.44)'\n        };\n\n        let darkModeAnalogous = darkMode ? this.matchLuminance(analogous, template['--background'], 4.5) : analogous;\n        let analogousNude = this.matchLuminance(analogous, template['--background'], 4.5);\n\n        for (let k in template) {\n            template[k + '-text'] = this.textColor(opacity.text, template[k]);\n            template[k + '-focus'] = k.includes('--background') ? darkModeAnalogous : focus;\n            template[k + '-text_focus'] = k.includes('--background') ? analogousNude : this.matchLuminance(darkMode ? focus : focusSat, template[k], 1.66);\n            template[k + '-focus-text'] = this.textColor(1, k.includes('--background') ? darkModeAnalogous : focus);\n        }\n\n        template['--focus'] = focusOriginal;\n        template['--focus-text'] = this.textColor(1, focusOriginal);\n        template['--saturate'] = focusSat;\n        template['--saturate-text'] = this.textColor(1, focusSat);\n\n        Object.assign(template, {\n            '--complementary': complementary,\n            '--complementary-text': this.textColor(1, complementary),\n            '--analogous': analogous,\n            '--analogous-text': this.textColor(1, analogous),\n            '--alert': 'tomato',\n            // '--alert-text': 'white',\n            '--success': 'limegreen',\n            // '--success-text': 'black',\n            '--button': focus,\n            '--text-button': darkMode ? this.matchLuminance(focusSat, template[\"--content\"], 7) : this.contrastRatio(template[\"--content\"], focusSat) < 4.5 ? \"inherit\" : focusSat,\n            '--button-text': this.textColor(1, focus)\n        });\n\n        // for (let k in template) {\n        //     if (!template[k] || template[k] === \"\")\n        //         continue;\n\n        //     let highLum = this.isHighLuminance(template[k]);\n        //     for (let op of ['soft', 'placeholder', 'transparent', 'shadow', 'shade']) {\n\n        //         template[k + '_' + op] = this.rgba(opacity[op][highLum ? 'white' : 'black'], template[k]).string;\n        //     }\n        // }\n\n        // template['--button-border'] = (() => {\n        //     let focus_isHighLuminance = this.isHighLuminance(focus);\n        //     let border = this.matchLuminance(this.adjustLuminance(-1, template['--button']), template['--button'], 1.15, -1, focus_isHighLuminance ? 'luminance' : 'brightness');\n        //     return focus_isHighLuminance ? this.rgba(0.5, border).string : border;\n        // })();\n\n        if (color && typeof color === 'object') {\n            for (let key of color)\n                if (key[0] !== '-')\n                    throw 'invalid color scheme';\n            Object.assign(template, color);\n        }\n\n        let unordered = Object.assign(template, fixedValue);\n        return Object.keys(unordered).sort().reduce(\n            (obj, key) => {\n                obj[key] = unordered[key];\n                return obj;\n            },\n            {}\n        );\n    }\n\n    /**\n     * Match luminance of target_color with base color\n     * @param {string} target_color - Target color\n     * @param {string} [color_arg=this.color] - Base color\n     * @param {number} [target_ratio] - Set contrast ratio difference\n     * @param {number} [direction] - Adjust direction. Adjust to darker luminance when -1. Brighter when 1, otherwise auto.\n     * @param {string} [method] - Luminance adjustment mode: 'brightness | luminance | saturation'\n     * @return {string} - HTML color string\n     */\n    matchLuminance(target_color, color_arg = this.color, target_ratio, direction, method) {\n        let { color } = this._colorType(color_arg);\n        let target = this._colorType(target_color).color;\n\n        if (target_ratio) {\n            let adj = target;\n            let m = this.contrastRatio(adj, color);\n            if (m < target_ratio) {\n                let dir = direction || this.isHighLuminance(color) ? -1 : 1;\n                let count = 100;\n                while (m < target_ratio && count--) {\n                    let adj_set;\n\n                    switch (method) {\n                        case 'brightness':\n                            adj_set = this.adjustBrightness(1 * dir, adj);\n                            break;\n                        case 'luminance':\n                            adj_set = this.adjustLuminance(1 * dir, adj);\n                            break;\n                        default:\n                            adj_set = this.adjustBrightness(1 * dir, { legacy: true, color: adj });\n                    }\n\n                    if (adj === adj_set)\n                        break;\n                    adj = adj_set;\n\n                    m = this.contrastRatio(adj, color);\n                }\n            }\n            return this.hex(adj);\n        } else {\n            let main_lum = this._luminance(color);\n            let lum = this._luminance(target);\n\n            if (Math.abs(lum - main_lum) < 0.01)\n                return target;\n\n            let adj = this.hex(target);\n\n            let dir = (lum, main_lum) => {\n                return lum < main_lum ? 1 : -1;\n            };\n\n            let currDir = dir(lum, main_lum);\n            while (Math.abs(lum - main_lum) > 0.01 && currDir === dir(lum, main_lum)) {\n                let adj_set;\n                switch (method) {\n                    case 'saturation':\n                        adj_set = this.adjustBrightness(currDir, { color: adj, legacy: true });\n                        break;\n                    case 'luminance':\n                        adj_set = this.adjustLuminance(currDir, adj);\n                        break;\n                    default:\n                        adj_set = this.adjustBrightness(currDir, adj);\n                }\n                let lum_pre = this._luminance(adj_set);\n                if (lum_pre === lum || currDir !== dir(lum_pre, main_lum))\n                    break;\n                lum = lum_pre;\n                adj = adj_set;\n            }\n            return this.hex(adj);\n        }\n    }\n\n    /**\n     * Generate analogous color\n     * @param {string} [color_arg=this.color] - Target color\n     * @param {number} [deg=30] - Amount of hue separation\n     * @return {Array} - 2 analogous color is returned. [&lt;hsla color&gt;, ... ]\n     */\n    analogous(color_arg = this.color, deg = 30) {\n        let { color } = this._colorType(color_arg);\n\n        let spin = (h, v) => {\n            let val = h + v;\n            return val < 0 ? 360 + val : val > 360 ? val - 360 : val;\n        };\n\n        let hsl = this.hsla(this.getAlpha(color), color);\n        let plus = 'hsla(' + spin(hsl.h, deg) + ', ' + hsl.s + '%, ' + hsl.l + '%, ' + hsl.a + ')';\n        let minus = 'hsla(' + spin(hsl.h, -deg) + ', ' + hsl.s + '%, ' + hsl.l + '%, ' + hsl.a + ')';\n\n        return [this.matchLuminance(plus, color), this.matchLuminance(minus, color)];\n    }\n\n    /**\n     * Generate complementary color\n     * @param {string} [color_arg=this.color] - Target color\n     * @param {number} [add=0] - Add or subtract hue from complementary color\n     * @return {string} - HEX color string\n     */\n    complementary(color_arg = this.color, add = 0) {\n        let { color } = this._colorType(color_arg);\n\n        let hsl = this.hsla(this.getAlpha(color), color);\n\n        if (hsl.h < 180)\n            hsl.h += 180;\n        else\n            hsl.h -= 180;\n\n        hsl.h += add;\n        hsl.h = hsl.h > 360 ? hsl.h - 360 : hsl.h < 0 ? 360 - hsl.h : hsl.h;\n\n        return this.hex(this._toString(hsl));\n    }\n\n    /**\n     * @param {string} [color_arg=this.color] - Target color\n     * @param {boolean} [fineTuned=false] - Custom Color space is applied when true\n     * @return {boolean} - True if color has high luminance\n     */\n    isHighLuminance(color_arg = this.color, fineTuned = this.fineTuned) {\n        const { r, g, b } = this.rgba(1, this._colorType(color_arg).color);\n\n        let yiq =\n            fineTuned ?\n                ((r * (299 - 64)) + (g * (587 * 1.25)) + (b * 114)) / 1000 : // Fine tuned\n                ((r * 299) + (g * 587) + (b * 114)) / 1000; // Standard color space formula\n\n        // Web standard of color space threshold is 128\n        return (yiq >= (fineTuned ? 188 : 128));\n    }\n\n    _luminance(color_arg = this.color) {\n        let rgb = this.rgba(1, color_arg);\n        let a = [rgb.r, rgb.g, rgb.b].map(function (v) {\n            v /= 255;\n            return v <= 0.03928\n                ? v / 12.92\n                : Math.pow((v + 0.055) / 1.055, 2.4);\n        });\n\n        return a[0] * 0.2126 + a[1] * 0.7152 + a[2] * 0.0722;\n    }\n\n    _toString(col) {\n        let numberOrNot = (n, def = 100) => {\n            return typeof n === 'number' ? n : def;\n        };\n        if (typeof col === 'string')\n            return col;\n\n        if (col.hasOwnProperty('h'))\n            return 'hsla(' + (col.h || 0) + ', ' + numberOrNot(col.s) + '%, ' + numberOrNot(col.l) + '%, ' + numberOrNot(col.a, 1) + ')';\n\n        if (col.hasOwnProperty('r'))\n            return 'rgba(' + numberOrNot(col.r) + ', ' + numberOrNot(col.g) + ', ' + numberOrNot(col.b) + ', ' + numberOrNot(col.a, 1) + ')';\n        throw col;\n    }\n\n    /**\n     * Returns contrast ratio between the given color.\n     * Useful to determine if the given color is suitable for text with the constructed color as a background.\n     * @param {string} color_arg1 - Color string you want to compare luminance ratio.\n     * @param {string} [color_arg2=this.color] - Color string you want to compare with color_arg1\n     * @return {number} - Contrast ratio\n     */\n    contrastRatio(color_arg1, color_arg2 = this.color) {\n        let lum1 = this._luminance(color_arg2) + 0.05;\n        let lum2 = this._luminance(color_arg1) + 0.05;\n\n        return lum1 > lum2 ? lum1 / lum2 : lum2 / lum1;\n    }\n\n    /**\n     * Returns suitable text color (Black / White).\n     * @param {(number | Object)} opacity - Can set returning color values opacity.\n     * @param {number} opacity.black - Set returning color values opacity when the result color is black.\n     * @param {number} opacity.white - Set returning color values opacity when the result color is white.\n     * @param {(string|Object)} [option=this.color] - Background color of text\n     * @param {(string|Object)} [option.color=this.color] - Background color of text\n     * @param {(string|Object)} [option.fineTuned=true] - Follows standard color space calculation when false\n     * @return {string | null} - HTML color string\n     */\n    textColor(opacity = 1, option = this.color) {\n\n        if (typeof option === 'string')\n            option = { color: option };\n\n        let { color = this.color, fineTuned = true } = option;\n\n        color = this._colorType(color).color;\n\n        // returns null if color opacity is below 0.5\n        if (this.getAlpha(color) < 0.5)\n            return \"\";\n\n        let blackOpacity, whiteOpacity;\n\n        if (typeof opacity === 'number' && opacity < 1) {\n            blackOpacity = opacity;\n            whiteOpacity = opacity;\n        } else if (opacity && typeof opacity === 'object') {\n            for (let k of ['black', 'white']) {\n                let opa = opacity[k];\n                if (typeof opa === 'number' && opa < 1) {\n                    if (k === 'black')\n                        blackOpacity = opa;\n                    else if (k === 'white')\n                        whiteOpacity = opa;\n                }\n            }\n        }\n\n        const opa = (v) => {\n            if (typeof v === 'number') {\n                if (v < 1 && v > 0) return v;\n                else if (v > 1) return 1;\n                else return 0;\n            } else return 1;\n        };\n\n        if (this.isHighLuminance(color, fineTuned))\n            return blackOpacity ? `rgba(0, 0, 0, ${opa(blackOpacity)})` : 'black';\n\n        return whiteOpacity ? `rgba(255, 255, 255, ${opa(whiteOpacity)})` : 'white';\n    }\n\n    /**\n     * Returns hsla color\n     * @param {number} [opacity] - Set opacity for returning color value.\n     * @param {string} [color_arg=this.color] - Color to convert to hsla string\n     * @return {Object} - { h: &lt;number&gt;, s: &lt;number&gt;, l: &lt;number&gt;, r: &lt;number&gt;, g: &lt;number&gt;, b: &lt;number&gt;, a: &lt;number&gt;, string: &lt;string | rgba color string&gt; }\n     */\n    hsla(opacity, color_arg = this.color) {\n        const { type = this.type, color = this.color } = this._colorType(color_arg);\n\n        const hsl = (r, g, b) => {\n            r /= 255;\n            g /= 255;\n            b /= 255;\n\n            let c_min = Math.min(r, g, b),\n                c_max = Math.max(r, g, b),\n                delta = c_max - c_min,\n                h = 0,\n                s = 0,\n                l = 0;\n\n            if (delta === 0)\n                h = 0;\n            else if (c_max === r)\n                h = ((g - b) / delta) % 6;\n            else if (c_max === g)\n                h = (b - r) / delta + 2;\n            else\n                h = (r - g) / delta + 4;\n\n            h = Math.round(h * 60);\n\n            if (h < 0) h += 360;\n\n            l = (c_max + c_min) / 2;\n            s = delta === 0 ? 0 : delta / (1 - Math.abs(2 * l - 1));\n            s = +(s * 100).toFixed(1);\n            l = +(l * 100).toFixed(1);\n            return { h, s, l };\n        };\n\n        if (type === 'hex') {\n            opacity = typeof opacity === 'number' ? opacity : 1;\n            const rgba = this.rgba(opacity, color);\n            const { r, g, b, a } = rgba;\n            const { h, s, l } = hsl(r, g, b);\n\n            return {\n                r, g, b, a,\n                h: h,\n                s: s,\n                l: l,\n                string: this._toString({ h, s, l, a: opacity })\n            };\n\n        } else {\n\n            const digit = this._extractDigit(color);\n            opacity = typeof opacity === 'number' ? opacity : digit[3] || 1;\n\n            if (type.includes('hsl')) {\n                const { r, g, b, a } = this.rgba(opacity, color);\n\n                return {\n                    r, g, b, a,\n                    h: digit[0],\n                    s: digit[1],\n                    l: digit[2],\n                    string: this._toString({\n                        h: digit[0],\n                        s: digit[1],\n                        l: digit[2],\n                        a\n                    })\n                };\n\n            } else if (type.includes('rgb')) {\n                const value = {\n                    r: digit[0],\n                    g: digit[1],\n                    b: digit[2],\n                    a: opacity\n                };\n                const { h, s, l } = hsl(value.r, value.g, value.b);\n\n                return Object.assign(value, {\n                    r: value.r,\n                    g: value.g,\n                    b: value.b,\n                    h: h,\n                    s: s,\n                    l: l,\n                    a: value.a,\n                    string: this._toString({ h, s, l, a: value.a })\n                });\n\n            }\n        }\n    }\n\n    /**\n     * Returns hex color string\n     * @param {string} [color_arg=this.color] - Color to convert to hex string\n     * @return {string} - HEX color string\n     */\n    hex(color_arg = this.color) {\n        const { type = this.type, color = this.color } = this._colorType(color_arg);\n\n        if (type.includes('rgb') || type.includes('hsl')) {\n            const rgba = this.rgba(1, color);\n            return '#' + ((1 << 24) + (rgba.r << 16) + (rgba.g << 8) + rgba.b).toString(16).slice(1);\n        }\n\n        return color;\n    }\n\n    /**\n     * Returns rgba color\n     * @param {number} [opacity] - Set opacity of returning color\n     * @param {string} [color_arg=this.color] - Color to convert to rgba string\n     * @return {Object} - { r: &lt;number&gt;, g: &lt;number&gt;, b: &lt;number&gt;, a: &lt;number&gt;, string: &lt;string | HTML color string&gt; }\n     */\n    rgba(opacity, color_arg = this.color) {\n        const { type = this.type, color = this.color } = this._colorType(color_arg);\n\n        if (type === 'hex') {\n            const hex = color;\n            let rgbObject = { r: null, g: null, b: null };\n            let hexValues = hex.match(/[a-fA-F0-9]{2}/g);\n\n            if (hex.length === 4) {\n                hexValues = hex.match(/[a-fA-F0-9]{1}/g);\n                hexValues = hexValues.map(hex => \"\" + hex + hex);\n            }\n            let count = 0;\n            for (const key in rgbObject) {\n                rgbObject[key] = parseInt(hexValues[count], 16);\n                count++;\n            }\n\n            const opacity_value = typeof opacity === 'number' ? opacity : 1;\n            let { r, g, b } = rgbObject;\n\n            return {\n                ...rgbObject,\n                a: opacity_value,\n                string: this._toString({\n                    r: +r, g: +g, b: +b, a: opacity_value\n                })\n            };\n\n        } else {\n            const digit = this._extractDigit(color);\n            const a = typeof opacity === 'number' ? opacity : digit[3] || 1;\n\n            if (type.includes('rgb')) {\n\n                let value = {\n                    r: digit[0],\n                    g: digit[1],\n                    b: digit[2],\n                    a\n                };\n\n                return Object.assign({\n                    string: this._toString(value)\n                }, value);\n\n            } else if (type.includes('hsl')) {\n\n                let h = digit[0];\n                let s = digit[1];\n                let l = digit[2];\n\n                s /= 100;\n                l /= 100;\n\n                let c = (1 - Math.abs(2 * l - 1)) * s,\n                    x = c * (1 - Math.abs((h / 60) % 2 - 1)),\n                    m = l - c / 2,\n                    r = 0,\n                    g = 0,\n                    b = 0;\n                if (0 <= h && h < 60) {\n                    r = c;\n                    g = x;\n                    b = 0;\n                } else if (60 <= h && h < 120) {\n                    r = x;\n                    g = c;\n                    b = 0;\n                } else if (120 <= h && h < 180) {\n                    r = 0;\n                    g = c;\n                    b = x;\n                } else if (180 <= h && h < 240) {\n                    r = 0;\n                    g = x;\n                    b = c;\n                } else if (240 <= h && h < 300) {\n                    r = x;\n                    g = 0;\n                    b = c;\n                } else if (300 <= h && h < 360) {\n                    r = c;\n                    g = 0;\n                    b = x;\n                }\n                r = Math.round((r + m) * 255);\n                g = Math.round((g + m) * 255);\n                b = Math.round((b + m) * 255);\n\n                return {\n                    r, g, b, a,\n                    string: this._toString({ r, g, b, a })\n                };\n\n            }\n        }\n    }\n\n    /**\n     * @param {number} value - Adjust value by percent. range: -100 ~ 100\n     * @param {(string|Object)} [option=this.color] - Color to adjust || additional option.\n     * @param {(string|Object)} [option.color_arg=this.color] - Color to adjust.\n     * @param {(string|Object)} [option.legacy=false] - Legacy adjust mode. Adjust brightness by saturation and luminance.\n     * @return {string} - Brightness adjusted HTML color string\n     */\n    adjustBrightness(value = 0, option = this.color) {\n        let color_arg, legacy = false;\n        if (typeof option === 'string')\n            color_arg = option || this.color;\n        else {\n            color_arg = option.color || this.color;\n            legacy = option.legacy || false;\n        }\n\n        if (legacy) {\n            let { color } = this._colorType(color_arg);\n            let col = this.hsla(this.getAlpha(color), color);\n\n            let limit = (v, limit = 100) => {\n                return v > limit ? limit : v < 0 ? 0 : v;\n            };\n\n            col.s += ((value > 0 ? (100 - col.s) : col.s) / 100) * value;\n            col.s = limit(col.s);\n            col.l += ((value > 0 ? (100 - col.l) : col.l) / 100) * value;\n            col.l = limit(col.l);\n\n            return this._toString(col);\n        }\n\n        let { type = this.type, color = this.color } = this._colorType(color_arg);\n\n        if (value === 0)\n            return color;\n\n        const opacity = type === 'hex' ? 1 : this._extractDigit(color)[3] || 1;\n        const rgb = this.rgba(opacity, color);\n\n        let rgbRange = {\n            r: 0 - rgb['r'],\n            g: 0 - rgb['g'],\n            b: 0 - rgb['b']\n        };\n\n        if (value > 0) {\n            Object.keys(rgbRange).map(function (key) {\n                rgbRange[key] = 255 - rgb[key];\n            });\n        }\n\n        ['r', 'g', 'b'].map(function (key) {\n            rgb[key] += parseInt(rgbRange[key] / 100 * Math.abs(value));\n        });\n\n        const result = 'rgb(' + rgb.r + ', ' + rgb.g + ', ' + rgb.b + ')';\n\n        if (type === 'hex')\n            return this.hex(result);\n\n        else if (type.includes('rgb'))\n            return this.rgba(rgb.a, result).string;\n\n        else if (type.includes('hsl'))\n            return this.hsla(rgb.a, result).string;\n    }\n\n    /**\n     * @param {number} value - Adjust value by percent. range: -100 ~ 100\n     * @param {string} [color_arg=this.color] - Color to adjust.\n     * @return {string} - Luminance adjusted hsla color string\n     */\n    adjustLuminance(value = 0, color_arg = this.color) {\n        let { color } = this._colorType(color_arg);\n        let col = this.hsla(this.getAlpha(color), color);\n\n        let limit = (v, limit = 100) => {\n            return v > limit ? limit : v < 0 ? 0 : v;\n        };\n\n        col.l += ((value > 0 ? (100 - col.l) : col.l) / 100) * value;\n        col.l = limit(col.l);\n\n        return this._toString(col);\n    }\n\n    /**\n     * @param {number} value - Adjust value by percent. range: -100 ~ 100\n     * @param {string} [color_arg=this.color] - Color to adjust.\n     * @return {string} - Saturation adjusted hsla color string\n     */\n    adjustSaturation(value = 0, color_arg = this.color) {\n        let { color } = this._colorType(color_arg);\n        let col = this.hsla(this.getAlpha(color), color);\n\n        let limit = (v, limit = 100) => {\n            return v > limit ? limit : v < 0 ? 0 : v;\n        };\n\n        col.s += ((value > 0 ? (100 - col.s) : col.s) / 100) * value;\n        col.s = limit(col.s);\n\n        return this._toString(col);\n    }\n}\n\nexport { ColorMangle };","import {ColorMangle} from 'colormangle';\n\nexport class Wysiwyg4All {\n    /**\n     * Wysiwyg4All is a simple framework for building a text editor for your website.\n     * Focused on expandability and customizations.\n     * Additional library ColorMangle is required for text colors.\n     * @param {{}} option - Options\n     * @param {string} option.elementId - ID of target <DIV>.\n     * @param {boolean} [option.editable=true] - When set to false, Wysiwyg will not be editable. By doing this, it can be used as readonly.\n     * @param {string} [option.placeholder=''] - Add placeholder string.\n     * @param {boolean} [option.spellcheck=false] - Set spellcheck to true/false.\n     * @param {string | object} [option.highlightColor='teal'] - Sets the highlight color of the wysiwyg (web color name | hex | rgb | hsl). Or can provide custom color scheme object (more details in api doc).\n     * @param {string} [option.html=''] - HTML string to load on initialization.\n     * @param {function} [option.callback=(cb)=>{return cb}] - Setup callback function. Callback argument contains array of information such as current text style, added images, hashtags, urllinks, selected range... etc.\n     * @param {{} | number} [option.fontSize={desktop:18, tablet: 16, phone: 14}] - Set default font size of each screen size in px. If number is given all screen size will share the same give font size.\n     * @param {boolean} [option.lastLineBlank=false] - When set to true, Blank line will always be added on the last line of wysiwyg.\n     * @param {boolean} [option.hashtag=false] - When set to true, wysiwyg will auto detect hashtag strings.\n     * @param {boolean} [option.urllink=false] - When set to true, wysiwyg will auto detect url strings.\n     * @param {boolean} [option.logMutation=false] - When set to true, wysiwyg will output dom mutation data via callback function.\n     */\n    constructor(option) {\n        if (typeof ColorMangle === 'undefined')\n            throw \"Can't find colormangle.js library\";\n\n        this.hashtag_regex = /#[\\u0041-\\u005A\\u0061-\\u007A\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0\\u08A2-\\u08AC\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097F\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA697\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA80-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC\\w-]+(?:\\+[\\w-]+)*/g;\n        this.hashtag_stopper_regex = /[^\\u0041-\\u005A\\u0061-\\u007A\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0\\u08A2-\\u08AC\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097F\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA697\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA80-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC\\w-]/g;\n        this.urllink_regex = /(https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|www\\.[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9]+\\.[^\\s]{2,}|www\\.[a-zA-Z0-9]+\\.[^\\s]{2,})/gi;\n\n        let {\n            elementId = '',\n            editable = true,\n            placeholder = '',\n            spellcheck = false,\n            highlightColor = 'teal',\n            html = '',\n            callback,\n            fontSize = {\n                desktop: 18,\n                tablet: 16,\n                phone: 14\n            },\n            lastLineBlank = false,\n            hashtag = false,\n            urllink = false,\n            logMutation = false\n        } = option;\n\n        this.hashtag = hashtag;\n        this.urllink = urllink;\n        this.logMutation = logMutation;\n        this.fontSizeCssVariable = {};\n\n        if (typeof fontSize === 'number')\n            this.fontSizeCssVariable = {\n                '--wysiwyg-font-desktop': `${fontSize}px`,\n                '--wysiwyg-font-tablet': `${fontSize}px`,\n                '--wysiwyg-font-phone': `${fontSize}px`,\n            };\n        else if (typeof fontSize === 'object' && Object.keys(fontSize).length) {\n            let hold;\n            let keyArr = ['desktop', 'tablet', 'phone'];\n\n            for (let k of keyArr) {\n                if (fontSize[k]) {\n                    hold = fontSize[k];\n                    break;\n                }\n            }\n\n            if (!hold)\n                throw 'invalid fontSize';\n\n            for (let k of keyArr) {\n                if (fontSize[k])\n                    hold = fontSize[k];\n                this.fontSizeCssVariable[`--wysiwyg-font-${k}`] = `${hold}px`;\n            }\n        }\n\n        if (!elementId || typeof elementId !== 'string') throw new Error('The wysiwyg element should have an ID');\n        elementId = elementId[0] === '#' ? elementId.substring(1) : elementId;\n\n        this.html = html;\n        this.elementId = elementId[0] === '#' ? elementId.substring(1) : elementId;\n        this.placeholder = placeholder;\n        this.spellcheck = spellcheck;\n        this.lastLineBlank = lastLineBlank;\n\n        if (typeof highlightColor === 'string')\n            highlightColor = new ColorMangle(highlightColor).color;\n\n        this.colorScheme = highlightColor;\n        this.callback = callback || null;\n\n        this.image_array = [];\n        this.hashtag_array = [];\n        this.urllink_array = [];\n        this.custom_array = [];\n\n        this.blockElement_queryArray = ['HR', 'BLOCKQUOTE', 'UL', 'OL', '._media_', '._custom_'];\n        this.specialTextElement_queryArray = ['._hashtag_', '._urllink_'];\n        this.restrictedElement_queryArray = ['._media_', '._custom_'];\n        this.textAreaElement_queryArray = ['BLOCKQUOTE', 'LI'];\n        this.textBlockElement_queryArray = ['P', 'LI'];\n        this.ceilingElement_queryArray = ['UL', 'OL', 'BLOCKQUOTE', `#${elementId}`];\n        this.unSelectable_queryArray = ['._media_', '._custom_', '._hashtag_', '._urllink_', 'HR'];\n        this.styleAllowedElement_queryArray = ['._color', `#${elementId}`, '._hashtag_', '._urllink_'];\n        this.alignClass = ['_alignCenter_', '_alignRight_'];\n\n        this.hashtag_flag = false;\n        this.urllink_flag = false;\n        this.range_backup = null;\n\n        this.commandTracker = {};\n        this.range = null;\n        this.isRangeDirectionForward = true;\n        this.insertTabPending_tabString = '';\n        this.removeSandwichedLine_array = [];\n        this.lastKey = null;\n\n        //  setup div\n        this.element = document.getElementById(this.elementId);\n        if (!this.element)\n            throw `element #${this.elementId} is null`;\n\n        this.element.innerHTML = '';\n\n        this.cssVariable = new ColorMangle().colorScheme(this.colorScheme);\n        Object.assign(this.cssVariable, this.fontSizeCssVariable);\n\n        for (const v in this.cssVariable)\n            this.element.style.setProperty(v, this.cssVariable[v]);\n\n        this.elementComputedStyle = window.getComputedStyle(this.element);\n        this.defaultFontColor = new ColorMangle(this.cssVariable['--content-text']).hex();\n        this.highlightColor = new ColorMangle(this.cssVariable['--content-focus']).hex();\n\n        if (!this.element.classList.contains('_wysiwyg4all'))\n            this.element.classList.add('_wysiwyg4all');\n\n        this.setPlaceholder(this.placeholder);\n        this.setSpellcheck(this.spellcheck);\n\n        //  re-adjust min-height depending on padding\n        let paddingB = this.elementComputedStyle.paddingBottom;\n        let paddingT = this.elementComputedStyle.paddingTop;\n        let borderT = this.elementComputedStyle.borderTopWidth;\n        let borderB = this.elementComputedStyle.borderBottomWidth;\n\n        this.element.style.minHeight = `calc(${paddingB} + ${paddingT} + ${borderT} + ${borderB} + 1.6em)`;\n\n        //  command style tag\n        const command = {\n            //  [<targetClassName>, <cssProperty>, [<string: counter tag | class name>]]\n            h1: ['_h1', 'fontSize', ['_small', '_h2', '_h3', '_h4', '_h5', '_h6']],\n            h2: ['_h2', 'fontSize', ['_small', '_h1', '_h3', '_h4', '_h5', '_h6']],\n            h3: ['_h3', 'fontSize', ['_small', '_h1', '_h2', '_h4', '_h5', '_h6']],\n            h4: ['_h4', 'fontSize', ['_small', '_h1', '_h2', '_h3', '_h5', '_h6']],\n            h5: ['_h5', 'fontSize', ['_small', '_h1', '_h2', '_h3', '_h4', '_h6']],\n            h6: ['_h6', 'fontSize', ['_small', '_h1', '_h2', '_h3', '_h4', '_h5']],\n            italic: ['_i', 'fontStyle'],\n            small: ['_small', 'fontSize', ['_h1', '_h2', '_h3', '_h4', '_h5', '_h6', '_b']],\n            bold: ['_b', 'fontWeight', ['_small']],\n            underline: ['_u', 'textDecoration', ['_del']],\n            strike: ['_del', 'textDecoration', ['_u']],\n            color: ['_color', 'color']\n        };\n\n        const fontSizeRatio = {\n            //  should always be the same em value as css\n            h1: 4.2,\n            h2: 3.56,\n            h3: 2.92,\n            h4: 2.28,\n            h5: 1.64,\n            h6: 1.15,\n            small: 0.8,\n        };\n\n        this.styleTagOfCommand = {};\n        this.counterTagOf = {};\n        this.cssPropertyOf = {};\n        this.cssPropertyChecker = {\n            'textDecoration': (v) => {\n                //  v = <string: value from computedStyle>\n                if (v.includes('underline')) return 'underline';\n                else if (v.includes('line-through')) return 'strike';\n\n                return false;\n            },\n            'fontSize': (v) => {\n                //  v = <string: value from computedStyle>\n                let documentFontSize = parseFloat(this.elementComputedStyle.fontSize);\n                let nodeFontSize = parseFloat(v);\n                for (let tag in fontSizeRatio) {\n                    let f_size = fontSizeRatio[tag];\n\n                    //  precision\n                    let compare_size = documentFontSize * f_size;\n                    let f_size_high = compare_size + 0.01;\n                    let f_size_low = compare_size - 0.01;\n                    if (f_size_high > nodeFontSize && f_size_low < nodeFontSize) return tag;\n                }\n                return false;\n            },\n            'fontStyle': (v) => {\n                //  v = <string: value from computedStyle>\n                if (v.includes('italic'))\n                    return 'italic';\n                return false;\n            }\n        };\n\n        for (let c in command) {\n            this.commandTracker[c] = false;\n            this.styleTagOfCommand[c] = command[c][0];\n            this.cssPropertyOf[command[c][0]] = command[c][1];\n            if (!this.cssPropertyChecker.hasOwnProperty(command[c][1]))\n                this.cssPropertyChecker[command[c][1]] = c;\n            if (command[c][2])\n                this.counterTagOf[command[c][0]] = command[c][2];\n        }\n\n        /**\n         this.styleTagOfCommand = {\n            [commandKey]: <targetClassName>\n         };\n\n         this.cssPropertyChecker = {\n            [cssPropertyKey]: <commandKey | function(<cssValue>)>\n         };\n\n         this.cssPropertyOf = {\n            [targetClassName]: <cssPropertyKey>\n         };\n\n         this.counterTagOf = {\n            [targetClassName]: [<counterClassName>]\n         };\n\n         this.commandTracker = {\n            [commandKey]: <boolean>\n         };\n\n         console.log({\n            styleTagOfCommand: this.styleTagOfCommand,\n            cssPropertyChecker: this.cssPropertyChecker,\n            cssPropertyOf: this.cssPropertyOf,\n            counterTagOf: this.counterTagOf,\n            commandTracker: this.commandTracker\n         });\n         */\n\n        this.loadHTML(this.html, editable).catch(err => {\n            throw err;\n        });\n    }\n\n    _adjustSelection(target, ceilingElement_query = this.ceilingElement_queryArray) {\n        let toArray = (v, allowObject = false) => {\n            if (Array.isArray(v)) return v;\n            else if (\n                typeof v === 'string' && v ||\n                typeof v === 'number' ||\n                typeof v === 'boolean' ||\n                allowObject && typeof v === 'object')\n                return [v];\n            else return [];\n        };\n\n        let setRange = !!target;\n\n        let { node = null, position = true } = target || {};\n\n        let sel = window.getSelection();\n        if (!sel)\n            return null;\n\n        let range;\n        try {\n            range = sel.getRangeAt(0);\n        } catch (err) {\n            if (setRange)\n                range = document.createRange();\n        }\n\n        if (setRange) {\n            node = toArray(node, true);\n            position = toArray(position, true);\n\n            for (let p of position)\n                if (typeof p !== 'number' && typeof p !== 'boolean' && p !== null) throw 'INVALID_POSITION';\n\n            for (let n of node)\n                if (!(n instanceof Node) && n !== null) throw 'INVALID_NODE';\n\n\n            const setTarget = (node, position) => {\n                if (node instanceof Node) {\n                    if (node.nodeType === 1) {\n                        if (typeof position === 'boolean')\n                            while (position === false ? node.lastChild : node.firstChild)\n                                node = position === false ? node.lastChild : node.firstChild;\n\n                        else if (typeof position === 'number') {\n                            let textLength = 0;\n                            this._nodeCrawler(n => {\n                                if (n.nodeType === 3 && n.textContent.length) {\n                                    let length = n.textContent.length;\n                                    if (n.parentNode.getAttribute('contenteditable') === 'false') {\n\n                                        if ((position - (textLength + length)) >= 0)\n                                            textLength += length;\n                                        else {\n                                            position = length;\n                                            return 'BREAK';\n                                        }\n                                        return n;\n                                    } else {\n                                        node = n;\n\n                                        if ((position - (textLength + length)) >= 0) {\n                                            textLength += length;\n                                        } else {\n                                            position -= textLength;\n                                            return 'BREAK';\n                                        }\n                                    }\n                                }\n                                return n;\n                            }, {\n                                node,\n                            });\n                            if (node.nodeType === 1) {\n                                let text = document.createTextNode('\\u200B');\n                                node.insertBefore(text, node.childNodes[0]);\n                                node = text;\n                                position = 0;\n                            }\n                        }\n\n                        if (node.nodeName === 'BR' && node.parentNode.childNodes.length > 1)\n                            node = node.previousSibling || node;\n                    }\n                    if (typeof position === 'boolean')\n                        position = position ? 0 : node.textContent.length;\n                    else position = position > node.textContent.length ? node.textContent.length : position;\n\n                    return { node, position };\n                }\n            };\n\n            let doCollapse = false, setEnd, setStart = (() => {\n                node[0] = node[0] === null ? range.startContainer : node[0];\n                position[0] = position[0] === null ? range.startOffset : position[0];\n                return setTarget(node[0], position[0]);\n            })();\n            range.setStart(setStart.node, setStart.position);\n\n            if (position.length > 1)\n                setEnd = setTarget(\n                    (node[1] === null ? range.endContainer : node[1]) || node[0],\n                    position[1] === null ? range.endOffset : position[1]);\n            else {\n                setEnd = setStart;\n                doCollapse = true;\n            }\n\n            range.setEnd(setEnd.node, setEnd.position);\n\n            if (doCollapse)\n                range.collapse(true);\n\n            sel.removeAllRanges();\n            sel.addRange(range);\n        }\n\n        if (ceilingElement_query && range) {\n            let startLine, endLine;\n            for (let q of ceilingElement_query) {\n                let e = range.endContainer.nodeType === 3 ?\n                    range.endContainer.parentNode : range.endContainer;\n                let s = range.startContainer.nodeType === 3 ?\n                    range.startContainer.parentNode : range.startContainer;\n\n                if (!startLine && s.closest(q))\n                    startLine = this._climbUpToEldestParent(s, s.closest(q));\n                if (!endLine && e.closest(q))\n                    endLine = this._climbUpToEldestParent(e, e.closest(q));\n            }\n\n            range.startLine = startLine;\n            range.endLine = endLine;\n        }\n\n        return range;\n    }\n\n    _generateId(option) {\n        let limit = 12;\n        let prefix = '';\n\n        if (typeof option === 'number') limit = option;\n        else if (typeof option === 'string') prefix = `${option}_`;\n\n        const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\n\n        let text = '';\n        for (let i = 0; i < limit - 6; i++) text += possible.charAt(Math.floor(Math.random() * (possible.length - 1)));\n\n        const numb = new Date()\n            .getTime()\n            .toString()\n            .substring(7, 13); // SECOND, MILLISECOND\n\n        const shuffleArray = (array) => {\n            let currentIndex = array.length;\n            let temporaryValue, randomIndex;\n            while (0 !== currentIndex) {\n                randomIndex = Math.floor(Math.random() * currentIndex);\n                currentIndex -= 1;\n                temporaryValue = array[currentIndex];\n                array[currentIndex] = array[randomIndex];\n                array[randomIndex] = temporaryValue;\n            }\n            return array;\n        };\n\n        const letter_array = shuffleArray((text + numb).split(''));\n\n        let output = '';\n        for (let i = 0; i < limit; i++) output += letter_array[i];\n\n        return prefix + output;\n    }\n\n    _nodeCrawler(run, option) {\n        const { parentNode, node, startFromEldestChild, startNode } = option;\n\n        if (startFromEldestChild && !parentNode)\n            throw new Error('Need parentNode to crawl up single child');\n\n        if (!node || !(node instanceof Node || node?.commonAncestorContainer))\n            throw new Error('No node to crawl');\n\n        let\n            outputNodes = [],\n            nodeIsRange = !!(node.commonAncestorContainer),\n            commonContainer = null,\n            parentAnchor;\n\n        if (parentNode && parentNode instanceof Node && parentNode?.nodeType === 1)\n            parentAnchor = parentNode;\n\n        if (nodeIsRange) {\n            commonContainer = node.commonAncestorContainer;\n            commonContainer = commonContainer.nodeType === 3 ? commonContainer.parentNode || commonContainer : commonContainer;\n        } else\n            commonContainer = node;\n\n        if (startFromEldestChild)\n            commonContainer = this._climbUpToEldestParent(commonContainer, parentNode, true);\n\n        if (parentAnchor) {\n            while (\n                commonContainer.nodeType === 3 ||\n                commonContainer !== parentAnchor &&\n                commonContainer.parentNode &&\n                commonContainer.parentNode !== parentAnchor\n            ) commonContainer = commonContainer.parentNode;\n        }\n\n        /** crawl order below (outputs node on the way)\n         *  If 'BREAK' is returned, the node is not saved in outputNode\n         *\n         *  start   ->  [                   end\n         *                  |               ^ (finish)\n         *                  v               | (outputNode)\n         *              outputNode  ->  outputNode\n         *\n         *  NOTE: Will not crawl when node is textNode\n         */\n\n        if (commonContainer.nodeType === 3) {\n            outputNodes.push(run(commonContainer));\n\n            return { nodes: outputNodes, commonContainer };\n        }\n\n        let id, uniqueId;\n        if (commonContainer.nodeType === 1) {\n            uniqueId = commonContainer.id || (() => {\n                id = this._generateId('crawl');\n                commonContainer.id = id;\n                return id;\n            })();\n        }\n\n        let crawl = ((startNode instanceof Node) ? startNode : null) || (nodeIsRange ? node.startContainer : commonContainer.childNodes[0]);\n        let endNode = nodeIsRange ? node.endContainer : commonContainer.childNodes[commonContainer.childNodes.length ? commonContainer.childNodes.length - 1 : 0];\n\n        let withInRange = (cwl) => {\n            if (!cwl || !(cwl instanceof Node)) return false;\n            if (cwl.nodeType === 1)\n                return cwl.id !== uniqueId && cwl.parentNode?.closest('#' + uniqueId);\n            else return true;\n        };\n\n        while (withInRange(crawl)) {\n            if (crawl.nodeType === 1 && crawl.childNodes.length) {\n                // dive down to deepest child's first crawl\n                crawl = crawl.childNodes[0];\n            } else if (crawl) {\n                // entering the deepest elements first child.\n\n                if (typeof run === 'function') crawl = run(crawl);\n                if (crawl === 'BREAK' || !withInRange(crawl)) break;\n\n                outputNodes.push(crawl);\n\n                // break out if the crawl hits the end\n                if (crawl === endNode) break;\n\n                /**\n                 * Climb up the node if the node doesn't have any next siblings\n                 * Stop when it hits the commonContainer\n                 */\n                let breakOut = false;\n                while (!crawl.nextSibling && crawl.parentNode && withInRange(crawl.parentNode)) {\n                    crawl = crawl.parentNode;\n                    if (crawl) {\n                        if (typeof run === 'function')\n                            crawl = run(crawl);\n\n                        if (crawl === 'BREAK' || !withInRange(crawl)) {\n                            breakOut = true;\n                            break;\n                        }\n\n                        if (crawl)\n                            outputNodes.push(crawl);\n                    }\n                }\n\n                if (breakOut) break;\n\n                // move on to next crawl\n                crawl = crawl.nextSibling;\n            }\n        }\n\n        if (id)\n            commonContainer.removeAttribute('id');\n\n        return { node: outputNodes, commonContainer };\n    }\n\n    _wrapNode(node, wrapper, appendWhole = false) {\n        if (!(node instanceof Node)) return;\n\n        if (!node.parentNode)\n            throw new Error(\"can't unwrap document fragment\");\n\n        // save current range\n        let sel = window.getSelection();\n        let range = sel.getRangeAt(0);\n        let start = null;\n        let startOffset = range.startOffset;\n        let end = null;\n        let endOffset = range.endOffset;\n\n        const withinRange = (n) => {\n            if (range.startContainer === n) {\n                start = n;\n            }\n            if (range.endContainer === n) {\n                end = n;\n            }\n        };\n\n        if (node.nodeType === 1) {\n            this._nodeCrawler(n => {\n                withinRange(n);\n                return n;\n            }, { node });\n        } else withinRange(node);\n\n        if (wrapper) {\n            // place the wrapper\n            node.parentNode.insertBefore(wrapper, node);\n        }\n\n        // append node\n        if (node.nodeType === 3) {\n            if (wrapper)\n                wrapper.append(node);\n            else throw new Error('no wrapper for text content');\n        } else if (appendWhole)\n            wrapper.append(node);\n        else\n            while (node.childNodes[0]) {\n                let child = node.childNodes[0];\n                if (wrapper) wrapper.append(child);\n                else node.parentNode.insertBefore(child, node);\n            }\n\n        let stripped;\n        if (node.nodeType === 1 && !appendWhole) {\n            let n = wrapper || node;\n            let p = n.parentNode;\n            stripped = node.previousSibling;\n            p.removeChild(node);\n        }\n\n        // restore range\n        if ((stripped || node).textContent && (start || end)) {\n            if (start && start === end && startOffset === endOffset)\n                range = this._adjustSelection({ node: stripped || node, position: startOffset });\n            else\n                range = this._adjustSelection({\n                    node: [start, end],\n                    position: [startOffset, endOffset]\n                });\n        }\n\n        this.range = range;\n        return { node: stripped || node, range };\n    }\n\n    _isSingleChildParent(n) {\n\n        if (!n || n.nodeType === 3)\n            return false;\n\n        let childrenCount = n?.children?.length;\n        return (\n            childrenCount === 0 ||\n            (() => {\n                let sweep = n.childNodes.length;\n                let divCount = 0;\n                let iHaveText = false;\n\n                while (sweep--) {\n                    let s = n.childNodes[sweep];\n\n                    if (s.nodeType === 3 && s.textContent.length > 0 && s.textContent !== '\\u200B')\n                        iHaveText = true;\n\n                    else if (s.nodeType === 1 && s.nodeName !== 'BR')\n                        divCount++;\n\n                    if (divCount > 1 || divCount && iHaveText)\n                        return false;\n                }\n\n                return true;\n            })()\n        );\n\n    }\n\n    _climbUpToEldestParent(node, wrapper, singleChildParent = false, callback) {\n        callback = callback || ((n) => {\n            return n;\n        });\n\n        if (!(wrapper instanceof Node) || wrapper?.nodeType === 3)\n            throw new Error('invalid wrapper node');\n\n        let id;\n        let uniqueId = wrapper.id || (() => {\n            id = this._generateId('eldest');\n            wrapper.id = id;\n            return id;\n        })();\n        // on single parent mode climb up if parent has only 1 child or 2 child with zero space text\n\n        while (\n            node?.id !== uniqueId &&\n            node.parentNode &&\n            node.parentNode.closest('#' + uniqueId) &&\n            node.parentNode.id !== uniqueId &&\n            (singleChildParent ? this._isSingleChildParent(node?.parentNode) : true)\n        ) {\n\n            let cb = callback(node.parentNode);\n\n            if (!cb || cb === 'BREAK')\n                break;\n\n            node = cb;\n        }\n\n        if (id)\n            wrapper.removeAttribute('id');\n\n        return node;\n    }\n\n    _isSelectionWithinRestrictedRange(range = this.range, element = this.element) {\n        if (!range)\n            return true;\n\n        let { commonAncestorContainer, startContainer, endContainer } = range;\n        let restrict = this.restrictedElement_queryArray;\n        let startLine = this._climbUpToEldestParent(startContainer, element);\n        let endLine = this._climbUpToEldestParent(endContainer, element);\n\n        if (startLine === endLine) {\n            commonAncestorContainer = commonAncestorContainer.nodeType === 3 ? commonAncestorContainer.parentNode : commonAncestorContainer;\n            for (let r of restrict) {\n                let cl = commonAncestorContainer.closest(this._classNameToQuery(r));\n                if (cl)\n                    return r;\n            }\n        } else {\n            while (startLine && startLine !== endLine) {\n                startLine = startLine.nextSibling;\n                if (startLine) {\n                    if (startLine.nodeType === 1)\n                        for (let r of restrict) {\n                            if (startLine.classList.contains(r))\n                                return r;\n                        }\n                } else\n                    break;\n            }\n        }\n\n        return false;\n    }\n\n    _classNameToQuery(q) {\n        if (q.includes('_stop') && q[0] !== '.')\n            return '.' + q;\n        return q[0] === '_' ? '.' + q : q;\n    }\n\n    _createEmptyParagraph(append) {\n        let p = document.createElement('p');\n\n        if (append && typeof append === 'string')\n            append = document.createTextNode(append);\n\n        p.append(append || document.createTextNode(''));\n\n        if (!append)\n            p.append(document.createElement('br'));\n\n        return p;\n    }\n\n    _trackStyle(n, cls) {\n        let commandTracker = {};\n        let style = window.getComputedStyle(n);\n\n        for (let c of this.alignClass) {\n            if (n.closest('.' + c))\n                commandTracker[c.substring(1, c.length - 1)] = true;\n        }\n\n        let checker = (sp) => {\n            let key = this.cssPropertyChecker[sp];\n            if (typeof key === 'function') {\n                key = key(style[sp]);\n                if (key) {\n                    if (cls)\n                        return key;\n                    commandTracker[key] = true;\n                }\n            } else if (sp === 'color' && style[sp]) {\n\n                let col = style[sp][0] === '#' ? style[sp] : new ColorMangle(style[sp]).hex();\n\n                if (col !== this.defaultFontColor) {\n                    if (cls)\n                        return col;\n                    commandTracker[key] = col;\n                }\n\n            } else if (style[sp] !== this.elementComputedStyle[sp] && this._isTextElement(n)) {\n                if (cls)\n                    return true;\n                commandTracker[key] = true;\n            }\n            return false;\n        };\n\n        if (cls)\n            return checker(this.cssPropertyOf[cls.toLowerCase()]);\n\n        for (let sp in this.cssPropertyChecker) {\n            checker(sp);\n        }\n\n        return commandTracker;\n    }\n\n    _lastLineBlank() {\n        if (this.lastLineBlank) {\n            let lastLine = this.element.lastChild;\n            if (lastLine.nodeName !== 'P' ||\n                lastLine.nodeName === 'P' && lastLine.textContent && lastLine.textContent !== '\\u200B') {\n                this.element.append(this._createEmptyParagraph());\n            }\n        }\n    }\n\n    _setEventListener(listen) {\n        /**\n         * keydown -> observer(dom change) -> selection change -> click | keyup\n         */\n\n        document.removeEventListener('selectionchange', this._selectionchange);\n        this.imgInput = null;\n        if (this.element) {\n            this.element.removeEventListener('keydown', this._keydown);\n            this.element.removeEventListener('mousedown', this._normalize);\n            window.removeEventListener('mousedown', this._normalize);\n            this.element.removeEventListener('paste', this._paste);\n            this.element.removeEventListener('keyup', this._keyup);\n        }\n\n        if (!listen)\n            return;\n\n        //  image selector\n        let imgInput = document.createElement('input');\n        for (const [key, value] of Object.entries({\n            id: this._generateId('imageInput'),\n            type: 'file',\n            accept: 'image/gif,image/png,image/jpeg,image/webp',\n            hidden: true,\n            multiple: true\n        })) {\n            imgInput.setAttribute(key, value);\n        }\n\n        this.imgInput = imgInput;\n        this.imgInput.addEventListener('change', e => {\n            this._imageSelected(e).catch(err => {\n                console.error(err);\n            });\n        });\n\n        this._selectionchange = (function () {\n            this._modifySelection(() => {\n                let isForward = !(this.lastKey === 'DELETE' || this.lastKey === 'BACKSPACE') || this.isRangeDirectionForward;\n\n                let rangeHeader = isForward ? this.range.endContainer : this.range.startContainer;\n                this.lastKey = null;\n\n                //  nudge range in-case carat is within non selectables\n                let unSel = this._isUnSelectableElement(rangeHeader);\n                if (unSel) {\n                    let selNext = isForward ? unSel.nextSibling : unSel.previousSibling;\n\n                    if (!selNext && !isForward) {\n                        selNext = document.createTextNode('\\u200B');\n                        unSel.parentNode.insertBefore(selNext, isForward ? unSel.nextSibling : unSel);\n                    }\n                    if (selNext)\n                        this.range = this._adjustSelection({\n                            node: this.range.collapsed ? selNext : isForward ? [null, selNext] : [selNext, null],\n                            position: this.range.collapsed ? isForward ? 0 : selNext.textContent.length : isForward ? [null, 0] : [0, null],\n                        });\n                }\n\n                //  track commandTracker\n                let commandTracker = {};\n                for (let style in this.styleTagOfCommand) {\n                    commandTracker[style] = false;\n                }\n\n                if (this._isSelectionWithinRestrictedRange()) {\n                    this.commandTracker = commandTracker;\n                    return;\n                }\n\n                let skipTrack = this.restrictedElement_queryArray.concat(this.specialTextElement_queryArray);\n                let crawlResult = this._nodeCrawler((node) => {\n                    if (node.nodeType === 1 && node.closest('blockquote') || node.nodeType === 3 && node.parentNode.closest('blockquote'))\n                        commandTracker.quote = true;\n\n                    let styleRestrictedParents = (c) => {\n                        return node.nodeType === 3 ? node.parentNode.closest(c) : node.nodeType === 1 ? node.closest(c) : !(node instanceof Node);\n                    };\n\n                    for (let p of skipTrack) {\n                        let chk = styleRestrictedParents(p);\n                        if (chk)\n                            return node;\n                    }\n\n                    if (\n                        node.nodeType === 3 ||\n                        node.nodeName === 'BR' ||\n                        node.nodeType === 1 &&\n                        node.childNodes.length === 1 &&\n                        (\n                            node.childNodes[0].nodeName === 'BR' ||\n                            node.childNodes[0].nodeType === 3\n                        )\n                    ) {\n\n                        let n = node.nodeType === 3 || node.nodeName === 'BR' ? node.parentNode : node;\n\n                        let comm = this._trackStyle(n);\n                        for (let c in comm)\n                            commandTracker[c] = comm[c];\n\n                    }\n                    return node;\n                }, { node: this.range, parentNode: this.element });\n\n                if (!crawlResult.node.length) {\n                    let comm = this._trackStyle(this.range.startContainer);\n                    for (let c in comm)\n                        commandTracker[c] = comm[c];\n                }\n\n                this.commandTracker = commandTracker;\n                let caratPosition;\n                let caratEl = this.isRangeDirectionForward ? this.range.endContainer : this.range.startContainer;\n\n                if (caratEl.nodeType === 3)\n                    caratPosition = this.range.getBoundingClientRect();\n                else if (caratEl.nodeType === 1)\n                    caratPosition = caratEl.getBoundingClientRect();\n\n                this._callback({ commandTracker, range: this.range, caratPosition }).catch(err => err);\n                this._lastLineBlank();\n            });\n        }).bind(this);\n\n        this._keydown = (function (e) {\n            if (this._isSelectionWithinRestrictedRange())\n                return;\n\n            this._modifySelection(() => {\n                if (!this.range)\n                    return;\n                let {\n                    startContainer,\n                    startOffset,\n                    collapsed,\n                    startLine,\n                    endLine\n                } = this.range;\n\n                let key = e.key.toUpperCase();\n                let shift = e.shiftKey;\n\n                this.lastKey = key;\n\n                if (key === 'ENTER' && e.shiftKey) {\n                    // prevent shift+enter\n                    if (!this.range.endLine.closest('LI'))\n                        e.preventDefault();\n                    return;\n                }\n\n                // delete key\n                if (['BACKSPACE', 'DELETE'].includes(key)) {\n                    this.isRangeDirectionForward = true;\n\n                    if (\n                        !this.element.textContent &&\n                        this.element.childNodes.length <= 1 &&\n                        this._isTextElement(this.element.childNodes[0]) &&\n                        this.element.childNodes[0] === startLine\n                    )\n                        // there is nothing to delete\n                        e.preventDefault();\n                    else if (this.range.collapsed) {\n                        let stc = this.range.startContainer;\n\n                        let block = (stc.nodeType === 3 ? stc.parentNode : stc).closest('blockquote');\n                        if (block && block.childNodes[0] === this._climbUpToEldestParent(stc, block) && this.range.startOffset === 0) {\n                            // cursor is on the first offset position within the blockquote\n                            e.preventDefault();\n                            this.command('quote');\n                        } else if (stc.nodeType === 1 && this._isTextBlockElement(stc) && !this.range.startOffset) {\n                            let t = document.createTextNode('\\u200B');\n                            stc.insertBefore(t, stc.childNodes[0]);\n                            this.range = this._adjustSelection({\n                                node: t,\n                                position: 0\n                            });\n                        }\n                    }\n                    return;\n                }\n\n                //  hashtag flag\n                if (key === '#' && !this.hashtag_flag) {\n                    this.hashtag_flag = true;\n                    return;\n                }\n\n                //  url flag\n                if ([':', '/', '.'].includes(key) && !this.urllink_flag) {\n                    this.urllink_flag = true;\n                    return;\n                }\n\n                // insert hashtag | urllink\n                if ((this.hashtag_flag || this.urllink_flag) && ([' ', 'ENTER', 'TAB'].includes(key) || key.includes('ARROW'))) {\n                    this._replaceText();\n                    // return;\n                }\n\n                // when user press shift + arrows to expand the selection range,\n                // this.isRangeDirectionForward is responsible of setting direction to expand\n                // when set to true, the endOffset will change when using shift + arrow\n                if (shift) {\n                    if (key === 'PAGEUP' || key === 'HOME') {\n                        this.isRangeDirectionForward = false;\n                        return;\n                    }\n\n                    if (key === 'PAGEDOWN' || key === 'END') {\n                        this.isRangeDirectionForward = true;\n                        return;\n                    }\n                }\n\n                if (key.includes('ARROW')) {\n                    this._setArrow(e);\n                    return;\n                }\n\n                if (key === 'TAB') {\n                    this.isRangeDirectionForward = true;\n\n                    e.preventDefault();\n                    let sweep_array = [];\n\n                    if (!collapsed) {\n                        let sweep = startLine;\n                        while (sweep && sweep !== endLine) {\n                            sweep_array.push(sweep);\n                            sweep = sweep.nextSibling;\n                        }\n                        sweep_array.push(endLine);\n                    }\n\n                    if (shift) {\n                        // delete indent\n                        let hasIndent = false;\n                        let diveAndRemoveTab = (n) => {\n                            while (n.childNodes[0]) {\n                                n = n.childNodes[0];\n\n                                while (n.nodeType === 3 && !n.textContent)\n                                    n = n.nextSibling;\n\n                                if (n.nodeType === 3 && n.textContent[0] === '\\t') {\n                                    hasIndent = true;\n                                    n.textContent = n.textContent.substring(1);\n                                    break;\n                                }\n                            }\n                        };\n                        if (sweep_array.length) {\n\n                            for (let n of sweep_array) {\n                                if (n.textContent[0] === '\\t')\n                                    diveAndRemoveTab(n);\n                            }\n                            if (hasIndent)\n                                this._adjustSelection({\n                                    node: [startLine, endLine],\n                                    position: [true, false]\n                                });\n                        } else if (startLine.textContent[0] === '\\t') {\n\n                            let lineOffset = (line, container, containerOffset) => {\n                                if (line === container)\n                                    return containerOffset;\n\n                                this._nodeCrawler(n => {\n                                    if (container === n)\n                                        return 'BREAK';\n\n                                    if (n.nodeType === 3 && n.textContent.length)\n                                        containerOffset += n.textContent.length;\n\n                                    return n;\n                                }, { node: line });\n                                return containerOffset;\n                            };\n\n                            let offset = lineOffset(startLine, startContainer, startOffset) - 1;\n                            offset = offset < 0 ? 0 : offset;\n\n                            diveAndRemoveTab(startLine);\n                            if (hasIndent)\n                                this._adjustSelection({ node: startLine, position: offset });\n                        }\n                    } else {\n                        // indent\n                        if (sweep_array.length) {\n                            let hasIndent = false;\n                            for (let n of sweep_array) {\n                                hasIndent = true;\n                                let tab = document.createTextNode('\\t');\n                                n.insertBefore(tab, n.childNodes[0]);\n                            }\n                            if (hasIndent)\n                                this._adjustSelection({\n                                    node: [startLine, endLine],\n                                    position: [true, false]\n                                });\n\n                        } else {\n                            let tab = document.createTextNode('\\t');\n                            this.range.insertNode(tab);\n                            this._adjustSelection({ node: tab, position: false });\n                        }\n                    }\n                    return;\n                }\n\n                if (key === 'ENTER') {\n                    //  remove zero space\n                    if (collapsed && (startContainer.textContent.includes('\\u200B') || !startContainer.textContent)) {\n\n                        this._nodeCrawler(n => {\n                            if (n.nodeType === 3 && (n.textContent === '\\u200B' || !n.textContent)) {\n                                n.remove();\n                            }\n\n                            return n;\n                        }, { node: startContainer.nodeType === 3 ? startContainer.parentNode : startContainer });\n                    }\n\n                    if (endLine.textContent[0] === '\\t') {\n                        for (let s of endLine.textContent) {\n                            if (s === '\\t')\n                                this.insertTabPending_tabString += '\\t';\n                            else break;\n                        }\n                    }\n                }\n\n                this.isRangeDirectionForward = true;\n            });\n\n        }).bind(this);\n        this._normalize = (function (e) {\n            e.stopPropagation();\n            this._modifySelection(() => {\n                if (this._isSelectionWithinRestrictedRange())\n                    return;\n                this._normalizeDocument(true);\n                this.range_backup = this.range.cloneRange();\n                this._replaceText(true);\n            });\n        }).bind(this);\n        this._paste = (function (e) {\n            e.preventDefault();\n            if (this._isSelectionWithinRestrictedRange())\n                return;\n            this._modifySelection(() => {\n                if (this.range) {\n                    if (this._isSelectionWithinRestrictedRange())\n                        return;\n                    let doc = document.createDocumentFragment();\n                    doc.textContent = e.clipboardData.getData('text/plain').replace(/\\n\\n/g, '\\n');\n\n                    if (doc.textContent.includes('#')) {\n                        this.hashtag_flag = true;\n                    }\n\n                    //  url flag\n                    for (let u of [':', '/', '.']) {\n                        doc.textContent.includes(u);\n                        this.urllink_flag = true;\n                    }\n\n                    if (!this.range.collapsed)\n                        this.range.extractContents();\n                    this.range.insertNode(doc);\n\n                }\n            });\n        }).bind(this);\n        this._keyup = (function () {\n            if (this.removeSandwichedLine_array.length)\n                while (this.removeSandwichedLine_array.length)\n                    this.removeSandwichedLine_array.pop().remove();\n        }).bind(this);\n\n        document.addEventListener('selectionchange', this._selectionchange);\n        this.element.addEventListener('keydown', this._keydown);\n        this.element.addEventListener('mousedown', this._normalize);\n        // this.element.addEventListener('blur', this._normalize);\n        // fuck safari, firefox\n        window.addEventListener('mousedown', this._normalize);\n        this.element.addEventListener('paste', this._paste);\n        this.element.addEventListener('keyup', this._keyup);\n    }\n\n    _observeMutation(track) {\n        if (this.observer)\n            this.observer.disconnect();\n\n        this.observer = null;\n\n        if (!track)\n            return;\n\n        this.observer = new MutationObserver(mutation_array => {\n\n            if (this.logMutation) {\n                let monitor = mutation_array.map(m => {\n                    return {\n                        target: m.target.cloneNode(true),\n                        type: m.type,\n                        name: m.attributeName,\n                        added: (() => {\n                            let clones = [];\n                            for (let a of m.addedNodes) {\n                                if (a.nodeType === 3)\n                                    clones.push(a.textContent);\n                                else\n                                    clones.push(a.cloneNode(true));\n                            }\n                            return clones;\n                        })(),\n                        removed: (() => {\n                            let clones = [];\n                            for (let r of m.removedNodes) {\n                                if (r.nodeType === 3)\n                                    clones.push(r.textContent);\n                                else\n                                    clones.push(r.cloneNode(true));\n                            }\n                            return clones;\n                        })()\n                    };\n                });\n\n                let mutate = [];\n                for (let m of monitor) {\n                    if (m.type === 'childList' || m.attributeName === 'class')\n                        mutate.push(m);\n                }\n\n                if (mutate.length)\n                    this._callback({ mutation: mutate }).catch(_ => {\n                    });\n            }\n\n            for (const mutation of mutation_array) {\n\n                /** changes in attributes */\n                if (mutation.type === 'attributes') {\n                    const { target, attributeName } = mutation;\n                    if (attributeName === 'class') {\n                        if (target.parentNode && !target.classList.length && !(this._isTextBlockElement(target) || this._isBlockElement(target) || target.nodeName === 'P')) {\n                            // this._unwrapElement(target);\n                            this._wrapNode(target);\n                        }\n                        if (!target.classList.length)\n                            target.removeAttribute('class');\n                    }\n                    //  prevent style attributes\n                    if (attributeName === 'style' && !this._isStyleAllowedElement(target))\n                        target.removeAttribute('style');\n                    continue;\n                }\n\n                /** changes in node */\n                if (mutation.type === 'childList') {\n                    let mutationTarget = mutation.target;\n\n                    /** removed nodes */\n                    if (mutation.removedNodes.length) {\n                        for (let m of mutation.removedNodes) {\n\n                            /**\n                             *  CAUTION!\n                             *  changing the order of if statements below can lead to critical flaw\n                             *  _custom_ class should always be checked after _urllink_ and _hashtag_\n                             */\n\n                            let callbackRemoved = (what, m) => {\n                                if (!m.id)\n                                    return;\n\n                                let arrIdx = this[`${what}_array`].length;\n                                let removed;\n\n                                while (arrIdx--) {\n                                    let got = this[`${what}_array`][arrIdx];\n                                    if (got.elementId === m.id) {\n                                        removed = this[`${what}_array`].splice(arrIdx, 1);\n                                        break;\n                                    }\n                                }\n\n                                if (removed) {\n                                    this._callback({ removed: { [what]: removed } }).catch(err => {\n                                        throw err;\n                                    });\n                                }\n                            };\n\n                            if (m?.classList?.contains('_media_')) {\n                                let child = m.childNodes;\n                                let childIdx = child.length;\n                                while (childIdx--) {\n                                    let c = child[childIdx];\n                                    switch (c.nodeName) {\n                                        case 'IMG':\n                                            callbackRemoved('image', c);\n                                            break;\n                                    }\n                                }\n                                continue;\n                            }\n\n                            let toBreak = false;\n                            for (let t of ['hashtag', 'urllink', 'custom']) {\n                                if (m?.id?.includes(t)) {\n                                    callbackRemoved(t, m);\n                                    toBreak = true;\n                                    break;\n                                }\n                            }\n\n                            toBreak = false;\n\n                            //this._isCeilingElement(mutationTarget) &&\n                            if ((() => {\n                                let idx = mutationTarget.childNodes.length;\n                                if (idx)\n                                    while (idx--) {\n                                        let node = mutationTarget.childNodes[idx];\n                                        if (node.nodeType === 1 || node.textContent) {\n                                            return false;\n                                        }\n                                    }\n                                return true;\n                            })()) {\n                                mutationTarget.remove();\n                                continue;\n                            }\n\n                            if (this._isTextBlockElement(mutationTarget) && mutationTarget.childNodes.length === 1\n                                && this._isUnSelectableElement(mutationTarget.childNodes[0]))\n                                mutationTarget.append(document.createTextNode(''));\n                        }\n                    }\n\n                    /** added nodes */\n                    if (mutation.addedNodes.length)\n                        for (let i of mutation.addedNodes) {\n\n                            let getBr = (n) => {\n                                let idx = n?.childNodes?.length;\n                                let br = [];\n                                while (idx--) {\n                                    let c = n.childNodes[idx];\n                                    if (c.nodeName === 'BR')\n                                        br.push(c);\n                                }\n                                return br;\n                            };\n\n                            if (i.nodeType === 3) {\n                                // wrap all eldest text node\n                                if (this._isCeilingElement(mutationTarget))\n                                    this._wrapNode(i, document.createElement('p'));\n\n                                // remove <br> when there is text\n                                else if (i.textContent && i.textContent !== '\\u200B') {\n                                    // prevent br added to line\n                                    let br = getBr(mutationTarget);\n                                    if (br.length)\n                                        for (let b of br)\n                                            b.remove();\n                                }\n\n                                continue;\n                            }\n\n                            if (i.nodeType === 1) {\n\n                                let node = (() => {\n                                    let isWysiwygChild = i.closest(`#${this.elementId}`) && i.id !== this.elementId;\n                                    let isWysiwygEldestChild = (() => {\n                                        if (!isWysiwygChild)\n                                            return false;\n\n                                        return this._isCeilingElement(mutationTarget);\n                                    })();\n\n                                    let ceiling = (() => {\n                                        for (let c of this.ceilingElement_queryArray) {\n                                            let clo = i.closest(c);\n                                            if (clo)\n                                                return clo;\n                                        }\n                                        return null;\n                                    })();\n\n                                    let line = isWysiwygEldestChild ? i : isWysiwygChild && (() => {\n                                        let m = i;\n                                        while (m && !this._isCeilingElement(m.parentNode)) {\n                                            m = m.parentNode;\n                                        }\n                                        return m;\n                                    })();\n\n                                    return {\n                                        isWysiwygChild,\n                                        isWysiwygEldestChild,\n                                        isMediaElement: i.closest('._media_'),\n                                        isBlockQuoteElement: i.closest('blockquote'),\n                                        isCustomElement: i.closest('._custom_'),\n                                        isHashtagElement: i.closest('._hashtag_'),\n                                        isUrlLinkElement: i.closest('._urllink_'),\n                                        ceiling,\n                                        line\n                                    };\n                                })();\n\n                                if (!node.isWysiwygChild)\n                                    continue; // bypass\n\n                                if (\n                                    node.isCustomElement ||\n                                    node.isMediaElement ||\n                                    node.isHashtagElement ||\n                                    node.isUrlLinkElement\n                                ) {\n                                    // make sure un-editable element is secure\n                                    (node.isCustomElement ||\n                                        node.isMediaElement ||\n                                        node.isHashtagElement ||\n                                        node.isUrlLinkElement).setAttribute('contenteditable', 'false');\n                                    continue;\n                                }\n\n                                if (!(node.isWysiwygEldestChild && (this._isBlockElement(i) || this._isTextBlockElement(i))) &&\n                                    i.nodeName !== 'BR' &&\n                                    !i.classList.length) {\n                                    // unwrap anything that does not have class and is not block level text\n                                    this._wrapNode(i);\n                                    continue;\n                                }\n\n                                if ((() => {\n                                    if (this._isStyleAllowedElement(i))\n                                        return false;\n\n                                    for (let sa of this.restrictedElement_queryArray) {\n                                        if (i.closest(sa))\n                                            return false;\n                                    }\n\n                                    return true;\n                                })())\n                                    //  remove style attribute if not allowed\n                                    i.removeAttribute('style');\n\n                                if (node.isWysiwygEldestChild && !(this._isBlockElement(i) || this._isTextBlockElement(i))) {\n                                    //  wrap eldest non text block element to p\n                                    if (i.nodeName === 'BR')\n                                        i.remove();\n                                    else\n                                        this._wrapNode(i, document.createElement('p'), true);\n                                    continue;\n                                }\n\n                                if (mutationTarget.textContent && mutationTarget.textContent !== '\\u200B') {\n                                    // prevent br added to line\n                                    let br = getBr(mutationTarget);\n                                    let doContinue = false;\n                                    if (br.length)\n                                        for (let b of br) {\n                                            if (b === i)\n                                                doContinue = true;\n                                            b.remove();\n                                        }\n                                    if (doContinue)\n                                        continue;\n                                }\n\n                                if (node.isWysiwygEldestChild && !this._isCeilingElement(i)) {\n                                    // add tab on new line created by pressing enter\n                                    if (this.insertTabPending_tabString) {\n                                        let tab = document.createTextNode(this.insertTabPending_tabString);\n                                        node.line.insertBefore(tab, node.line.childNodes[0]);\n                                        this.insertTabPending_tabString = '';\n                                        this._adjustSelection({ node: tab, position: false });\n                                    }\n\n                                    // if empty text block is added add br\n                                    if (!node.line.textContent || node.line.textContent === '\\u200B') {\n                                        let addBr = true;\n                                        this._nodeCrawler(n => {\n                                            if (n.nodeName === 'BR') {\n                                                addBr = false;\n                                                return 'BREAK';\n                                            }\n                                            return n;\n                                        }, { node: node.line });\n\n                                        if (addBr)\n                                            node.line.append(document.createElement('br'));\n                                    }\n\n                                    continue;\n                                }\n\n                                let classSet = (c) => {\n                                    let counter = this.counterTagOf[c] || [];\n\n                                    if (counter.length)\n                                        counter = counter.concat(counter.map(m => {\n                                            return m + '_stop';\n                                        }));\n\n                                    return [\n                                        c,\n                                        c.includes('_stop') ? c.replace('_stop', '') : c + '_stop'\n                                    ].concat(counter);\n                                };\n\n                                let toUnwrap = [];\n\n                                if (i.classList.length) {\n\n                                    this._climbUpToEldestParent(i, node.ceiling, true, n => {\n\n                                        let cIdx = i.classList.length;\n                                        while (cIdx--) {\n                                            if (\n                                                (() => {\n                                                    let set = classSet(i.classList[cIdx]);\n                                                    for (let s of set) {\n                                                        if (n.classList.contains(s))\n                                                            return true;\n                                                    }\n                                                    return false;\n                                                })()\n                                            )\n                                                toUnwrap.push(n);\n                                        }\n\n                                        return n;\n                                    });\n\n                                }\n\n                                let idx = toUnwrap.length;\n\n                                while (idx--) {\n                                    // unwrap unnecessary counter parents\n                                    this._wrapNode(toUnwrap[idx]);\n                                }\n\n                                let class_idx = i.classList.length;\n                                while (class_idx--) {\n                                    let className = i.classList[class_idx];\n                                    let curSt = this._trackStyle(i, className.replace('_stop', ''));\n                                    let parSt = this._trackStyle(i.parentNode, className.replace('_stop', ''));\n\n                                    if (curSt === parSt)\n                                        // remove style class if parent shares the same style\n                                        i.classList.remove(className);\n                                }\n\n                                if (!i.classList.length) {\n                                    // remove style attribute if there is no class\n                                    i.removeAttribute('class');\n                                }\n\n                                if (this._isTextBlockElement(mutationTarget) && mutationTarget.childNodes.length === 1\n                                    && this._isUnSelectableElement(mutationTarget.childNodes[0]))\n                                    mutationTarget.append(document.createTextNode(''));\n                            }\n                        }\n                }\n            }\n        });\n        this.observer.observe(this.element, {\n            attributes: true,\n            childList: true,\n            subtree: true\n        });\n\n    }\n\n    _setArrow(e) {\n        if (!this.range || !e?.key)\n            return;\n\n        let\n            endContainer,\n            endOffset,\n            startContainer,\n            startOffset,\n            collapsed,\n            startLine,\n            endLine,\n            isAllRangeOnSameLine,\n            currentLine,\n            caratElement,\n            arrowDirection;\n\n        let key = e.key.toUpperCase();\n        let shift = e?.shiftKey || false;\n        let metaKey = e?.ctrlKey || e?.metaKey || false;\n        let rangeSetup = () => {\n            endContainer = this.range.endContainer;\n            endOffset = this.range.endOffset;\n            startContainer = this.range.startContainer;\n            startOffset = this.range.startOffset;\n            collapsed = this.range.collapsed;\n            startLine = this.range.startLine;\n            endLine = this.range.endLine;\n            isAllRangeOnSameLine = startLine === endLine;\n            currentLine = this.isRangeDirectionForward ? endLine : startLine;\n            caratElement = this.isRangeDirectionForward ? endContainer : startContainer;\n            caratElement = caratElement.nodeType === 3 ? caratElement.parentNode : caratElement;\n        };\n\n\n        let preventDefault = () => {\n            try {\n                e.preventDefault();\n            } catch (err) {\n            }\n        };\n\n        let removeZeroSpace = () => {\n            let targetContainer = this.isRangeDirectionForward ? endContainer : startContainer;\n            let nudged = false;\n\n            if (collapsed && (targetContainer.textContent.includes('\\u200B') || !targetContainer.textContent)) {\n\n                this._nodeCrawler(n => {\n                    if (n.nodeType === 3 && (n.textContent === '\\u200B' || !n.textContent)) {\n\n                        let r = n.nextSibling || n.parentNode;\n                        let siblingDirection = this.isRangeDirectionForward ? 'nextSibling' : 'previousSibling';\n\n                        if (n === targetContainer || (() => {\n                            // fuck safari\n                            if (targetContainer.nodeType === 1) {\n                                let idx = targetContainer.childNodes.length;\n                                while (idx--) {\n                                    if (targetContainer.childNodes[idx] === n)\n                                        return true;\n                                }\n                                return false;\n                            }\n                        })()) {\n\n                            let run = r;\n                            if (run.nodeType === 1 && n.parentNode === run) {\n                                if (run[siblingDirection])\n                                    nudged = run[siblingDirection];\n                            } else\n                                nudged = r;\n\n                            n.remove();\n\n                            this.range = this._adjustSelection({\n                                node: !collapsed ? this.isRangeDirectionForward ? [null, nudged || r] : [nudged || r, null] : nudged,\n                                position: !collapsed ? this.isRangeDirectionForward ? [null, nudged] : [!nudged, null] : this.isRangeDirectionForward,\n                            });\n\n                            rangeSetup();\n                            preventDefault();\n                            return 'BREAK';\n                        }\n                    }\n                    return n;\n                }, { node: targetContainer });\n\n            }\n            return !!nudged;\n        };\n\n        let isCaratOnMultiLine = (el) => {\n            // check if carat is on the first / last line of multi wrapped line\n\n            let posTarget = arrowDirection === 'DOWN' ? 'bottom' : 'top';\n            let caratViewPortPosition = this.range.getBoundingClientRect();\n            let elPosition = el.getBoundingClientRect()[posTarget];\n            let phoneTextSize = parseInt(this.fontSizeCssVariable['--wysiwyg-font-phone']);\n\n            if (caratViewPortPosition.height) {\n                let isLastLine = ((posTarget === 'bottom' ? elPosition - caratViewPortPosition[posTarget] : caratViewPortPosition[posTarget] - elPosition) < phoneTextSize);\n                return !isLastLine;\n            }\n\n            return false;\n        };\n\n        let nudgeRangeToInlineElement = () => {\n\n            let rem = removeZeroSpace();\n\n            if (!rem && window.getComputedStyle(caratElement).display === 'inline-block') {\n\n                let _caratElement = caratElement.nodeType === 3 ? caratElement.parentNode : caratElement;\n                while (window.getComputedStyle(_caratElement).display === 'inline-block') {\n                    _caratElement = _caratElement.parentNode;\n                }\n\n                let siblingDirection = arrowDirection === 'UP' ? 'previousSibling' : 'nextSibling';\n                let nextEl = _caratElement[siblingDirection];\n\n                if (!nextEl) {\n                    let t = document.createTextNode('');\n                    _caratElement.parentNode.insertBefore(t, siblingDirection === 'previousSibling' ? _caratElement : nextEl);\n                }\n\n                _caratElement = _caratElement[siblingDirection];\n\n                if (_caratElement) {\n                    let setDirection = (() => {\n                        return arrowDirection === 'DOWN';\n                    })();\n\n                    this.range = this._adjustSelection({\n                        node: shift ? (this.isRangeDirectionForward ? [null, _caratElement] : [_caratElement, null]) : _caratElement,\n                        position: shift ? (this.isRangeDirectionForward ? [null, setDirection] : [setDirection, null]) : setDirection\n                    });\n\n                    rangeSetup();\n\n                    return true;\n                }\n            }\n            return false;\n        };\n\n        rangeSetup();\n\n        switch (key) {\n            case 'ARROWLEFT':\n                arrowDirection = 'LEFT';\n            case 'ARROWRIGHT':\n                arrowDirection = arrowDirection || 'RIGHT';\n\n                if (metaKey || collapsed && shift) {\n                    this.isRangeDirectionForward = arrowDirection === 'RIGHT';\n                    rangeSetup();\n                }\n\n                let caratOnSingleLine = !isCaratOnMultiLine(caratElement);\n\n                let nudged;\n                if (caratOnSingleLine) {\n\n                    if (metaKey && arrowDirection === 'RIGHT')\n                        nudged = nudgeRangeToInlineElement();\n                }\n\n                if (!nudged)\n                    removeZeroSpace();\n\n                break;\n\n            case 'ARROWUP':\n                arrowDirection = 'UP';\n            case 'ARROWDOWN':\n                arrowDirection = arrowDirection || 'DOWN';\n\n                if (!collapsed && !shift) {\n                    preventDefault();\n                    let adj = arrowDirection === 'UP' ? [startContainer, startOffset] : [endContainer, endOffset];\n                    this.range = this._adjustSelection({ node: adj[0], position: adj[1] });\n                    break;\n                }\n\n                if (collapsed || isAllRangeOnSameLine) {\n                    this.isRangeDirectionForward = arrowDirection === 'DOWN';\n                    rangeSetup();\n                }\n\n                if (isCaratOnMultiLine(caratElement))\n                    break;\n\n                let iNudged = nudgeRangeToInlineElement();\n\n                if (iNudged)\n                    break;\n                else\n                    removeZeroSpace();\n\n                let isMultiLine = isCaratOnMultiLine(currentLine);\n                if (isMultiLine)\n                    break;\n\n\n                let eldestParentOfCurrentLine = this._climbUpToEldestParent(currentLine, this.element);\n\n                let isCurrentLineInsideSubCeiling =\n                    eldestParentOfCurrentLine.id !== this.elementId && this._isCeilingElement(eldestParentOfCurrentLine);\n\n                // break out if current line is inside the sub ceiling and it's not on the last line\n                if (\n                    isCurrentLineInsideSubCeiling &&\n                    (\n                        arrowDirection === 'UP' && eldestParentOfCurrentLine.firstChild !== currentLine ||\n                        arrowDirection === 'DOWN' && eldestParentOfCurrentLine.lastChild !== currentLine\n                    )\n                )\n                    break;\n\n\n                let siblingSet = [\n                    isCurrentLineInsideSubCeiling ? eldestParentOfCurrentLine.previousSibling : currentLine.previousSibling,\n                    isCurrentLineInsideSubCeiling ? eldestParentOfCurrentLine.nextSibling : currentLine.nextSibling\n                ];\n\n                if (arrowDirection === 'UP')\n                    siblingSet.reverse();\n\n                let [backwardNode, forwardNode] = siblingSet;\n\n                // if current line is on last line of sub ceiling set forward node to sub ceiling\n                let _forwardNode = isCurrentLineInsideSubCeiling ? eldestParentOfCurrentLine : forwardNode;\n                if (_forwardNode) {\n                    if (this._isBlockElement(_forwardNode) && !shift) {\n                        preventDefault();\n\n                        let leap = arrowDirection === 'UP' ? _forwardNode.previousSibling : _forwardNode.nextSibling;\n\n                        if (!leap || this._isBlockElement(leap)) {\n                            let p = this._createEmptyParagraph();\n                            _forwardNode.parentNode.insertBefore(p, arrowDirection === 'UP' ? _forwardNode : leap);\n                            _forwardNode = p;\n                        } else\n                            _forwardNode = leap;\n\n                        this.range = this._adjustSelection({\n                            node: _forwardNode,\n                            position: arrowDirection === 'DOWN',\n                        });\n\n                        if (\n                            !shift && !currentLine.textContent &&\n                            (this._isBlockElement(backwardNode) || !backwardNode && currentLine === this.element.firstChild)\n                        )\n                            this.removeSandwichedLine_array.push(currentLine);\n                    } else if (!isMultiLine && arrowDirection === 'DOWN') {\n                        preventDefault();\n                        let collectOffset = 0;\n                        let currentOffset = this.isRangeDirectionForward ? endOffset : startOffset;\n                        this._nodeCrawler(n => {\n                            if (n === endContainer)\n                                return 'BREAK';\n                            else if (n.nodeType === 3 && n.textContent)\n                                collectOffset += n.textContent.length;\n                            return n;\n                        }, {\n                            node: currentLine\n                        });\n                        collectOffset += currentOffset;\n                        this.range = this._adjustSelection({\n                            node: collapsed ? forwardNode : this.isRangeDirectionForward ? [null, forwardNode] : [forwardNode, null],\n                            position: collapsed ? collectOffset : this.isRangeDirectionForward ? [null, collectOffset] : [collectOffset, null]\n                        });\n                    }\n                } else\n                    preventDefault();\n        }\n    }\n\n    _append(i, insertAfter, wrap = false, focusElement) {\n        let common = this._climbUpToEldestParent(this.range.commonAncestorContainer, this.element);\n        let startLine = this._climbUpToEldestParent(this.range.startContainer, this.element);\n        let endLine = this._climbUpToEldestParent(this.range.endContainer, this.element);\n        let insertRestricted = ['HR', 'UL', 'LI', '._media_', '._custom_'];\n\n        let append = (node) => {\n            if (node === this.element)\n                node = this.element.childNodes[this.element.childNodes.length - 1];\n\n            let next = node.nextSibling;\n            if (insertAfter)\n                node.parentNode.insertBefore(insertAfter, next);\n\n            node.parentNode.insertBefore(i, insertAfter || next);\n            if (this._isTextElement(node) && !node.textContent && this.element.lastChild !== node)\n                node.remove();\n        };\n\n        if (wrap) {\n            let nodeToUnwrap = {};\n            let restricted = false;\n\n            let checker = (tag, el) => {\n                if (el && (!nodeToUnwrap[tag] || (() => {\n                    for (let u in nodeToUnwrap) {\n                        if (nodeToUnwrap[u] === el)\n                            return false;\n                    }\n                    return true;\n                })()))\n                    nodeToUnwrap[tag] = el;\n            };\n\n            if (this.range.collapsed) {\n                checker(i.nodeName, startLine.closest(i.nodeName));\n\n                let idx = i.classList.length;\n                while (idx--) {\n                    let className = i.classList[idx];\n                    checker(className, startLine.closest('.' + className));\n                }\n            } else\n                this._nodeCrawler(n => {\n                    let chk = n.nodeType === 3 ? n.parentNode : n;\n                    if (chk.nodeType !== 1) {\n                        restricted = true;\n                        return 'BREAK';\n                    }\n\n                    if (n.nodeType === 1) {\n                        for (let notAllowed of insertRestricted)\n                            if (n.nodeName === notAllowed || n.closest(notAllowed)) {\n                                restricted = true;\n                                return 'BREAK';\n                            }\n                    }\n\n                    checker(i.nodeName, chk.closest(i.nodeName));\n\n                    let idx = i.classList.length;\n                    while (idx--) {\n                        let className = i.classList[idx];\n                        checker(className, chk.closest('.' + className));\n                    }\n\n                    if (n === this.range.endContainer)\n                        return 'BREAK';\n\n                    return n;\n                }, { node: common, startNode: this.range.startContainer });\n\n            if (restricted)\n                return;\n\n            if (Object.keys(nodeToUnwrap).length) {\n                for (let u in nodeToUnwrap)\n                    this._wrapNode(nodeToUnwrap[u]);\n\n            } else {\n\n                append(endLine);\n\n                let extract = this.range.extractContents();\n\n                if (extract.childNodes[0]) {\n                    while (extract.childNodes[0]) {\n                        let t = extract.childNodes[0];\n                        if (!t.textContent)\n                            t.remove();\n                        else\n                            i.append(t);\n                    }\n                } else i.append(this._createEmptyParagraph());\n\n                this.range = this._adjustSelection({\n                    node: focusElement || i,\n                    position: false\n                });\n\n                //  remove garbage node\n                let fc = i.previousSibling;\n                // let lc = i.nextSibling;\n\n                if (fc) {\n                    fc = fc.nodeType === 3 ? fc.parentNode : fc;\n\n                    if (this._isTextElement(fc) && (!fc.textContent || fc.textContent === '\\u200B'))\n                        fc.remove();\n                }\n            }\n\n            return;\n        }\n\n        for (let r of insertRestricted) {\n            if (endLine.closest(r))\n                endLine = endLine.closest(r);\n        }\n\n        append(endLine);\n\n        if (insertAfter)\n            this.range = this._adjustSelection({ node: focusElement || insertAfter });\n\n    }\n\n    _callback(data) {\n        return new Promise(res => {\n            if (typeof this.callback === 'function') {\n                let cb = this.callback(data) || data;\n                if (cb instanceof Promise)\n                    cb.then(r => {\n                        res(r);\n                    });\n\n                res(cb || data);\n            }\n            res(data);\n        });\n    }\n\n    async _imageSelected(e) {\n        let files = e.target.files;\n\n        const prepareForCallback = { image: [] };\n        let readFile = new FileReader();\n\n        const load = (file) => {\n            return new Promise(res => {\n                readFile.onload = f => {\n                    const { lastModified, name, size, type } = file;\n                    const source = f.target.result;\n\n                    let img = new Image;\n                    img.onload = () => {\n                        res({\n                            dimension: {\n                                width: img.width,\n                                height: img.height\n                            },\n                            lastModified,\n                            filename: name,\n                            fileSize: size,\n                            fileType: type,\n                            source,\n                            elementId: this._generateId('img')\n                        });\n                    };\n                    img.src = source;\n                };\n                readFile.readAsDataURL(file);\n            });\n        };\n\n        this.callback({ loading: true });\n        for (let idx = 0; files.length > idx; idx++) {\n            prepareForCallback.image[idx] = await load(files[idx]);\n        }\n        this.callback({ loading: false });\n\n        //  reset image input\n        this.imgInput.value = '';\n\n        let feedback = await this._callback(prepareForCallback);\n\n        if (!this.range) {\n            this.restoreLastSelection();\n        }\n        if (!this.range || (() => {\n            let c = this.range.commonAncestorContainer;\n            c = c.nodeType === 3 ? c.parentNode : c;\n            return !c.closest('#' + this.elementId);\n        })())\n            this.element.focus();\n\n        this._modifySelection(() => {\n            for (let img of feedback.image) {\n                let media = this._loadImage(img, document.createElement('div'));\n                this._append(media, this._createEmptyParagraph());\n            }\n        });\n\n    }\n\n    _loadImage(imageObject, wrapper) {\n        /**\n         elementId: \"img_uniqueId\"\n         element: HTML\n         fileSize: 0\n         fileType: \"image/jpeg\"\n         source: \"file.jpg | http://url.com/file.jpg | s3 filename | base 64 string\"\n         lastModified: 0000000000000\n         filename: \"selectedLocalFilename.jpg\"\n         */\n\n        if (wrapper instanceof Node) {\n            if (!wrapper.classList.contains('_media_'))\n                wrapper.classList.add('_media_');\n\n            if (wrapper.getAttribute('contenteditable') !== 'false')\n                wrapper.setAttribute('contenteditable', 'false');\n\n        } else\n            throw 'image needs _media_ wrapper';\n\n        let process = (i) => {\n\n            let image = i?.element instanceof Node ? i.element : null;\n\n            if (image) {\n                if (image.id)\n                    i.elementId = image.id;\n                else\n                    image.id = i.elementId;\n            }\n\n            if (!image) {\n                image = document.createElement('img');\n                i.element = image;\n\n                let classname = '_img_' + i.source.substring(i.source.length - 128).replace(/[/:.\"'\\\\@#$%\\?= \\{\\}\\|&*`!<>+]/g, '');\n                if (image.classList.contains(classname))\n                    image.classList.add(classname);\n\n                if (Array.isArray(i.class)) {\n                    for (let cl of i.class)\n                        image.classList.add(cl);\n                }\n\n                if (image.tagName === 'IMG')\n                    image.setAttribute('src', i.source);\n\n                if (typeof i.onclick === 'function') {\n                    image.addEventListener('click', i.onclick);\n                    image.classList.add('_hover_');\n                }\n\n                if (i.style && typeof i.style === 'object' && Object.keys(i.style).length) {\n                    for (let st in i.style) {\n                        wrapper.style.setProperty(st, i.style[st]);\n                    }\n                }\n            }\n\n            wrapper.setAttribute('contenteditable', 'false');\n            wrapper.append(image);\n\n            let pushArray = true;\n\n            for (let chk of this.image_array)\n                if (chk.elementId === i.elementId) {\n                    pushArray = false;\n                    break;\n                }\n\n            if (pushArray)\n                this.image_array.push(i);\n        };\n\n        process(imageObject);\n\n        return wrapper;\n    }\n\n    _modifySelection(run) {\n        let sel = window.getSelection();\n        if (sel) {\n            let anchorElement = sel.anchorNode?.nodeType === 3 ? sel.anchorNode.parentNode : sel.anchorNode;\n            if (anchorElement && anchorElement.closest(`#${this.elementId}`)) {\n                if (anchorElement.id === this.elementId) {\n                    // if (this._isCeilingElement(anchorElement)) {\n                    // In case selection is the wysiwyg element itself\n                    let lastChild = this.element.lastChild;\n                    if (!lastChild) {\n                        // Wysiwyg is empty\n                        lastChild = this._createEmptyParagraph();\n                        this.element.appendChild(lastChild);\n\n                        // Adjust selection\n                        this.range = this._adjustSelection({ node: lastChild, position: true });\n                    }\n\n                } else\n                    this.range = this._adjustSelection(null);\n\n                if (typeof run === 'function') run();\n                return;\n            }\n        }\n\n        this.range = null;\n        this.commandTracker = {};\n    }\n\n    _normalizeDocument(normalize) {\n        if (!normalize) return;\n\n        this._nodeCrawler(n => {\n            if (n.nodeType === 3 && (n.textContent.includes('\\u200B'))) { //!n.textContent ||\n                n.textContent = n.textContent.replace('\\u200B', '');\n\n                if (!n.textContent) {\n                    let cel;\n                    for (let c of this.ceilingElement_queryArray)\n                        if (n.parentNode.closest(c)) {\n                            cel = n.parentNode.closest(c);\n                            break;\n                        }\n\n                    let el = this._climbUpToEldestParent(n, cel, true);\n\n                    let par = el.parentNode;\n                    if (!this._isCeilingElement(par) && !el.textContent && this.element.lastChild !== el) {\n                        par.removeChild(el);\n                        n = par;\n                    }\n                    return n;\n                }\n            } else if (n.nodeType === 1) n.normalize();\n\n            return n;\n        }, { node: this.element });\n    }\n\n    _replaceText(wholeDocument = false) {\n\n        const process = (typeName, setData) => {\n            if (!this[typeName])\n                return;\n\n            let regex = this[`${typeName}_regex`] || null;\n\n            if (regex === null)\n                throw new Error('no regex to process');\n\n            if (typeof setData !== 'function')\n                throw new Error('setData should be returning function');\n\n            let node = wholeDocument ? this.element : this.range?.commonAncestorContainer;\n\n            if (!node)\n                return;\n\n            if (node.nodeType === 3)\n                node = node.parentNode;\n\n            let res = (() => {\n                let className = `_${typeName}_`;\n                let element = [];\n                let collected = [];\n\n                let textNodes = [];\n                this._nodeCrawler(n => {\n                    if (n.nodeType === 3 && n.textContent) {\n                        if (\n                            n.nextSibling?.nodeType === 3 &&\n                            n.nextSibling.textContent &&\n                            n.nextSibling.textContent !== '\\u200B') {\n                            let par = n.parentNode;\n                            par.normalize();\n                            n = par;\n                        } else if (\n                            n.textContent !== '\\u200B' &&\n                            !n.parentNode.closest('.' + className)\n                        )\n                            textNodes.push(n);\n                    }\n\n                    return n;\n                }, { node });\n\n                textNodes.forEach((node) => {\n                    replaceTextNode(node, regex, function (matched) {\n                        if (matched.length > 1) {\n                            return {\n                                name: 'span',\n                                attrs: { 'class': `${className} ${className}${matched}` },\n                                content: matched\n                            };\n                        }\n                    });\n                });\n\n                function replaceTextNode(node, regex, handler) {\n                    let par = node.parentNode, nxt = node.nextSibling,\n                        doc = node.ownerDocument, hits;\n\n                    if (regex.global) {\n                        while (node && (hits = regex.exec(node.nodeValue))) {\n                            regex.lastIndex = 0;\n                            node = handleResult(node, hits, handler.apply(this, hits));\n                        }\n                    } else if ((hits = regex.exec(node.nodeValue)))\n                        handleResult(node, hits, handler.apply(this, hits));\n\n                    function handleResult(node, hits, results) {\n                        let orig = node.nodeValue;\n                        node.nodeValue = orig.slice(0, hits.index);\n                        [].concat(create(par, results)).forEach(function (n) {\n                            let res = par.insertBefore(n, nxt);\n                            element.push(res);\n                        });\n                        let rest = orig.slice(hits.index + hits[0].length);\n                        if (rest) {\n                            let text = doc.createTextNode(rest);\n                            return par.insertBefore(text, nxt);\n                        }\n                    }\n\n                    function create(el, o) {\n                        if (o.map) return o.map(function (v) {\n                            return create(el, v);\n                        });\n                        else if (typeof o === 'object') {\n                            let e = doc.createElementNS(o.namespaceURI || el.namespaceURI, o.name);\n                            if (o.attrs) for (let a in o.attrs) e.setAttribute(a, o.attrs[a]);\n                            if (o.content) [].concat(create(e, o.content)).forEach(e.appendChild, e);\n                            if (typeof o.content === 'string') collected.push(o.content);\n                            e.contentEditable = 'false';\n                            return e;\n                        } else return doc.createTextNode(o + '');\n                    }\n                }\n\n                let anchorText;\n                if (element.length) {\n                    for (let el of element) {\n                        anchorText = node.ownerDocument.createTextNode('');\n                        el.parentNode.insertBefore(anchorText, el.nextSibling);\n                    }\n                }\n                return { collected, element, anchorText };\n            })();\n\n            let textEl = res.element;\n\n            if (!wholeDocument) {\n                this.range = this._adjustSelection({\n                    node: res.anchorText,\n                    position: false\n                });\n            }\n\n            let toCallback = [];\n            let collectId = [];\n\n            if (textEl[0])\n                for (let el of textEl) {\n                    let elementId = this._generateId(typeName);\n                    el.setAttribute('id', elementId);\n                    let tc = setData(el) || {};\n                    tc.elementId = el.id;\n                    tc.element = el;\n\n                    el.removeAttribute('style');\n                    collectId.push(el.id);\n                    toCallback.push(tc);\n                }\n\n            if (toCallback.length) {\n                this._callback({ [typeName]: toCallback }).then(e => {\n                    for (let idx = 0; collectId.length > idx; idx++) {\n                        //  elementId is read only\n                        e[typeName][idx].elementId = collectId[idx];\n                    }\n\n                    if (Array.isArray(e[typeName]) && e[typeName].length)\n                        for (let h of e[typeName]) {\n                            let dom = document.getElementById(h.elementId);\n\n                            dom.setAttribute('id', h.elementId);\n                            dom.setAttribute('contenteditable', 'false');\n\n                            if (typeof h.onclick === 'function') {\n                                dom.addEventListener('click', h.onclick);\n                                dom.classList.add('_hover_');\n                            }\n\n                            if (h.style && typeof h.style === 'object' && Object.keys(h.style).length) {\n                                for (let s in h.style)\n                                    dom.style.setProperty(s, h.style[s]);\n                            }\n\n                            this[`${typeName}_array`].push(h);\n                        }\n                }).catch(err => {\n                    console.error(err);\n                });\n            }\n        };\n\n        if (this.urllink_flag) {\n            process('urllink', url => {\n\n                let u = url.textContent;\n                url.addEventListener('click', function () {\n                    if (!u.match(/^https?:\\/\\//i)) {\n                        u = 'http://' + u;\n                    }\n                    window.open(u, \"_blank\");\n                });\n\n                return { url: u };\n            });\n        }\n\n        if (this.hashtag_flag) {\n            process('hashtag', tag => {\n\n                let t = tag.textContent;\n                return { tag: t[0] === '#' ? t.substring(1) : t };\n\n            });\n        }\n\n        this.hashtag_flag = false;\n        this.urllink_flag = false;\n    }\n\n    _checkElement(node, chkArr, closest) {\n        if (node && node.nodeType === 1)\n            for (let c of chkArr) {\n                if (closest) {\n                    let clo = node.closest(c);\n                    if (node.closest(c))\n                        return clo;\n                } else if (\n                    c[0] === '#' ? node.id === c.substring(1) :\n                        c[0] === '.' ? node.classList.contains(c.substring(1)) :\n                            node.nodeName === c\n                )\n                    return true;\n            }\n        return false;\n    }\n\n    _isUnSelectableElement(node) {\n        node = node?.nodeType === 3 ? node.parentNode : node;\n        return this._checkElement(node, this.unSelectable_queryArray, true);\n    }\n\n    _isStyleAllowedElement(node) {\n        return this._checkElement(node, this.styleAllowedElement_queryArray);\n    }\n\n    _isCeilingElement(node) {\n        return this._checkElement(node, this.ceilingElement_queryArray);\n    }\n\n    _isBlockElement(node) {\n        return this._checkElement(node, this.blockElement_queryArray);\n    }\n\n    _isTextAreaElement(node) {\n        return this._checkElement(node, this.textAreaElement_queryArray);\n    }\n\n    _isTextBlockElement(node) {\n        node = node?.nodeType === 3 ? node.parentNode : node;\n        return this._checkElement(node, this.textBlockElement_queryArray);\n    }\n\n    _isSpecialTextElement(node) {\n        node = node?.nodeType === 3 ? node.parentNode : node;\n        return this._checkElement(node, this.specialTextElement_queryArray);\n    }\n\n    _isTextElement(node) {\n        node = node?.nodeType === 3 ? node.parentNode : node;\n        return (this._isTextBlockElement(node) || node.nodeName === 'SPAN') && !this._isSpecialTextElement(node);\n    }\n\n    /**\n     * List of command for editing wysiwyg text.\n     * @param {'quote'} action - Add blockquote below selected line.\n     * @also\n     * @param {'unorderedList'} action - Add unordered list below selected line.\n     * @also\n     * @param {'orderedList'} action - Add ordered list below selected line.\n     * @also\n     * @param {'divider'} action - Add HR below selected line.\n     * @also\n     * @param {'image'} action - Add image below selected line.\n     * @also\n     * @param {'alignLeft'} action - Align selected line to left.\n     * @also\n     * @param {'alignCenter'} action - Align selected line to center.\n     * @also\n     * @param {'alignRight'} action - Align selected line to right.\n     * @also\n     * @param {'color' | 'hex | rgb string | hsl string'} action - Apply color to selected text. If 'color' is given, the default focus color is applied to the text.\n     * @also\n     * @param {'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'small' | 'bold' | 'italic' | 'underline' | 'strike'} action - Apply style to selection.\n     * @also\n     * @param {object} action - Custom element object\n     * @param {object | string} action.element - Custom element can be node objects | html string | string\n     * @param {string} action.elementId - Set custom elements parent id. Otherwise auto generated\n     * @param {object} action.style - Set custom elements parent css style\n     * @param {boolean} action.insert - Set custom element insert mode. If true, inserts element at carat position, otherwise appends on next line\n     */\n    command(action) {\n\n        if (!action)\n            return;\n\n        if (!this.range)\n            this.restoreLastSelection();\n\n        switch (action) {\n            case 'quote':\n                if (!this.range || (() => {\n                    let c = this.range.commonAncestorContainer;\n                    c = c.nodeType === 3 ? c.parentNode : c;\n                    return !c.closest('#' + this.elementId);\n                })())\n                    this.element.focus();\n\n                this._modifySelection(() => {\n                    let p = this._createEmptyParagraph(),\n                        bq = document.createElement('blockquote');\n                    this._append(bq, p, true);\n                });\n                return;\n            case 'unorderedList':\n                if (!this.range || (() => {\n                    let c = this.range.commonAncestorContainer;\n                    c = c.nodeType === 3 ? c.parentNode : c;\n                    return !c.closest('#' + this.elementId);\n                })())\n                    this.element.focus();\n\n                this._modifySelection(() => {\n                    let p = this._createEmptyParagraph(),\n                        li = document.createElement('li'),\n                        ul = document.createElement('ul');\n                    ul.append(li);\n                    this._append(ul, p, false, li);\n                });\n\n                return;\n            case 'orderedList':\n                if (!this.range || (() => {\n                    let c = this.range.commonAncestorContainer;\n                    c = c.nodeType === 3 ? c.parentNode : c;\n                    return !c.closest('#' + this.elementId);\n                })())\n                    this.element.focus();\n\n                this._modifySelection(() => {\n                    let p = this._createEmptyParagraph(),\n                        li = document.createElement('li'),\n                        ul = document.createElement('ol');\n                    ul.append(li);\n                    this._append(ul, p, false, li);\n                });\n\n                return;\n            case 'divider':\n                if (!this.range || (() => {\n                    let c = this.range.commonAncestorContainer;\n                    c = c.nodeType === 3 ? c.parentNode : c;\n                    return !c.closest('#' + this.elementId);\n                })())\n                    this.element.focus();\n\n                this._modifySelection(() => {\n                    let p = this._createEmptyParagraph(), hr = document.createElement('hr');\n                    hr.setAttribute('contenteditable', 'false');\n                    this._append(hr, p, false);\n                });\n                return;\n            case 'image':\n                this.imgInput.click();\n                return;\n            case 'alignLeft':\n            case 'alignCenter':\n            case 'alignRight':\n                if (!this.range)\n                    return;\n\n                this._modifySelection(() => {\n                    let startLine = this.range.startLine;\n                    let endLine = this.range.endLine;\n\n                    let collectLines = [];\n                    collectLines.push(startLine);\n\n                    while (collectLines[collectLines.length - 1] !== endLine) {\n                        let nextLine = collectLines[collectLines.length - 1].nextSibling;\n\n                        while (nextLine && !this._isTextBlockElement(nextLine)) {\n                            if (this._isCeilingElement(nextLine) && nextLine.firstChild && this._isTextBlockElement(nextLine.firstChild)) {\n                                nextLine = nextLine.firstChild;\n                                break;\n                            }\n                            nextLine = nextLine.nextSibling;\n                        }\n\n                        if (!nextLine && this._isCeilingElement(collectLines[collectLines.length - 1].parentNode))\n                            nextLine = collectLines[collectLines.length - 1].parentNode.nextSibling;\n\n                        if (nextLine)\n                            collectLines.push(nextLine);\n                        else\n                            break;\n                    }\n\n                    let commandTracker = Object.assign({}, this.commandTracker);\n\n                    for (let l of collectLines) {\n                        for (let c of this.alignClass) {\n                            if (l.classList.contains(c))\n                                l.classList.remove(c);\n                            commandTracker[c.substring(1, c.length - 1)] = false;\n                        }\n\n                        if (action !== 'alignLeft' && !this.commandTracker[action]) {\n                            for (let c of this.alignClass) {\n                                if (c.includes(action))\n                                    l.classList.add(c);\n                            }\n                            commandTracker[action] = true;\n                        }\n                    }\n\n                    this.commandTracker = commandTracker;\n\n                    this._callback({\n                        commandTracker,\n                        range: this.range\n                    }).catch(err => err);\n\n                });\n                return;\n\n            default:\n                break;\n        }\n\n        let isColor;\n        try {\n            isColor = new ColorMangle(action).hex();\n            action = 'color';\n        } catch {\n        }\n\n        //  style command\n        if (this.styleTagOfCommand[action]) {\n            this._modifySelection(() => {\n                let wrapper,\n                    query = this.styleTagOfCommand[action],\n                    stopperMode = false;\n\n                let counter = (this.counterTagOf[query] ? this.counterTagOf[query].map(c => this._classNameToQuery(c)) : []);\n                if (counter.length)\n                    counter = counter.concat(counter.map(c => c + '_stop'));\n\n                //  setup query\n                query = this._classNameToQuery(query);\n\n                if (this.commandTracker[action]) {\n                    let pass;\n\n                    if (action === 'color') {\n                        pass = isColor === this.commandTracker[action] ||\n                            isColor === undefined && this.commandTracker[action] === this.cssVariable['--content-focus'];\n                    } else\n                        pass = true;\n\n                    if (pass) {\n                        query = this._classNameToQuery(query + '_stop');\n                        stopperMode = true;\n                    }\n                }\n\n                //  setup wrapper element\n                if (query[0] === '.') {\n                    wrapper = document.createElement('SPAN');\n                    wrapper.classList.add(query.substring(1));\n                } else\n                    wrapper = document.createElement(query);\n\n                if (isColor && !stopperMode)\n                    wrapper.style.color = isColor;\n\n                let restrictedClass = this._isSelectionWithinRestrictedRange();\n                if (this.range.collapsed) {\n                    if (restrictedClass)\n                        return;\n\n                    let text = document.createTextNode(\"\");\n                    // let text = document.createTextNode(\"\\u200B\");\n                    wrapper.append(text);\n\n                    if (this.range.startContainer.nodeName === 'BR')\n                        this.range.startContainer.parentNode.insertBefore(wrapper, this.range.startContainer);\n                    else\n                        this.range.insertNode(wrapper);\n\n                    this.range = this._adjustSelection({ node: text, position: false });\n\n                } else {\n                    if (restrictedClass) {\n                        this.range = this._adjustSelection({\n                            node: this.range.endContainer,\n                            position: this.range.endOffset\n                        });\n                        return;\n                    }\n                    //  selection has range\n                    let extract = this.range.extractContents();\n                    let span = document.createElement('span');\n\n                    while (extract.childNodes[0])\n                        span.append(extract.childNodes[0]);\n\n                    this._nodeCrawler(n => {\n                        let res = restrictedClass ? this._classNameToQuery(restrictedClass) : null;\n                        let par = n.nodeType === 3 ? n.parentNode : n;\n                        let restricted = res && par.hasOwnProperty('closest') ? par.closest(res) : false;\n\n                        if (n.nodeType === 3 && !restricted)\n                            n.textContent = n.textContent.replaceAll('\\t', '');\n\n                        return n;\n                    }, { node: span, startFromEldestChild: true, parentNode: this.element });\n\n                    while (span.childNodes[0])\n                        extract.append(span.childNodes[0]);\n\n                    //  unwrap duplicates and stopper | counter\n                    let unwrapTarget = [query];\n\n                    //  add countering | opposite tag to unwrap\n                    if (stopperMode) {\n                        let rev = query.replace('_stop', '').substring(1);\n                        rev = rev[0] === '_' ? '.' + rev : rev;\n                        unwrapTarget.push(rev);\n                    } else {\n                        let rev = query + '_stop';\n                        rev = rev[0] === '.' ? rev : '.' + rev;\n                        unwrapTarget.push(rev);\n                    }\n\n                    unwrapTarget = unwrapTarget.concat(counter);\n                    let del = extract.querySelectorAll(unwrapTarget.join());\n                    let idx = del.length;\n                    if (idx)\n                        while (idx--)\n                            this._wrapNode(del[idx]);\n\n                    //  split wrapper\n                    let wrapperSplit = [wrapper.cloneNode(true)];\n\n                    while (extract.childNodes[0]) {\n                        let child = extract.childNodes[0];\n\n                        if (child.nodeType === 1 && this._isBlockElement(child)) {\n                            let nest = this._isTextAreaElement(child);\n\n                            if (nest) {\n                                for (let idx = 0; child.childNodes.length > idx; idx++) {\n                                    let text = child.childNodes[idx];\n\n                                    if (this._isTextElement(text)) {\n                                        let nestedWrapper = wrapper.cloneNode(true);\n                                        while (text.childNodes[0]) {\n                                            if (text.childNodes[0].textContent)\n                                                nestedWrapper.append(text.childNodes[0]);\n                                            else\n                                                text.childNodes[0].remove();\n                                        }\n                                        text.append(nestedWrapper);\n                                    }\n                                }\n\n                                if (!child.textContent) {\n                                    child.remove();\n                                    continue;\n                                }\n                            }\n\n                            let doc = document.createDocumentFragment();\n                            doc.append(child);\n                            wrapperSplit.push(doc);\n\n                        } else {\n\n                            if (child.nodeType === 1 && this._isTextBlockElement(child)) {\n                                let nestedWrapper = wrapper.cloneNode(true);\n\n                                while (child.childNodes[0])\n                                    nestedWrapper.append(child.childNodes[0]);\n\n                                if (\n                                    nestedWrapper.childNodes.length === 1 &&\n                                    nestedWrapper.childNodes[0].nodeName !== 'BR' &&\n                                    !nestedWrapper.textContent.length) {\n                                    child.remove();\n                                    continue;\n                                }\n\n                                child.append(nestedWrapper);\n                                let doc = document.createDocumentFragment();\n                                doc.append(child);\n                                wrapperSplit.push(doc);\n\n                            } else\n                                wrapperSplit[wrapperSplit.length - 1].append(child);\n                        }\n                    }\n\n                    let output = document.createDocumentFragment();\n                    for (let ws of wrapperSplit)\n                        output.append(ws);\n\n                    let fc = output.firstChild;\n                    let lc = output.lastChild;\n\n                    if (this._isTextElement(fc) && !fc.textContent) {\n                        let fn = fc.nextSibling;\n                        fc.remove();\n                        fc = fn;\n                    }\n                    if (this._isTextElement(lc) && !fc.textContent) {\n                        let lp = lc.nextSibling;\n                        lc.remove();\n                        lc = lp;\n                    }\n\n                    this.range.insertNode(output);\n                    this.range = this._adjustSelection({\n                        node: [fc, lc],\n                        position: [true, false]\n                    });\n\n                    //  remove garbage node\n                    fc = fc.nodeType === 3 ? fc.parentNode : fc;\n                    lc = lc.nodeType === 3 ? lc.parentNode : lc;\n\n                    let next = lc.nextSibling;\n                    if (this._isTextElement(next) && (!next.textContent || next.textContent === '\\u200B'))\n                        next.remove();\n\n                    let prev = fc.previousSibling;\n                    if (this._isTextElement(prev) && !prev.textContent || prev.textContent === '\\u200B')\n                        prev.remove();\n                }\n            });\n\n            return;\n        }\n\n        //  custom component\n        if (typeof action === 'object') {\n            /**\n             action = {\n                   elementId: <string: generated parent element id>,\n                   element: <HTMLElement>,\n                   style: {<css style object for parent element>},\n                   insert: true | false\n                }\n             */\n\n            this._modifySelection(() => {\n                //  setup wrapper\n                let custom = document.createElement('div');\n                custom.classList.add('_custom_');\n                custom.setAttribute('contenteditable', false);\n\n                if (action.style)\n                    for (let s in action.style)\n                        custom.style[s] = action.style[s];\n\n                action.elementId = action.elementId || this._generateId('custom');\n                custom.id = action.elementId;\n\n                if (typeof action.element === 'string')\n                    custom.innerHTML = action.element;\n\n                else if (action.element instanceof HTMLElement)\n                    custom.append(action.element);\n\n                if (!custom.children.length)\n                    action.insert = true;\n\n                if (!this.range)\n                    this.element.focus();\n\n                this.custom_array.push(action);\n\n                this._callback({ custom: action }).then(_ => {\n                    if (action.insert) {\n                        this.range.insertNode(custom);\n                        this.range = this._adjustSelection({\n                            node: custom,\n                            position: false\n                        });\n                    } else\n                        this._append(custom, this._createEmptyParagraph(), false);\n                });\n            });\n        }\n    }\n\n    /**\n     * Restores the last selection range\n     */\n    restoreLastSelection() {\n        if (this.range_backup) {\n            this.range = this._adjustSelection(\n                {\n                    node: [this.range_backup.startContainer, this.range_backup.endContainer],\n                    position: [this.range_backup.startOffset, this.range_backup.endOffset]\n                });\n            let sel = window.getSelection();\n            let range = document.createRange();\n            range.setStart(this.range.startContainer, this.range.startOffset);\n            range.setEnd(this.range.endContainer, this.range.endOffset);\n            sel.removeAllRanges();\n            sel.addRange(range);\n        }\n    }\n\n    /**\n     * Load html string to wysiwyg\n     * @param {string} html - HTML string to load.\n     * @param {boolean} [editable=false] - Set editable mode.\n     */\n    async loadHTML(html = this.html, editable = false) {\n        this.setEditable(false);\n        this.html = html || '';\n        const div = document.createElement('div');\n        div.innerHTML = html;\n\n        // image\n        const img = div.querySelectorAll('img');\n        const imgCallback = [];\n        if (img.length)\n            for (let i of img) {\n                const imageParent = i.closest('._media_');\n\n                if (imageParent) {\n                    const source = i.getAttribute('src');\n                    let imgId = i.id || this._generateId('img');\n                    i.setAttribute('id', imgId);\n\n                    imgCallback.push({\n                        source,\n                        elementId: imgId,\n                        element: i\n                    });\n                }\n\n                this.image_array = JSON.parse(JSON.stringify(imgCallback));\n            }\n\n        // hashtag\n        const hashtag = div.querySelectorAll('._hashtag_');\n        const hashtagCallback = [];\n        if (hashtag.length)\n            for (let i of hashtag) {\n                let clIdx = i.classList.length;\n                let tag, elementId = i.id || this._generateId('hashtag');\n                while (clIdx--) {\n                    let cls = i.classList[clIdx];\n                    if (cls.replace('_hashtag_', '')[0] === '#') {\n                        tag = cls.replace('_hashtag_', '');\n                    }\n                }\n                tag = tag?.[0] === '#' ? tag.substring(1) : tag;\n                if (tag)\n                    hashtagCallback.push({ tag, elementId, element: i });\n            }\n\n        // urllink\n        const urllink = div.querySelectorAll('._urllink_');\n        const urllinkCallback = [];\n        if (urllink.length)\n            for (let i of urllink) {\n                let elementId = i.id || this._generateId('urllink');\n                let url;\n\n                let clIdx = i.classList.length;\n                while (clIdx--) {\n                    let cls = i.classList[clIdx];\n                    if (cls.includes('_urllink_').length) {\n                        url = cls.replace('_urllink_', '');\n                    }\n                }\n                if (url)\n                    urllinkCallback.push({ url, elementId, element: i });\n            }\n\n        const custom = div.querySelectorAll('._custom_');\n        const customCallback = [];\n        if (custom.length)\n            for (let i of custom) {\n                let elementId = i.id || this._generateId('custom');\n                customCallback.push({ elementId, element: i });\n            }\n\n        let fb = await this._callback({\n            image: imgCallback,\n            hashtag: hashtagCallback,\n            urllink: urllinkCallback,\n            custom: customCallback\n        });\n\n        // callback\n        for (let f in fb) {\n            if (f === 'image') {\n                let img = fb[f];\n                for (let i of img) {\n                    let imgEl = div.querySelector('#' + i.elementId);\n                    const imageParent = imgEl.closest('._media_');\n                    this._loadImage(i, imageParent);\n                }\n            } else\n                this[f + '_array'] = fb[f];\n        }\n\n        this.element.innerHTML = '';\n\n        while (div.childNodes[0])\n            this.element.append(div.childNodes[0]);\n\n        if (editable)\n            this.setEditable(true);\n    }\n\n    /**\n     * Load html string to wysiwyg\n     * @param {function} [pre=(p)=>{return p}] - Pre processing callback before export.\n     * @return {object} - Exported wysiwyg data object\n     */\n    async export(pre) {\n        this._normalizeDocument(true);\n        const dom = this.element.cloneNode(true);\n\n        const { hashtag_array, image_array, urllink_array, custom_array } = this;\n        let title = '';\n        let text = '';\n\n        let setup = {\n            dom,\n            urllink: this.urllink ? urllink_array : undefined,\n            hashtag: this.hashtag ? hashtag_array : undefined,\n            image: image_array,\n            custom: custom_array\n        };\n\n        if (typeof pre === 'function') {\n            let promiseOrNot = pre(setup);\n\n            if (promiseOrNot instanceof Promise)\n                setup = await promiseOrNot || setup;\n            else setup = promiseOrNot || setup;\n\n            if (this.hashtag)\n                this.hashtag_array = setup.hashtag;\n            if (this.urllink)\n                this.urllink_array = setup.urllink;\n\n            this.image_array = setup.image;\n            this.custom_array = setup.custom;\n            title = setup.title || '';\n        }\n\n        const strip = setup.dom.querySelectorAll(':scope > *');\n\n        //  Loop through eldest child element in document\n        for (let sid = 0; sid < strip.length; sid++) {\n            let child = strip[sid];\n            if (child.textContent.length) {\n                //  set title and text information\n                let inputText = child.textContent;\n                if (!title) {\n                    let titleSearchRegex = /([^\\s^.]{2,}[^\\s]+[.][^\\s^.]{2,})/g;\n                    let urlArray = inputText.match(titleSearchRegex);\n\n                    // We are replacing the urls with a special text here.\n                    // Then we split the sentences by the dots.\n                    // Then we replace the url with the special text and identify the title and body text\n\n                    let split;\n                    if (urlArray) {\n                        for (let i = 0; i < urlArray.length; i++) {\n                            inputText = inputText.replace(urlArray[i].replace(/\\.+$/, \"\"), '[§url§]' + i + '[/§url§]');\n                        }\n\n                        split = inputText.split('.');\n\n                        for (let i = 0; i < split.length; i++) {\n                            for (let j = 0; j < urlArray.length; j++) {\n                                split[i] = split[i].replace('[§url§]' + j + '[/§url§]', urlArray[j].replace(/\\.+$/, \"\"));\n                            }\n                        }\n\n                    } else\n                        split = inputText.split('.');\n\n                    title = split[0];\n                    if (title.length > 200) {\n                        text += title.substring(200) + '.';\n                        title = title.substring(0, 200);\n                    }\n\n                    split.shift();\n                    inputText = split.join('.').replace(/\\s\\s+/g, ' ');\n                    text += inputText + ' ';\n                } else\n                    text += `${inputText}\\n`;\n            }\n\n            if (child.classList.contains('_media_')) {\n                let idx = child.childNodes.length;\n                while (idx--) {\n                    let c = child.childNodes[idx];\n                    if (c.nodeName === 'IMG') {\n                        for (const f of this.image_array) {\n                            if (f.elementId === c.id && f.source !== c.getAttribute('src')) {\n                                c.setAttribute('src', f.source);\n                                let cIdx = c.classList.length;\n                                while (cIdx--) {\n                                    if (c.classList[cIdx].includes('_img_') && c.classList[cIdx].length > 5) {\n                                        c.classList.remove(c.classList[cIdx]);\n                                        let splitUrl = f.source.split('/');\n                                        let splitTail = splitUrl[splitUrl.length - 1];\n                                        let splitTail_length = splitTail.length - 64;\n                                        const sourceClip = splitUrl[splitUrl.length - 1].substring(splitTail_length > 0 ? splitTail : 0);\n                                        c.classList.add('_img_' + sourceClip);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return {\n            html: setup.dom.innerHTML,\n            title: title.trim(),\n            text: text.trim(),\n            urllink: this.urllink ? this.urllink_array : undefined,\n            hashtag: this.hashtag ? this.hashtag_array : undefined,\n            image: this.image_array,\n            custom: this.custom_array\n        };\n    }\n\n    /**\n     * Set placeholder string\n     * @param {string} p - Set placeholder string.\n     */\n    setPlaceholder(p) {\n        if (this.element) {\n            if (p && typeof p === 'string') this.element.setAttribute(\"placeholder\", p);\n            else this.element.removeAttribute(\"placeholder\");\n        }\n    }\n\n    /**\n     * Set spellcheck mode\n     * @param {boolean} bool - Set spellcheck mode.\n     */\n    setSpellcheck(bool) {\n        if (this.element)\n            this.element.setAttribute(\"spellcheck\", bool ? 'on' : 'off');\n    }\n\n    /**\n     * Set edit mode\n     * @param {boolean} bool - Set wysiwyg to editable when true.\n     */\n    setEditable(bool) {\n        bool = this.element ? bool : false;\n\n        if (this.element)\n            this.element.setAttribute(\"contenteditable\", JSON.stringify(bool));\n\n        this._setEventListener(bool);\n        this._observeMutation(bool);\n    }\n}\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","colorNames","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","goldenrod","gold","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavenderblush","lavender","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","ColorMangle","constructor","color","fineTuned","this","format","_colorType","type","throwErr","chkType","string","toLowerCase","match","Array","isArray","length","exec","err","_extractDigit","color_arg","rgba","i","push","parseFloat","getAlpha","extract","colorScheme","darkMode","focusOriginal","focusSat","opacity","template","content_isHighLuminance","isHighLuminance","focus","includes","matchLuminance","compDir","analogous","focusHSL","hsla","h","an1HSL","an2HSL","Math","abs","complementary","fixedValue","darkModeAnalogous","analogousNude","k","textColor","assign","contrastRatio","unordered","keys","sort","reduce","target_color","target_ratio","direction","method","target","adj","m","dir","count","adj_set","adjustBrightness","adjustLuminance","legacy","hex","main_lum","_luminance","lum","currDir","lum_pre","deg","spin","v","val","hsl","plus","s","l","a","minus","add","_toString","r","g","b","rgb","map","pow","col","numberOrNot","n","def","color_arg1","color_arg2","lum1","lum2","option","blackOpacity","whiteOpacity","opa","c_min","min","c_max","max","delta","round","toFixed","digit","toString","slice","rgbObject","hexValues","parseInt","opacity_value","c","x","limit","rgbRange","result","adjustSaturation","Wysiwyg4All","hashtag_regex","hashtag_stopper_regex","urllink_regex","elementId","editable","placeholder","spellcheck","highlightColor","html","callback","fontSize","desktop","tablet","phone","lastLineBlank","hashtag","urllink","logMutation","fontSizeCssVariable","hold","keyArr","Error","substring","image_array","hashtag_array","urllink_array","custom_array","blockElement_queryArray","specialTextElement_queryArray","restrictedElement_queryArray","textAreaElement_queryArray","textBlockElement_queryArray","ceilingElement_queryArray","unSelectable_queryArray","styleAllowedElement_queryArray","alignClass","hashtag_flag","urllink_flag","range_backup","commandTracker","range","isRangeDirectionForward","insertTabPending_tabString","removeSandwichedLine_array","lastKey","element","document","getElementById","innerHTML","cssVariable","style","setProperty","elementComputedStyle","window","getComputedStyle","defaultFontColor","classList","contains","setPlaceholder","setSpellcheck","paddingB","paddingBottom","paddingT","paddingTop","borderT","borderTopWidth","borderB","borderBottomWidth","minHeight","command","h1","h2","h3","h4","h5","h6","italic","small","bold","underline","strike","fontSizeRatio","styleTagOfCommand","counterTagOf","cssPropertyOf","cssPropertyChecker","documentFontSize","nodeFontSize","tag","compare_size","loadHTML","catch","_adjustSelection","ceilingElement_query","toArray","allowObject","setRange","node","position","sel","getSelection","getRangeAt","createRange","p","Node","setTarget","nodeType","lastChild","firstChild","textLength","_nodeCrawler","textContent","parentNode","getAttribute","text","createTextNode","insertBefore","childNodes","nodeName","previousSibling","setEnd","doCollapse","setStart","startContainer","startOffset","endContainer","endOffset","collapse","removeAllRanges","addRange","startLine","endLine","q","e","closest","_climbUpToEldestParent","_generateId","prefix","charAt","floor","random","letter_array","array","temporaryValue","randomIndex","currentIndex","shuffleArray","Date","getTime","split","output","run","startFromEldestChild","startNode","commonAncestorContainer","parentAnchor","id","uniqueId","outputNodes","nodeIsRange","commonContainer","nodes","crawl","endNode","withInRange","cwl","breakOut","nextSibling","removeAttribute","_wrapNode","wrapper","appendWhole","start","end","withinRange","append","child","stripped","removeChild","_isSingleChildParent","childrenCount","children","sweep","divCount","iHaveText","singleChildParent","cb","_isSelectionWithinRestrictedRange","restrict","_classNameToQuery","_createEmptyParagraph","createElement","_trackStyle","cls","checker","sp","_isTextElement","_lastLineBlank","lastLine","_setEventListener","listen","removeEventListener","_selectionchange","imgInput","_keydown","_normalize","_paste","_keyup","entries","accept","hidden","multiple","setAttribute","addEventListener","_imageSelected","console","error","_modifySelection","isForward","rangeHeader","unSel","_isUnSelectableElement","selNext","collapsed","caratPosition","skipTrack","concat","quote","comm","caratEl","getBoundingClientRect","_callback","bind","toUpperCase","shift","shiftKey","preventDefault","stc","block","_isTextBlockElement","t","_replaceText","_setArrow","remove","sweep_array","hasIndent","diveAndRemoveTab","offset","line","container","containerOffset","lineOffset","tab","insertNode","stopPropagation","_normalizeDocument","cloneRange","doc","createDocumentFragment","clipboardData","getData","replace","u","extractContents","pop","_observeMutation","track","observer","disconnect","MutationObserver","mutation_array","monitor","cloneNode","name","attributeName","added","clones","addedNodes","removed","removedNodes","mutate","mutation","_","mutationTarget","callbackRemoved","what","arrIdx","splice","childIdx","toBreak","idx","getBr","br","isWysiwygChild","isWysiwygEldestChild","_isCeilingElement","ceiling","clo","isMediaElement","isBlockQuoteElement","isCustomElement","isHashtagElement","isUrlLinkElement","_isBlockElement","_isStyleAllowedElement","sa","doContinue","addBr","classSet","counter","toUnwrap","cIdx","set","class_idx","className","observe","attributes","childList","subtree","isAllRangeOnSameLine","currentLine","caratElement","arrowDirection","metaKey","ctrlKey","rangeSetup","removeZeroSpace","targetContainer","nudged","siblingDirection","isCaratOnMultiLine","el","posTarget","caratViewPortPosition","elPosition","phoneTextSize","height","nudgeRangeToInlineElement","display","_caratElement","nextEl","setDirection","isMultiLine","eldestParentOfCurrentLine","isCurrentLineInsideSubCeiling","siblingSet","reverse","backwardNode","forwardNode","_forwardNode","leap","collectOffset","currentOffset","_append","insertAfter","wrap","focusElement","common","insertRestricted","next","nodeToUnwrap","restricted","chk","notAllowed","fc","data","Promise","res","then","files","prepareForCallback","image","readFile","FileReader","load","file","onload","f","lastModified","size","source","img","Image","dimension","width","filename","fileSize","fileType","src","readAsDataURL","loading","feedback","restoreLastSelection","media","_loadImage","imageObject","classname","class","cl","tagName","onclick","st","pushArray","process","anchorElement","anchorNode","appendChild","normalize","cel","par","wholeDocument","typeName","setData","regex","anchorText","collected","textNodes","forEach","handler","hits","nxt","ownerDocument","global","nodeValue","lastIndex","handleResult","apply","results","orig","index","create","rest","createElementNS","namespaceURI","attrs","content","contentEditable","replaceTextNode","matched","textEl","toCallback","collectId","tc","dom","url","open","_checkElement","chkArr","_isTextAreaElement","_isSpecialTextElement","action","bq","li","ul","hr","click","collectLines","nextLine","isColor","query","stopperMode","pass","undefined","restrictedClass","span","replaceAll","unwrapTarget","rev","del","querySelectorAll","join","wrapperSplit","nestedWrapper","ws","lc","fn","lp","prev","custom","HTMLElement","insert","setEditable","div","imgCallback","imgId","JSON","parse","stringify","hashtagCallback","clIdx","urllinkCallback","customCallback","fb","imageParent","querySelector","pre","title","setup","promiseOrNot","strip","sid","inputText","titleSearchRegex","urlArray","j","splitUrl","splitTail","splitTail_length","sourceClip","trim","bool"],"sourceRoot":""}